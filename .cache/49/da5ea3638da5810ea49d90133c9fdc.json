{"id":"../node_modules/sha1/sha1.js","dependencies":[{"name":"/home/strukturart/Desktop/Pages/greg/package.json","includedInParent":true,"mtime":1644931973019},{"name":"/home/strukturart/Desktop/Pages/greg/node_modules/sha1/package.json","includedInParent":true,"mtime":1644699293905},{"name":"crypt","loc":{"line":2,"column":22,"index":36},"parent":"/home/strukturart/Desktop/Pages/greg/node_modules/sha1/sha1.js","resolved":"/home/strukturart/Desktop/Pages/greg/node_modules/crypt/crypt.js"},{"name":"charenc","loc":{"line":4,"column":20,"index":104},"parent":"/home/strukturart/Desktop/Pages/greg/node_modules/sha1/sha1.js","resolved":"/home/strukturart/Desktop/Pages/greg/node_modules/charenc/charenc.js"},{"name":"buffer","parent":"/home/strukturart/Desktop/Pages/greg/node_modules/sha1/sha1.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n(function() {\n  var crypt = require('crypt'),\n      utf8 = require('charenc').utf8,\n      bin = require('charenc').bin,\n\n  // The core\n  sha1 = function (message) {\n    // Convert to byte array\n    if (message.constructor == String)\n      message = utf8.stringToBytes(message);\n    else if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer == 'function' && Buffer.isBuffer(message))\n      message = Array.prototype.slice.call(message, 0);\n    else if (!Array.isArray(message))\n      message = message.toString();\n\n    // otherwise assume byte array\n\n    var m  = crypt.bytesToWords(message),\n        l  = message.length * 8,\n        w  = [],\n        H0 =  1732584193,\n        H1 = -271733879,\n        H2 = -1732584194,\n        H3 =  271733878,\n        H4 = -1009589776;\n\n    // Padding\n    m[l >> 5] |= 0x80 << (24 - l % 32);\n    m[((l + 64 >>> 9) << 4) + 15] = l;\n\n    for (var i = 0; i < m.length; i += 16) {\n      var a = H0,\n          b = H1,\n          c = H2,\n          d = H3,\n          e = H4;\n\n      for (var j = 0; j < 80; j++) {\n\n        if (j < 16)\n          w[j] = m[i + j];\n        else {\n          var n = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];\n          w[j] = (n << 1) | (n >>> 31);\n        }\n\n        var t = ((H0 << 5) | (H0 >>> 27)) + H4 + (w[j] >>> 0) + (\n                j < 20 ? (H1 & H2 | ~H1 & H3) + 1518500249 :\n                j < 40 ? (H1 ^ H2 ^ H3) + 1859775393 :\n                j < 60 ? (H1 & H2 | H1 & H3 | H2 & H3) - 1894007588 :\n                         (H1 ^ H2 ^ H3) - 899497514);\n\n        H4 = H3;\n        H3 = H2;\n        H2 = (H1 << 30) | (H1 >>> 2);\n        H1 = H0;\n        H0 = t;\n      }\n\n      H0 += a;\n      H1 += b;\n      H2 += c;\n      H3 += d;\n      H4 += e;\n    }\n\n    return [H0, H1, H2, H3, H4];\n  },\n\n  // Public API\n  api = function (message, options) {\n    var digestbytes = crypt.wordsToBytes(sha1(message));\n    return options && options.asBytes ? digestbytes :\n        options && options.asString ? bin.bytesToString(digestbytes) :\n        crypt.bytesToHex(digestbytes);\n  };\n\n  api._blocksize = 16;\n  api._digestsize = 20;\n\n  module.exports = api;\n})();\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/sha1/sha1.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/sha1/sha1.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}}],"sources":{"../node_modules/sha1/sha1.js":"(function() {\n  var crypt = require('crypt'),\n      utf8 = require('charenc').utf8,\n      bin = require('charenc').bin,\n\n  // The core\n  sha1 = function (message) {\n    // Convert to byte array\n    if (message.constructor == String)\n      message = utf8.stringToBytes(message);\n    else if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer == 'function' && Buffer.isBuffer(message))\n      message = Array.prototype.slice.call(message, 0);\n    else if (!Array.isArray(message))\n      message = message.toString();\n\n    // otherwise assume byte array\n\n    var m  = crypt.bytesToWords(message),\n        l  = message.length * 8,\n        w  = [],\n        H0 =  1732584193,\n        H1 = -271733879,\n        H2 = -1732584194,\n        H3 =  271733878,\n        H4 = -1009589776;\n\n    // Padding\n    m[l >> 5] |= 0x80 << (24 - l % 32);\n    m[((l + 64 >>> 9) << 4) + 15] = l;\n\n    for (var i = 0; i < m.length; i += 16) {\n      var a = H0,\n          b = H1,\n          c = H2,\n          d = H3,\n          e = H4;\n\n      for (var j = 0; j < 80; j++) {\n\n        if (j < 16)\n          w[j] = m[i + j];\n        else {\n          var n = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];\n          w[j] = (n << 1) | (n >>> 31);\n        }\n\n        var t = ((H0 << 5) | (H0 >>> 27)) + H4 + (w[j] >>> 0) + (\n                j < 20 ? (H1 & H2 | ~H1 & H3) + 1518500249 :\n                j < 40 ? (H1 ^ H2 ^ H3) + 1859775393 :\n                j < 60 ? (H1 & H2 | H1 & H3 | H2 & H3) - 1894007588 :\n                         (H1 ^ H2 ^ H3) - 899497514);\n\n        H4 = H3;\n        H3 = H2;\n        H2 = (H1 << 30) | (H1 >>> 2);\n        H1 = H0;\n        H0 = t;\n      }\n\n      H0 += a;\n      H1 += b;\n      H2 += c;\n      H3 += d;\n      H4 += e;\n    }\n\n    return [H0, H1, H2, H3, H4];\n  },\n\n  // Public API\n  api = function (message, options) {\n    var digestbytes = crypt.wordsToBytes(sha1(message));\n    return options && options.asBytes ? digestbytes :\n        options && options.asString ? bin.bytesToString(digestbytes) :\n        crypt.bytesToHex(digestbytes);\n  };\n\n  api._blocksize = 16;\n  api._digestsize = 20;\n\n  module.exports = api;\n})();\n"},"lineCount":84}},"error":null,"hash":"382d94a28c926c2233ca2ef0d99f4637","cacheData":{"env":{}}}