{"version":3,"sources":["assets/js/ical.js"],"names":["module","ICAL","exports","foldLength","newLineChar","helpers","updateTimezones","vcal","allsubs","properties","vtimezones","reqTzid","i","tzid","name","getAllSubcomponents","length","getFirstProperty","getFirstValue","concat","getAllProperties","getParameter","hasOwnProperty","removeSubcomponent","TimezoneService","has","addSubcomponent","get","component","isStrictlyNaN","number","isNaN","strictParseInt","string","result","parseInt","Error","formatClassType","data","type","unescapedIndexOf","buffer","search","pos","indexOf","binsearchInsert","list","seekVal","cmpfunc","low","mid","cmpval","high","Math","floor","dumpn","debug","console","input","log","dump","arguments","clone","aSrc","aDeep","Date","getTime","Array","isArray","arr","push","obj","Object","prototype","call","foldline","aLine","line","substr","pad2","len","String","trunc","ceil","inherits","base","child","extra","F","extend","source","target","key","descr","getOwnPropertyDescriptor","defineProperty","design","FROM_ICAL_NEWLINE","FROM_VCARD_NEWLINE","TO_VCARD_NEWLINE","createTextType","fromNewline","toNewline","matches","fromICAL","aValue","structuredEscape","replaceNewline","value","newline","RegExp","replace","replaceNewlineReplace","toICAL","regEx","str","DEFAULT_TYPE_TEXT","defaultType","DEFAULT_TYPE_TEXT_MULTI","multiValue","DEFAULT_TYPE_TEXT_STRUCTURED","structuredValue","DEFAULT_TYPE_INTEGER","DEFAULT_TYPE_DATETIME_DATE","allowedTypes","DEFAULT_TYPE_DATETIME","DEFAULT_TYPE_URI","DEFAULT_TYPE_UTCOFFSET","DEFAULT_TYPE_RECUR","DEFAULT_TYPE_DATE_ANDOR_TIME","commonProperties","commonValues","values","float","parsed","parseFloat","integer","decorate","UtcOffset","fromString","undecorate","toString","icalValues","text","uri","aString","Binary","aBinary","aProp","strict","Time","fromDateString","date","fromDateTimeString","duration","Duration","period","parts","split","isValueString","join","Period","fromJSON","toJSON","recur","Recur","_stringToData","k","val","numericDayToIcalDay","toUpperCase","fromData","aRecur","time","icalProperties","detectType","vcardValues","VCardTime","fromDateAndOrTimeString","splitzone","_splitZone","zone","isFromIcal","lastChar","signChar","sign","timestamp","vcardProperties","vcard3Values","binary","vcard","vcard3Properties","fn","n","nickname","photo","bday","adr","label","tel","email","mailer","tz","geo","title","role","logo","agent","org","note","prodid","rev","sound","class","icalSet","param","allowXName","allowIanaToken","valueType","multiValueSeparateDQuote","property","vcardSet","vcard3Set","defaultSet","components","vcard3","vevent","vtodo","vjournal","valarm","vtimezone","daylight","standard","icalendar","getDesignSet","componentName","isInDesign","stringify","LINE_ENDING","jCal","designSet","props","propIdx","propLen","designSetName","compIdx","comps","compLen","noFold","paramName","jsName","params","map","_rfc6868Unescape","propertyValue","propDetails","isDefault","slice","delim","innerMulti","x","RFC6868_REPLACE_MAP","parse","CHAR","ParserError","message","e","stack","shift","parser","state","root","_eachLine","err","_handleContentLine","valuePos","lastParamIndex","lastValuePos","parsedParams","paramPos","substring","toLowerCase","_parseParameters","newComponent","pop","propertyDetails","_parseMultiValue","_parseValue","start","lastParam","lcname","mvdelim","nextChar","_rfc6868Escape","extendedValue","nextPos","propValuePos","delimiter","lastPos","callback","firstChar","newlineOffset","trim","Component","parent","_hydratedPropertyCount","_hydratedComponentCount","_designSet","parentDesign","_hydrateComponent","index","_components","comp","_hydrateProperty","_properties","prop","Property","getFirstSubcomponent","jCalLen","hasProperty","getFirstPropertyValue","_removeObjectByIndex","jCalIndex","cache","splice","_removeObject","nameOrObject","objects","cached","_removeAllObjects","idx","nameOrComp","removed","removeAllSubcomponents","addProperty","TypeError","removeProperty","addPropertyWithValue","setValue","updatePropertyWithValue","nameOrProp","removeAllProperties","NAME_INDEX","TYPE_INDEX","_parent","getDefaultType","_updateType","p","designSetChanged","isDecorated","isMultiValue","isStructuredValue","_hydrateValue","_values","_decorate","_undecorate","_setDecoratedValue","undefined","getFirstParameter","parameters","setParameter","removeParameter","details","resetType","removeAllValues","getValues","setValues","icaltype","toICALString","aData","hours","minutes","factor","fromSeconds","toSeconds","_normalize","aSeconds","secs","abs","compare","other","a","b","options","instance","decodeValue","_b64_decode","setEncodedValue","_b64_encode","b64","h1","h2","h3","h4","bits","ac","enc","tmp_arr","charCodeAt","charAt","r","o1","o2","o3","fromCharCode","dec","wrappedJSObject","end","icalclass","getDuration","subtractDate","getEnd","addDuration","aLenient","fromDateOrDateTimeString","DURATION_LETTERS","parseDurationChunk","letter","object","isNegative","num","weeks","days","seconds","propsToCopy","reset","aOther","thisSeconds","otherSeconds","normalize","aStr","dict","create","chunks","numeric","OPTIONS","Timezone","location","tznames","latitude","longitude","expandedUntilYear","changes","utcOffset","tt","utcTimezone","localTimezone","_ensureCoverage","year","tt_change","month","day","hour","minute","second","change_num","_findNearbyChange","change_num_to_use","step","change","prevUtcOffset","adjust_change","_compare_change_fn","zone_change","utcOffset_change","tmp_change","prev_zone_change","is_daylight","aYear","_minimumExpansionYear","today","now","changesEndYear","EXTRA_COVERAGE","MAX_YEAR","subcomps","_expandComponent","sort","aComponent","dtstart","convert_tzoffset","offset","init_changes","changebase","rdatekey","rdate","isDate","rrule","until","adjust","occ","iterator","next","convert_time","from_zone","to_zone","zones","count","keys","utc","Z","UTC","GMT","register","timezone","remove","_time","_dowCache","_wnCache","_cachedUnixTime","_pendingNormalization","epochTime","resetTo","fromJSDate","aDate","useUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","aZone","dayOfWeek","aWeekStart","firstDow","SUNDAY","dowCacheKey","q","m","Y","h","dayOfYear","is_leap","isLeapYear","diypm","daysInYearPassedMonth","startOfWeek","endOfWeek","startOfMonth","endOfMonth","daysInMonth","startOfYear","endOfYear","startDoyWeek","aFirstDayOfWeek","delta","getDominicalLetter","nthWeekDay","aDayOfWeek","aPos","weekday","otherDay","startDow","isNthWeekDay","dow","weekNumber","wnCacheKey","week1","dt","isoyear","weekOneStarts","daysBetween","answer","aDuration","mult","unixTime","toUnixTime","subtractDateTz","compareDateOnlyTz","cmp","attr","_cmp_attr","convertToZone","rc","copy","zone_equals","toJSDate","aExtraDays","aExtraHours","aExtraMinutes","aExtraSeconds","aTime","minutesOverflow","hoursOverflow","daysOverflow","yearsOverflow","fromUnixTime","epoch","ms","defineAttr","set","_daysInMonth","fromDayOfYear","aDayOfYear","doy","auto_normalize","fromStringv2","aProperty","t","wkst","DEFAULT_WEEK_START","THURSDAY","yr","LTRS","dom","isLeap","MONDAY","TUESDAY","WEDNESDAY","FRIDAY","SATURDAY","apply","p2","y","d","mm","s","hasMonth","hasDay","hasHour","hasMinute","hasSecond","datepart","timepart","aIcalType","part","v","tmz","tm","dtlen","tmlen","hasDashDate","hasDashTime","o","DOW_MAP","SU","MO","TU","WE","TH","FR","SA","REVERSE_DOW_MAP","parseNumericValue","min","max","interval","freq","aStart","RecurIterator","rule","isFinite","isByCount","addComponent","aType","ucname","setComponent","aValues","getComponent","getNextOccurrence","aStartTime","aRecurrenceId","iter","uckey","partDesign","optionDesign","INTERVAL","icalDayToNumericDay","res","kparts","VALID_DAY_NAMES","VALID_BYDAY_PART","ALLOWED_FREQ","FREQ","fmtIcal","COUNT","UNTIL","WKST","test","BYSECOND","bind","BYMINUTE","BYHOUR","BYDAY","BYMONTHDAY","BYYEARDAY","BYWEEKNO","BYMONTH","BYSETPOS","partArrIdx","partArr","partArrLen","icalrecur_iterator","completed","last","occurrence_number","by_indices","initialized","by_data","days_index","init","sort_byday_rules","setup_defaults","bydayParts","ruleDayOfWeek","wkdy","dayName","expand_year_days","increment_year","_nextByYearDay","has_by_data","tempLast","initLast","dayOfMonth","increment_month","_byDayAndMonthDay","before","valid","next_second","next_minute","next_hour","next_day","next_week","next_month","next_year","check_contracting_rules","next_generic","increment_second","inc","increment_generic","increment_minute","increment_hour","has_by_day","this_freq","increment_monthday","end_of_data","next_weekday_by_week","week_no","normalizeByMonthDayRules","rules","ruleIdx","newRules","isInit","byMonthDay","dateLen","byDay","dateIdx","dayLen","dataIsValid","self","lastDay","initMonth","nextMonth","monthsCounter","dayIdx","data_valid","setpos","setpos_total","last_day","is_day_in_byday","check_set_position","coded_day","match","aRuleType","aInterval","aDateAttr","aFollowingAttr","aPreviousIncr","has_by_rule","dta","years","aFactor","aNextIncrement","nextunit","validWeeks","monthIdx","first_week","last_week","weekIdx","weekno","partCount","t1","monthkey","t2","monthdaykey","t3","day_","month_","expand_by_day","first_dow","doy_offset","last_dow","set_pos_counter","by_month_day","spIndex","daycodedkey","month_day","first_matching_day","last_matching_day","expandedDays","daykey","days_list","tmp","start_dow","end_dow","end_year_day","tmp_start_doy","first","this_dow","aRules","j","one","check_contract_restriction","indexMapValue","_indexMap","ruleMapValue","_expandMap","pass","CONTRACT","ruleType","bydatakey","weekNo","req","deftime","UNKNOWN","EXPAND","ILLEGAL","RecurExpansion","formatTime","item","compareTime","ruleDates","exDates","complete","ruleIterators","ruleDateInc","exDateInc","exDate","ruleDate","_init","currentTry","_nextRecurrenceIter","_nextRuleDay","_nextExDay","_extractDates","propertyName","handleProp","forEach","isRecurringComponent","iters","iterIdx","iterTime","chosenIter","Event","_rangeExceptionCache","exceptions","rangeExceptions","strictExceptions","relateException","isRecurrenceException","event","compareRangeException","THISANDFUTURE","uid","id","recurrenceId","modifiesFuture","findRangeException","rangeItem","getOccurrenceDetails","occurrence","utcId","startDate","endDate","rangeExceptionId","exception","startDiff","original","newStart","startTime","isRecurring","getRecurrenceTypes","_firstProp","_setProp","_setTime","attendees","summary","description","organizer","sequence","propName","ComponentParser","parseEvent","parseTimezone","oncomplete","onerror","ontimezone","onevent","process","ical"],"mappings":"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","file":"ical.f5e7d1a2.js","sourceRoot":"../application","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/* istanbul ignore next */\n/* jshint ignore:start */\nif (typeof module === 'object') {\n  // CommonJS, where exports may be different each time.\n  ICAL = module.exports;\n} else if (typeof ICAL !== 'object') {/* istanbul ignore next */\n  /** @ignore */\n  this.ICAL = {};\n}\n/* jshint ignore:end */\n\n\n/**\n * The number of characters before iCalendar line folding should occur\n * @type {Number}\n * @default 75\n */\nICAL.foldLength = 75;\n\n\n/**\n * The character(s) to be used for a newline. The default value is provided by\n * rfc5545.\n * @type {String}\n * @default \"\\r\\n\"\n */\nICAL.newLineChar = '\\r\\n';\n\n\n/**\n * Helper functions used in various places within ical.js\n * @namespace\n */\nICAL.helpers = {\n  /**\n   * Compiles a list of all referenced TZIDs in all subcomponents and\n   * removes any extra VTIMEZONE subcomponents. In addition, if any TZIDs\n   * are referenced by a component, but a VTIMEZONE does not exist,\n   * an attempt will be made to generate a VTIMEZONE using ICAL.TimezoneService.\n   *\n   * @param {ICAL.Component} vcal     The top-level VCALENDAR component.\n   * @return {ICAL.Component}         The ICAL.Component that was passed in.\n   */\n  updateTimezones: function(vcal) {\n    var allsubs, properties, vtimezones, reqTzid, i, tzid;\n\n    if (!vcal || vcal.name !== \"vcalendar\") {\n      //not a top-level vcalendar component\n      return vcal;\n    }\n\n    //Store vtimezone subcomponents in an object reference by tzid.\n    //Store properties from everything else in another array\n    allsubs = vcal.getAllSubcomponents();\n    properties = [];\n    vtimezones = {};\n    for (i = 0; i < allsubs.length; i++) {\n      if (allsubs[i].name === \"vtimezone\") {\n        tzid = allsubs[i].getFirstProperty(\"tzid\").getFirstValue();\n        vtimezones[tzid] = allsubs[i];\n      } else {\n        properties = properties.concat(allsubs[i].getAllProperties());\n      }\n    }\n\n    //create an object with one entry for each required tz\n    reqTzid = {};\n    for (i = 0; i < properties.length; i++) {\n      if ((tzid = properties[i].getParameter(\"tzid\"))) {\n        reqTzid[tzid] = true;\n      }\n    }\n\n    //delete any vtimezones that are not on the reqTzid list.\n    for (i in vtimezones) {\n      if (vtimezones.hasOwnProperty(i) && !reqTzid[i]) {\n        vcal.removeSubcomponent(vtimezones[i]);\n      }\n    }\n\n    //create any missing, but registered timezones\n    for (i in reqTzid) {\n      if (\n        reqTzid.hasOwnProperty(i) &&\n        !vtimezones[i] &&\n        ICAL.TimezoneService.has(i)\n      ) {\n        vcal.addSubcomponent(ICAL.TimezoneService.get(i).component);\n      }\n    }\n\n    return vcal;\n  },\n\n  /**\n   * Checks if the given type is of the number type and also NaN.\n   *\n   * @param {Number} number     The number to check\n   * @return {Boolean}          True, if the number is strictly NaN\n   */\n  isStrictlyNaN: function(number) {\n    return typeof(number) === 'number' && isNaN(number);\n  },\n\n  /**\n   * Parses a string value that is expected to be an integer, when the valid is\n   * not an integer throws a decoration error.\n   *\n   * @param {String} string     Raw string input\n   * @return {Number}           Parsed integer\n   */\n  strictParseInt: function(string) {\n    var result = parseInt(string, 10);\n\n    if (ICAL.helpers.isStrictlyNaN(result)) {\n      throw new Error(\n        'Could not extract integer from \"' + string + '\"'\n      );\n    }\n\n    return result;\n  },\n\n  /**\n   * Creates or returns a class instance of a given type with the initialization\n   * data if the data is not already an instance of the given type.\n   *\n   * @example\n   * var time = new ICAL.Time(...);\n   * var result = ICAL.helpers.formatClassType(time, ICAL.Time);\n   *\n   * (result instanceof ICAL.Time)\n   * // => true\n   *\n   * result = ICAL.helpers.formatClassType({}, ICAL.Time);\n   * (result isntanceof ICAL.Time)\n   * // => true\n   *\n   *\n   * @param {Object} data       object initialization data\n   * @param {Object} type       object type (like ICAL.Time)\n   * @return {?}                An instance of the found type.\n   */\n  formatClassType: function formatClassType(data, type) {\n    if (typeof(data) === 'undefined') {\n      return undefined;\n    }\n\n    if (data instanceof type) {\n      return data;\n    }\n    return new type(data);\n  },\n\n  /**\n   * Identical to indexOf but will only match values when they are not preceded\n   * by a backslash character.\n   *\n   * @param {String} buffer         String to search\n   * @param {String} search         Value to look for\n   * @param {Number} pos            Start position\n   * @return {Number}               The position, or -1 if not found\n   */\n  unescapedIndexOf: function(buffer, search, pos) {\n    while ((pos = buffer.indexOf(search, pos)) !== -1) {\n      if (pos > 0 && buffer[pos - 1] === '\\\\') {\n        pos += 1;\n      } else {\n        return pos;\n      }\n    }\n    return -1;\n  },\n\n  /**\n   * Find the index for insertion using binary search.\n   *\n   * @param {Array} list            The list to search\n   * @param {?} seekVal             The value to insert\n   * @param {function(?,?)} cmpfunc The comparison func, that can\n   *                                  compare two seekVals\n   * @return {Number}               The insert position\n   */\n  binsearchInsert: function(list, seekVal, cmpfunc) {\n    if (!list.length)\n      return 0;\n\n    var low = 0, high = list.length - 1,\n        mid, cmpval;\n\n    while (low <= high) {\n      mid = low + Math.floor((high - low) / 2);\n      cmpval = cmpfunc(seekVal, list[mid]);\n\n      if (cmpval < 0)\n        high = mid - 1;\n      else if (cmpval > 0)\n        low = mid + 1;\n      else\n        break;\n    }\n\n    if (cmpval < 0)\n      return mid; // insertion is displacing, so use mid outright.\n    else if (cmpval > 0)\n      return mid + 1;\n    else\n      return mid;\n  },\n\n  /**\n   * Convenience function for debug output\n   * @private\n   */\n  dumpn: /* istanbul ignore next */ function() {\n    if (!ICAL.debug) {\n      return;\n    }\n\n    if (typeof (console) !== 'undefined' && 'log' in console) {\n      ICAL.helpers.dumpn = function consoleDumpn(input) {\n        console.log(input);\n      };\n    } else {\n      ICAL.helpers.dumpn = function geckoDumpn(input) {\n        dump(input + '\\n');\n      };\n    }\n\n    ICAL.helpers.dumpn(arguments[0]);\n  },\n\n  /**\n   * Clone the passed object or primitive. By default a shallow clone will be\n   * executed.\n   *\n   * @param {*} aSrc            The thing to clone\n   * @param {Boolean=} aDeep    If true, a deep clone will be performed\n   * @return {*}                The copy of the thing\n   */\n  clone: function(aSrc, aDeep) {\n    if (!aSrc || typeof aSrc != \"object\") {\n      return aSrc;\n    } else if (aSrc instanceof Date) {\n      return new Date(aSrc.getTime());\n    } else if (\"clone\" in aSrc) {\n      return aSrc.clone();\n    } else if (Array.isArray(aSrc)) {\n      var arr = [];\n      for (var i = 0; i < aSrc.length; i++) {\n        arr.push(aDeep ? ICAL.helpers.clone(aSrc[i], true) : aSrc[i]);\n      }\n      return arr;\n    } else {\n      var obj = {};\n      for (var name in aSrc) {\n        // uses prototype method to allow use of Object.create(null);\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(aSrc, name)) {\n          if (aDeep) {\n            obj[name] = ICAL.helpers.clone(aSrc[name], true);\n          } else {\n            obj[name] = aSrc[name];\n          }\n        }\n      }\n      return obj;\n    }\n  },\n\n  /**\n   * Performs iCalendar line folding. A line ending character is inserted and\n   * the next line begins with a whitespace.\n   *\n   * @example\n   * SUMMARY:This line will be fold\n   *  ed right in the middle of a word.\n   *\n   * @param {String} aLine      The line to fold\n   * @return {String}           The folded line\n   */\n  foldline: function foldline(aLine) {\n    var result = \"\";\n    var line = aLine || \"\";\n\n    while (line.length) {\n      result += ICAL.newLineChar + \" \" + line.substr(0, ICAL.foldLength);\n      line = line.substr(ICAL.foldLength);\n    }\n    return result.substr(ICAL.newLineChar.length + 1);\n  },\n\n  /**\n   * Pads the given string or number with zeros so it will have at least two\n   * characters.\n   *\n   * @param {String|Number} data    The string or number to pad\n   * @return {String}               The number padded as a string\n   */\n  pad2: function pad(data) {\n    if (typeof(data) !== 'string') {\n      // handle fractions.\n      if (typeof(data) === 'number') {\n        data = parseInt(data);\n      }\n      data = String(data);\n    }\n\n    var len = data.length;\n\n    switch (len) {\n      case 0:\n        return '00';\n      case 1:\n        return '0' + data;\n      default:\n        return data;\n    }\n  },\n\n  /**\n   * Truncates the given number, correctly handling negative numbers.\n   *\n   * @param {Number} number     The number to truncate\n   * @return {Number}           The truncated number\n   */\n  trunc: function trunc(number) {\n    return (number < 0 ? Math.ceil(number) : Math.floor(number));\n  },\n\n  /**\n   * Poor-man's cross-browser inheritance for JavaScript. Doesn't support all\n   * the features, but enough for our usage.\n   *\n   * @param {Function} base     The base class constructor function.\n   * @param {Function} child    The child class constructor function.\n   * @param {Object} extra      Extends the prototype with extra properties\n   *                              and methods\n   */\n  inherits: function(base, child, extra) {\n    function F() {}\n    F.prototype = base.prototype;\n    child.prototype = new F();\n\n    if (extra) {\n      ICAL.helpers.extend(extra, child.prototype);\n    }\n  },\n\n  /**\n   * Poor-man's cross-browser object extension. Doesn't support all the\n   * features, but enough for our usage. Note that the target's properties are\n   * not overwritten with the source properties.\n   *\n   * @example\n   * var child = ICAL.helpers.extend(parent, {\n   *   \"bar\": 123\n   * });\n   *\n   * @param {Object} source     The object to extend\n   * @param {Object} target     The object to extend with\n   * @return {Object}           Returns the target.\n   */\n  extend: function(source, target) {\n    for (var key in source) {\n      var descr = Object.getOwnPropertyDescriptor(source, key);\n      if (descr && !Object.getOwnPropertyDescriptor(target, key)) {\n        Object.defineProperty(target, key, descr);\n      }\n    }\n    return target;\n  }\n};\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/** @namespace ICAL */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.design = (function() {\n  'use strict';\n\n  var FROM_ICAL_NEWLINE = /\\\\\\\\|\\\\;|\\\\,|\\\\[Nn]/g;\n  var TO_ICAL_NEWLINE = /\\\\|;|,|\\n/g;\n  var FROM_VCARD_NEWLINE = /\\\\\\\\|\\\\,|\\\\[Nn]/g;\n  var TO_VCARD_NEWLINE = /\\\\|,|\\n/g;\n\n  function createTextType(fromNewline, toNewline) {\n    var result = {\n      matches: /.*/,\n\n      fromICAL: function(aValue, structuredEscape) {\n        return replaceNewline(aValue, fromNewline, structuredEscape);\n      },\n\n      toICAL: function(aValue, structuredEscape) {\n        var regEx = toNewline;\n        if (structuredEscape)\n          regEx = new RegExp(regEx.source + '|' + structuredEscape);\n        return aValue.replace(regEx, function(str) {\n          switch (str) {\n          case \"\\\\\":\n            return \"\\\\\\\\\";\n          case \";\":\n            return \"\\\\;\";\n          case \",\":\n            return \"\\\\,\";\n          case \"\\n\":\n            return \"\\\\n\";\n          /* istanbul ignore next */\n          default:\n            return str;\n          }\n        });\n      }\n    };\n    return result;\n  }\n\n  // default types used multiple times\n  var DEFAULT_TYPE_TEXT = { defaultType: \"text\" };\n  var DEFAULT_TYPE_TEXT_MULTI = { defaultType: \"text\", multiValue: \",\" };\n  var DEFAULT_TYPE_TEXT_STRUCTURED = { defaultType: \"text\", structuredValue: \";\" };\n  var DEFAULT_TYPE_INTEGER = { defaultType: \"integer\" };\n  var DEFAULT_TYPE_DATETIME_DATE = { defaultType: \"date-time\", allowedTypes: [\"date-time\", \"date\"] };\n  var DEFAULT_TYPE_DATETIME = { defaultType: \"date-time\" };\n  var DEFAULT_TYPE_URI = { defaultType: \"uri\" };\n  var DEFAULT_TYPE_UTCOFFSET = { defaultType: \"utc-offset\" };\n  var DEFAULT_TYPE_RECUR = { defaultType: \"recur\" };\n  var DEFAULT_TYPE_DATE_ANDOR_TIME = { defaultType: \"date-and-or-time\", allowedTypes: [\"date-time\", \"date\", \"text\"] };\n\n  function replaceNewlineReplace(string) {\n    switch (string) {\n      case \"\\\\\\\\\":\n        return \"\\\\\";\n      case \"\\\\;\":\n        return \";\";\n      case \"\\\\,\":\n        return \",\";\n      case \"\\\\n\":\n      case \"\\\\N\":\n        return \"\\n\";\n      /* istanbul ignore next */\n      default:\n        return string;\n    }\n  }\n\n  function replaceNewline(value, newline, structuredEscape) {\n    // avoid regex when possible.\n    if (value.indexOf('\\\\') === -1) {\n      return value;\n    }\n    if (structuredEscape)\n      newline = new RegExp(newline.source + '|\\\\\\\\' + structuredEscape);\n    return value.replace(newline, replaceNewlineReplace);\n  }\n\n  var commonProperties = {\n    \"categories\": DEFAULT_TYPE_TEXT_MULTI,\n    \"url\": DEFAULT_TYPE_URI,\n    \"version\": DEFAULT_TYPE_TEXT,\n    \"uid\": DEFAULT_TYPE_TEXT\n  };\n\n  var commonValues = {\n    \"boolean\": {\n      values: [\"TRUE\", \"FALSE\"],\n\n      fromICAL: function(aValue) {\n        switch (aValue) {\n          case 'TRUE':\n            return true;\n          case 'FALSE':\n            return false;\n          default:\n            //TODO: parser warning\n            return false;\n        }\n      },\n\n      toICAL: function(aValue) {\n        if (aValue) {\n          return 'TRUE';\n        }\n        return 'FALSE';\n      }\n\n    },\n    float: {\n      matches: /^[+-]?\\d+\\.\\d+$/,\n\n      fromICAL: function(aValue) {\n        var parsed = parseFloat(aValue);\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          // TODO: parser warning\n          return 0.0;\n        }\n        return parsed;\n      },\n\n      toICAL: function(aValue) {\n        return String(aValue);\n      }\n    },\n    integer: {\n      fromICAL: function(aValue) {\n        var parsed = parseInt(aValue);\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          return 0;\n        }\n        return parsed;\n      },\n\n      toICAL: function(aValue) {\n        return String(aValue);\n      }\n    },\n    \"utc-offset\": {\n      toICAL: function(aValue) {\n        if (aValue.length < 7) {\n          // no seconds\n          // -0500\n          return aValue.substr(0, 3) +\n                 aValue.substr(4, 2);\n        } else {\n          // seconds\n          // -050000\n          return aValue.substr(0, 3) +\n                 aValue.substr(4, 2) +\n                 aValue.substr(7, 2);\n        }\n      },\n\n      fromICAL: function(aValue) {\n        if (aValue.length < 6) {\n          // no seconds\n          // -05:00\n          return aValue.substr(0, 3) + ':' +\n                 aValue.substr(3, 2);\n        } else {\n          // seconds\n          // -05:00:00\n          return aValue.substr(0, 3) + ':' +\n                 aValue.substr(3, 2) + ':' +\n                 aValue.substr(5, 2);\n        }\n      },\n\n      decorate: function(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    }\n  };\n\n  var icalParams = {\n    // Although the syntax is DQUOTE uri DQUOTE, I don't think we should\n    // enfoce anything aside from it being a valid content line.\n    //\n    // At least some params require - if multi values are used - DQUOTEs\n    // for each of its values - e.g. delegated-from=\"uri1\",\"uri2\"\n    // To indicate this, I introduced the new k/v pair\n    // multiValueSeparateDQuote: true\n    //\n    // \"ALTREP\": { ... },\n\n    // CN just wants a param-value\n    // \"CN\": { ... }\n\n    \"cutype\": {\n      values: [\"INDIVIDUAL\", \"GROUP\", \"RESOURCE\", \"ROOM\", \"UNKNOWN\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n\n    \"delegated-from\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"delegated-to\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    // \"DIR\": { ... }, // See ALTREP\n    \"encoding\": {\n      values: [\"8BIT\", \"BASE64\"]\n    },\n    // \"FMTTYPE\": { ... }, // See ALTREP\n    \"fbtype\": {\n      values: [\"FREE\", \"BUSY\", \"BUSY-UNAVAILABLE\", \"BUSY-TENTATIVE\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    // \"LANGUAGE\": { ... }, // See ALTREP\n    \"member\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"partstat\": {\n      // TODO These values are actually different per-component\n      values: [\"NEEDS-ACTION\", \"ACCEPTED\", \"DECLINED\", \"TENTATIVE\",\n               \"DELEGATED\", \"COMPLETED\", \"IN-PROCESS\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"range\": {\n      values: [\"THISLANDFUTURE\"]\n    },\n    \"related\": {\n      values: [\"START\", \"END\"]\n    },\n    \"reltype\": {\n      values: [\"PARENT\", \"CHILD\", \"SIBLING\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"role\": {\n      values: [\"REQ-PARTICIPANT\", \"CHAIR\",\n               \"OPT-PARTICIPANT\", \"NON-PARTICIPANT\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"rsvp\": {\n      values: [\"TRUE\", \"FALSE\"]\n    },\n    \"sent-by\": {\n      valueType: \"cal-address\"\n    },\n    \"tzid\": {\n      matches: /^\\//\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"binary\", \"boolean\", \"cal-address\", \"date\", \"date-time\",\n               \"duration\", \"float\", \"integer\", \"period\", \"recur\", \"text\",\n               \"time\", \"uri\", \"utc-offset\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  // When adding a value here, be sure to add it to the parameter types!\n  var icalValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),\n\n    uri: {\n      // TODO\n      /* ... */\n    },\n\n    \"binary\": {\n      decorate: function(aString) {\n        return ICAL.Binary.fromString(aString);\n      },\n\n      undecorate: function(aBinary) {\n        return aBinary.toString();\n      }\n    },\n    \"cal-address\": {\n      // needs to be an uri\n    },\n    \"date\": {\n      decorate: function(aValue, aProp) {\n        if (design.strict) {\n          return ICAL.Time.fromDateString(aValue, aProp);\n        } else {\n          return ICAL.Time.fromString(aValue, aProp);\n        }\n      },\n\n      /**\n       * undecorates a time object.\n       */\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        // from: 20120901\n        // to: 2012-09-01\n        if (!design.strict && aValue.length >= 15) {\n          // This is probably a date-time, e.g. 20120901T130000Z\n          return icalValues[\"date-time\"].fromICAL(aValue);\n        } else {\n          return aValue.substr(0, 4) + '-' +\n                 aValue.substr(4, 2) + '-' +\n                 aValue.substr(6, 2);\n        }\n      },\n\n      toICAL: function(aValue) {\n        // from: 2012-09-01\n        // to: 20120901\n        var len = aValue.length;\n\n        if (len == 10) {\n          return aValue.substr(0, 4) +\n                 aValue.substr(5, 2) +\n                 aValue.substr(8, 2);\n        } else if (len >= 19) {\n          return icalValues[\"date-time\"].toICAL(aValue);\n        } else {\n          //TODO: serialize warning?\n          return aValue;\n        }\n\n      }\n    },\n    \"date-time\": {\n      fromICAL: function(aValue) {\n        // from: 20120901T130000\n        // to: 2012-09-01T13:00:00\n        if (!design.strict && aValue.length == 8) {\n          // This is probably a date, e.g. 20120901\n          return icalValues.date.fromICAL(aValue);\n        } else {\n          var result = aValue.substr(0, 4) + '-' +\n                       aValue.substr(4, 2) + '-' +\n                       aValue.substr(6, 2) + 'T' +\n                       aValue.substr(9, 2) + ':' +\n                       aValue.substr(11, 2) + ':' +\n                       aValue.substr(13, 2);\n\n          if (aValue[15] && aValue[15] === 'Z') {\n            result += 'Z';\n          }\n\n          return result;\n        }\n      },\n\n      toICAL: function(aValue) {\n        // from: 2012-09-01T13:00:00\n        // to: 20120901T130000\n        var len = aValue.length;\n\n        if (len == 10 && !design.strict) {\n          return icalValues.date.toICAL(aValue);\n        } else if (len >= 19) {\n          var result = aValue.substr(0, 4) +\n                       aValue.substr(5, 2) +\n                       // grab the (DDTHH) segment\n                       aValue.substr(8, 5) +\n                       // MM\n                       aValue.substr(14, 2) +\n                       // SS\n                       aValue.substr(17, 2);\n\n          if (aValue[19] && aValue[19] === 'Z') {\n            result += 'Z';\n          }\n          return result;\n        } else {\n          // TODO: error\n          return aValue;\n        }\n      },\n\n      decorate: function(aValue, aProp) {\n        if (design.strict) {\n          return ICAL.Time.fromDateTimeString(aValue, aProp);\n        } else {\n          return ICAL.Time.fromString(aValue, aProp);\n        }\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    },\n    duration: {\n      decorate: function(aValue) {\n        return ICAL.Duration.fromString(aValue);\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    },\n    period: {\n\n      fromICAL: function(string) {\n        var parts = string.split('/');\n        parts[0] = icalValues['date-time'].fromICAL(parts[0]);\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          parts[1] = icalValues['date-time'].fromICAL(parts[1]);\n        }\n\n        return parts;\n      },\n\n      toICAL: function(parts) {\n        if (!design.strict && parts[0].length == 10) {\n          parts[0] = icalValues.date.toICAL(parts[0]);\n        } else {\n          parts[0] = icalValues['date-time'].toICAL(parts[0]);\n        }\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          if (!design.strict && parts[1].length == 10) {\n            parts[1] = icalValues.date.toICAL(parts[1]);\n          } else {\n            parts[1] = icalValues['date-time'].toICAL(parts[1]);\n          }\n        }\n\n        return parts.join(\"/\");\n      },\n\n      decorate: function(aValue, aProp) {\n        return ICAL.Period.fromJSON(aValue, aProp, !design.strict);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toJSON();\n      }\n    },\n    recur: {\n      fromICAL: function(string) {\n        return ICAL.Recur._stringToData(string, true);\n      },\n\n      toICAL: function(data) {\n        var str = \"\";\n        for (var k in data) {\n          /* istanbul ignore if */\n          if (!Object.prototype.hasOwnProperty.call(data, k)) {\n            continue;\n          }\n          var val = data[k];\n          if (k == \"until\") {\n            if (val.length > 10) {\n              val = icalValues['date-time'].toICAL(val);\n            } else {\n              val = icalValues.date.toICAL(val);\n            }\n          } else if (k == \"wkst\") {\n            if (typeof val === 'number') {\n              val = ICAL.Recur.numericDayToIcalDay(val);\n            }\n          } else if (Array.isArray(val)) {\n            val = val.join(\",\");\n          }\n          str += k.toUpperCase() + \"=\" + val + \";\";\n        }\n        return str.substr(0, str.length - 1);\n      },\n\n      decorate: function decorate(aValue) {\n        return ICAL.Recur.fromData(aValue);\n      },\n\n      undecorate: function(aRecur) {\n        return aRecur.toJSON();\n      }\n    },\n\n    time: {\n      fromICAL: function(aValue) {\n        // from: MMHHSS(Z)?\n        // to: HH:MM:SS(Z)?\n        if (aValue.length < 6) {\n          // TODO: parser exception?\n          return aValue;\n        }\n\n        // HH::MM::SSZ?\n        var result = aValue.substr(0, 2) + ':' +\n                     aValue.substr(2, 2) + ':' +\n                     aValue.substr(4, 2);\n\n        if (aValue[6] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      },\n\n      toICAL: function(aValue) {\n        // from: HH:MM:SS(Z)?\n        // to: MMHHSS(Z)?\n        if (aValue.length < 8) {\n          //TODO: error\n          return aValue;\n        }\n\n        var result = aValue.substr(0, 2) +\n                     aValue.substr(3, 2) +\n                     aValue.substr(6, 2);\n\n        if (aValue[8] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      }\n    }\n  });\n\n  var icalProperties = ICAL.helpers.extend(commonProperties, {\n\n    \"action\": DEFAULT_TYPE_TEXT,\n    \"attach\": { defaultType: \"uri\" },\n    \"attendee\": { defaultType: \"cal-address\" },\n    \"calscale\": DEFAULT_TYPE_TEXT,\n    \"class\": DEFAULT_TYPE_TEXT,\n    \"comment\": DEFAULT_TYPE_TEXT,\n    \"completed\": DEFAULT_TYPE_DATETIME,\n    \"contact\": DEFAULT_TYPE_TEXT,\n    \"created\": DEFAULT_TYPE_DATETIME,\n    \"description\": DEFAULT_TYPE_TEXT,\n    \"dtend\": DEFAULT_TYPE_DATETIME_DATE,\n    \"dtstamp\": DEFAULT_TYPE_DATETIME,\n    \"dtstart\": DEFAULT_TYPE_DATETIME_DATE,\n    \"due\": DEFAULT_TYPE_DATETIME_DATE,\n    \"duration\": { defaultType: \"duration\" },\n    \"exdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      multiValue: ','\n    },\n    \"exrule\": DEFAULT_TYPE_RECUR,\n    \"freebusy\": { defaultType: \"period\", multiValue: \",\" },\n    \"geo\": { defaultType: \"float\", structuredValue: \";\" },\n    \"last-modified\": DEFAULT_TYPE_DATETIME,\n    \"location\": DEFAULT_TYPE_TEXT,\n    \"method\": DEFAULT_TYPE_TEXT,\n    \"organizer\": { defaultType: \"cal-address\" },\n    \"percent-complete\": DEFAULT_TYPE_INTEGER,\n    \"priority\": DEFAULT_TYPE_INTEGER,\n    \"prodid\": DEFAULT_TYPE_TEXT,\n    \"related-to\": DEFAULT_TYPE_TEXT,\n    \"repeat\": DEFAULT_TYPE_INTEGER,\n    \"rdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\", \"period\"],\n      multiValue: ',',\n      detectType: function(string) {\n        if (string.indexOf('/') !== -1) {\n          return 'period';\n        }\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n    \"recurrence-id\": DEFAULT_TYPE_DATETIME_DATE,\n    \"resources\": DEFAULT_TYPE_TEXT_MULTI,\n    \"request-status\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"rrule\": DEFAULT_TYPE_RECUR,\n    \"sequence\": DEFAULT_TYPE_INTEGER,\n    \"status\": DEFAULT_TYPE_TEXT,\n    \"summary\": DEFAULT_TYPE_TEXT,\n    \"transp\": DEFAULT_TYPE_TEXT,\n    \"trigger\": { defaultType: \"duration\", allowedTypes: [\"duration\", \"date-time\"] },\n    \"tzoffsetfrom\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzoffsetto\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzurl\": DEFAULT_TYPE_URI,\n    \"tzid\": DEFAULT_TYPE_TEXT,\n    \"tzname\": DEFAULT_TYPE_TEXT\n  });\n\n  // When adding a value here, be sure to add it to the parameter types!\n  var vcardValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n    uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n\n    date: {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date\");\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function(aValue) {\n        if (aValue.length == 8) {\n          return icalValues.date.fromICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 6) {\n          return aValue.substr(0, 4) + '-' + aValue.substr(4);\n        } else {\n          return aValue;\n        }\n      },\n      toICAL: function(aValue) {\n        if (aValue.length == 10) {\n          return icalValues.date.toICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 7) {\n          return aValue.substr(0, 4) + aValue.substr(5);\n        } else {\n          return aValue;\n        }\n      }\n    },\n\n    time: {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(\"T\" + aValue, \"time\");\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue, true);\n        var zone = splitzone[0], value = splitzone[1];\n\n        //console.log(\"SPLIT: \",splitzone);\n\n        if (value.length == 6) {\n          value = value.substr(0, 2) + ':' +\n                  value.substr(2, 2) + ':' +\n                  value.substr(4, 2);\n        } else if (value.length == 4 && value[0] != '-') {\n          value = value.substr(0, 2) + ':' + value.substr(2, 2);\n        } else if (value.length == 5) {\n          value = value.substr(0, 3) + ':' + value.substr(3, 2);\n        }\n\n        if (zone.length == 5 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + ':' + zone.substr(3);\n        }\n\n        return value + zone;\n      },\n\n      toICAL: function(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue);\n        var zone = splitzone[0], value = splitzone[1];\n\n        if (value.length == 8) {\n          value = value.substr(0, 2) +\n                  value.substr(3, 2) +\n                  value.substr(6, 2);\n        } else if (value.length == 5 && value[0] != '-') {\n          value = value.substr(0, 2) + value.substr(3, 2);\n        } else if (value.length == 6) {\n          value = value.substr(0, 3) + value.substr(4, 2);\n        }\n\n        if (zone.length == 6 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + zone.substr(4);\n        }\n\n        return value + zone;\n      },\n\n      _splitZone: function(aValue, isFromIcal) {\n        var lastChar = aValue.length - 1;\n        var signChar = aValue.length - (isFromIcal ? 5 : 6);\n        var sign = aValue[signChar];\n        var zone, value;\n\n        if (aValue[lastChar] == 'Z') {\n          zone = aValue[lastChar];\n          value = aValue.substr(0, lastChar);\n        } else if (aValue.length > 6 && (sign == '-' || sign == '+')) {\n          zone = aValue.substr(signChar);\n          value = aValue.substr(0, signChar);\n        } else {\n          zone = \"\";\n          value = aValue;\n        }\n\n        return [zone, value];\n      }\n    },\n\n    \"date-time\": {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-time\");\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        return vcardValues['date-and-or-time'].fromICAL(aValue);\n      },\n\n      toICAL: function(aValue) {\n        return vcardValues['date-and-or-time'].toICAL(aValue);\n      }\n    },\n\n    \"date-and-or-time\": {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-and-or-time\");\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        var parts = aValue.split('T');\n        return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : '') +\n               (parts[1] ? 'T' + vcardValues.time.fromICAL(parts[1]) : '');\n      },\n\n      toICAL: function(aValue) {\n        var parts = aValue.split('T');\n        return vcardValues.date.toICAL(parts[0]) +\n               (parts[1] ? 'T' + vcardValues.time.toICAL(parts[1]) : '');\n\n      }\n    },\n    timestamp: icalValues['date-time'],\n    \"language-tag\": {\n      matches: /^[a-zA-Z0-9-]+$/ // Could go with a more strict regex here\n    }\n  });\n\n  var vcardParams = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"time\", \"date-time\", \"date-and-or-time\",\n               \"timestamp\", \"boolean\", \"integer\", \"float\", \"utc-offset\",\n               \"language-tag\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  var vcardProperties = ICAL.helpers.extend(commonProperties, {\n    \"adr\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    \"anniversary\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"bday\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"caladruri\": DEFAULT_TYPE_URI,\n    \"caluri\": DEFAULT_TYPE_URI,\n    \"clientpidmap\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"email\": DEFAULT_TYPE_TEXT,\n    \"fburl\": DEFAULT_TYPE_URI,\n    \"fn\": DEFAULT_TYPE_TEXT,\n    \"gender\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"geo\": DEFAULT_TYPE_URI,\n    \"impp\": DEFAULT_TYPE_URI,\n    \"key\": DEFAULT_TYPE_URI,\n    \"kind\": DEFAULT_TYPE_TEXT,\n    \"lang\": { defaultType: \"language-tag\" },\n    \"logo\": DEFAULT_TYPE_URI,\n    \"member\": DEFAULT_TYPE_URI,\n    \"n\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    \"nickname\": DEFAULT_TYPE_TEXT_MULTI,\n    \"note\": DEFAULT_TYPE_TEXT,\n    \"org\": { defaultType: \"text\", structuredValue: \";\" },\n    \"photo\": DEFAULT_TYPE_URI,\n    \"related\": DEFAULT_TYPE_URI,\n    \"rev\": { defaultType: \"timestamp\" },\n    \"role\": DEFAULT_TYPE_TEXT,\n    \"sound\": DEFAULT_TYPE_URI,\n    \"source\": DEFAULT_TYPE_URI,\n    \"tel\": { defaultType: \"uri\", allowedTypes: [\"uri\", \"text\"] },\n    \"title\": DEFAULT_TYPE_TEXT,\n    \"tz\": { defaultType: \"text\", allowedTypes: [\"text\", \"utc-offset\", \"uri\"] },\n    \"xml\": DEFAULT_TYPE_TEXT\n  });\n\n  var vcard3Values = ICAL.helpers.extend(commonValues, {\n    binary: icalValues.binary,\n    date: vcardValues.date,\n    \"date-time\": vcardValues[\"date-time\"],\n    \"phone-number\": {\n      // TODO\n      /* ... */\n    },\n    uri: icalValues.uri,\n    text: icalValues.text,\n    time: icalValues.time,\n    vcard: icalValues.text,\n    \"utc-offset\": {\n      toICAL: function(aValue) {\n        return aValue.substr(0, 7);\n      },\n\n      fromICAL: function(aValue) {\n        return aValue.substr(0, 7);\n      },\n\n      decorate: function(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    }\n  });\n\n  var vcard3Params = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"date-time\", \"phone-number\", \"time\",\n               \"boolean\", \"integer\", \"float\", \"utc-offset\", \"vcard\", \"binary\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  var vcard3Properties = ICAL.helpers.extend(commonProperties, {\n    fn: DEFAULT_TYPE_TEXT,\n    n: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    nickname: DEFAULT_TYPE_TEXT_MULTI,\n    photo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n    bday: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function(string) {\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n\n    adr: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    label: DEFAULT_TYPE_TEXT,\n\n    tel: { defaultType: \"phone-number\" },\n    email: DEFAULT_TYPE_TEXT,\n    mailer: DEFAULT_TYPE_TEXT,\n\n    tz: { defaultType: \"utc-offset\", allowedTypes: [\"utc-offset\", \"text\"] },\n    geo: { defaultType: \"float\", structuredValue: \";\" },\n\n    title: DEFAULT_TYPE_TEXT,\n    role: DEFAULT_TYPE_TEXT,\n    logo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n    agent: { defaultType: \"vcard\", allowedTypes: [\"vcard\", \"text\", \"uri\"] },\n    org: DEFAULT_TYPE_TEXT_STRUCTURED,\n\n    note: DEFAULT_TYPE_TEXT_MULTI,\n    prodid: DEFAULT_TYPE_TEXT,\n    rev: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function(string) {\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n    \"sort-string\": DEFAULT_TYPE_TEXT,\n    sound: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n\n    class: DEFAULT_TYPE_TEXT,\n    key: { defaultType: \"binary\", allowedTypes: [\"binary\", \"text\"] }\n  });\n\n  /**\n   * iCalendar design set\n   * @type {ICAL.design.designSet}\n   */\n  var icalSet = {\n    value: icalValues,\n    param: icalParams,\n    property: icalProperties\n  };\n\n  /**\n   * vCard 4.0 design set\n   * @type {ICAL.design.designSet}\n   */\n  var vcardSet = {\n    value: vcardValues,\n    param: vcardParams,\n    property: vcardProperties\n  };\n\n  /**\n   * vCard 3.0 design set\n   * @type {ICAL.design.designSet}\n   */\n  var vcard3Set = {\n    value: vcard3Values,\n    param: vcard3Params,\n    property: vcard3Properties\n  };\n\n  /**\n   * The design data, used by the parser to determine types for properties and\n   * other metadata needed to produce correct jCard/jCal data.\n   *\n   * @alias ICAL.design\n   * @namespace\n   */\n  var design = {\n    /**\n     * A designSet describes value, parameter and property data. It is used by\n     * ther parser and stringifier in components and properties to determine they\n     * should be represented.\n     *\n     * @typedef {Object} designSet\n     * @memberOf ICAL.design\n     * @property {Object} value       Definitions for value types, keys are type names\n     * @property {Object} param       Definitions for params, keys are param names\n     * @property {Object} property    Defintions for properties, keys are property names\n     */\n\n    /**\n     * Can be set to false to make the parser more lenient.\n     */\n    strict: true,\n\n    /**\n     * The default set for new properties and components if none is specified.\n     * @type {ICAL.design.designSet}\n     */\n    defaultSet: icalSet,\n\n    /**\n     * The default type for unknown properties\n     * @type {String}\n     */\n    defaultType: 'unknown',\n\n    /**\n     * Holds the design set for known top-level components\n     *\n     * @type {Object}\n     * @property {ICAL.design.designSet} vcard       vCard VCARD\n     * @property {ICAL.design.designSet} vevent      iCalendar VEVENT\n     * @property {ICAL.design.designSet} vtodo       iCalendar VTODO\n     * @property {ICAL.design.designSet} vjournal    iCalendar VJOURNAL\n     * @property {ICAL.design.designSet} valarm      iCalendar VALARM\n     * @property {ICAL.design.designSet} vtimezone   iCalendar VTIMEZONE\n     * @property {ICAL.design.designSet} daylight    iCalendar DAYLIGHT\n     * @property {ICAL.design.designSet} standard    iCalendar STANDARD\n     *\n     * @example\n     * var propertyName = 'fn';\n     * var componentDesign = ICAL.design.components.vcard;\n     * var propertyDetails = componentDesign.property[propertyName];\n     * if (propertyDetails.defaultType == 'text') {\n     *   // Yep, sure is...\n     * }\n     */\n    components: {\n      vcard: vcardSet,\n      vcard3: vcard3Set,\n      vevent: icalSet,\n      vtodo: icalSet,\n      vjournal: icalSet,\n      valarm: icalSet,\n      vtimezone: icalSet,\n      daylight: icalSet,\n      standard: icalSet\n    },\n\n\n    /**\n     * The design set for iCalendar (rfc5545/rfc7265) components.\n     * @type {ICAL.design.designSet}\n     */\n    icalendar: icalSet,\n\n    /**\n     * The design set for vCard (rfc6350/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard: vcardSet,\n\n    /**\n     * The design set for vCard (rfc2425/rfc2426/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard3: vcard3Set,\n\n    /**\n     * Gets the design set for the given component name.\n     *\n     * @param {String} componentName        The name of the component\n     * @return {ICAL.design.designSet}      The design set for the component\n     */\n    getDesignSet: function(componentName) {\n      var isInDesign = componentName && componentName in design.components;\n      return isInDesign ? design.components[componentName] : design.defaultSet;\n    }\n  };\n\n  return design;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * Contains various functions to convert jCal and jCard data back into\n * iCalendar and vCard.\n * @namespace\n */\nICAL.stringify = (function() {\n  'use strict';\n\n  var LINE_ENDING = '\\r\\n';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n\n  /**\n   * Convert a full jCal/jCard array into a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify\n   * @variation function\n   * @param {Array} jCal    The jCal/jCard document\n   * @return {String}       The stringified iCalendar/vCard document\n   */\n  function stringify(jCal) {\n    if (typeof jCal[0] == \"string\") {\n      // This is a single component\n      jCal = [jCal];\n    }\n\n    var i = 0;\n    var len = jCal.length;\n    var result = '';\n\n    for (; i < len; i++) {\n      result += stringify.component(jCal[i]) + LINE_ENDING;\n    }\n\n    return result;\n  }\n\n  /**\n   * Converts an jCal component array into a ICAL string.\n   * Recursive will resolve sub-components.\n   *\n   * Exact component/property order is not saved all\n   * properties will come before subcomponents.\n   *\n   * @function ICAL.stringify.component\n   * @param {Array} component\n   *        jCal/jCard fragment of a component\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this component\n   * @return {String}       The iCalendar/vCard string\n   */\n  stringify.component = function(component, designSet) {\n    var name = component[0].toUpperCase();\n    var result = 'BEGIN:' + name + LINE_ENDING;\n\n    var props = component[1];\n    var propIdx = 0;\n    var propLen = props.length;\n\n    var designSetName = component[0];\n    // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n    if (designSetName === 'vcard' && component[1].length > 0 &&\n            !(component[1][0][0] === \"version\" && component[1][0][3] === \"4.0\")) {\n      designSetName = \"vcard3\";\n    }\n    designSet = designSet || design.getDesignSet(designSetName);\n\n    for (; propIdx < propLen; propIdx++) {\n      result += stringify.property(props[propIdx], designSet) + LINE_ENDING;\n    }\n\n    // Ignore subcomponents if none exist, e.g. in vCard.\n    var comps = component[2] || [];\n    var compIdx = 0;\n    var compLen = comps.length;\n\n    for (; compIdx < compLen; compIdx++) {\n      result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;\n    }\n\n    result += 'END:' + name;\n    return result;\n  };\n\n  /**\n   * Converts a single jCal/jCard property to a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify.property\n   * @param {Array} property\n   *        jCal/jCard property array\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   * @param {Boolean} noFold\n   *        If true, the line is not folded\n   * @return {String}       The iCalendar/vCard string\n   */\n  stringify.property = function(property, designSet, noFold) {\n    var name = property[0].toUpperCase();\n    var jsName = property[0];\n    var params = property[1];\n\n    var line = name;\n\n    var paramName;\n    for (paramName in params) {\n      var value = params[paramName];\n\n      /* istanbul ignore else */\n      if (params.hasOwnProperty(paramName)) {\n        var multiValue = (paramName in designSet.param) && designSet.param[paramName].multiValue;\n        if (multiValue && Array.isArray(value)) {\n          if (designSet.param[paramName].multiValueSeparateDQuote) {\n            multiValue = '\"' + multiValue + '\"';\n          }\n          value = value.map(stringify._rfc6868Unescape);\n          value = stringify.multiValue(value, multiValue, \"unknown\", null, designSet);\n        } else {\n          value = stringify._rfc6868Unescape(value);\n        }\n\n\n        line += ';' + paramName.toUpperCase();\n        line += '=' + stringify.propertyValue(value);\n      }\n    }\n\n    if (property.length === 3) {\n      // If there are no values, we must assume a blank value\n      return line + ':';\n    }\n\n    var valueType = property[2];\n\n    if (!designSet) {\n      designSet = design.defaultSet;\n    }\n\n    var propDetails;\n    var multiValue = false;\n    var structuredValue = false;\n    var isDefault = false;\n\n    if (jsName in designSet.property) {\n      propDetails = designSet.property[jsName];\n\n      if ('multiValue' in propDetails) {\n        multiValue = propDetails.multiValue;\n      }\n\n      if (('structuredValue' in propDetails) && Array.isArray(property[3])) {\n        structuredValue = propDetails.structuredValue;\n      }\n\n      if ('defaultType' in propDetails) {\n        if (valueType === propDetails.defaultType) {\n          isDefault = true;\n        }\n      } else {\n        if (valueType === DEFAULT_VALUE_TYPE) {\n          isDefault = true;\n        }\n      }\n    } else {\n      if (valueType === DEFAULT_VALUE_TYPE) {\n        isDefault = true;\n      }\n    }\n\n    // push the VALUE property if type is not the default\n    // for the current property.\n    if (!isDefault) {\n      // value will never contain ;/:/, so we don't escape it here.\n      line += ';VALUE=' + valueType.toUpperCase();\n    }\n\n    line += ':';\n\n    if (multiValue && structuredValue) {\n      line += stringify.multiValue(\n        property[3], structuredValue, valueType, multiValue, designSet, structuredValue\n      );\n    } else if (multiValue) {\n      line += stringify.multiValue(\n        property.slice(3), multiValue, valueType, null, designSet, false\n      );\n    } else if (structuredValue) {\n      line += stringify.multiValue(\n        property[3], structuredValue, valueType, null, designSet, structuredValue\n      );\n    } else {\n      line += stringify.value(property[3], valueType, designSet, false);\n    }\n\n    return noFold ? line : ICAL.helpers.foldline(line);\n  };\n\n  /**\n   * Handles escaping of property values that may contain:\n   *\n   *    COLON (:), SEMICOLON (;), or COMMA (,)\n   *\n   * If any of the above are present the result is wrapped\n   * in double quotes.\n   *\n   * @function ICAL.stringify.propertyValue\n   * @param {String} value      Raw property value\n   * @return {String}           Given or escaped value when needed\n   */\n  stringify.propertyValue = function(value) {\n\n    if ((helpers.unescapedIndexOf(value, ',') === -1) &&\n        (helpers.unescapedIndexOf(value, ':') === -1) &&\n        (helpers.unescapedIndexOf(value, ';') === -1)) {\n\n      return value;\n    }\n\n    return '\"' + value + '\"';\n  };\n\n  /**\n   * Converts an array of ical values into a single\n   * string based on a type and a delimiter value (like \",\").\n   *\n   * @function ICAL.stringify.multiValue\n   * @param {Array} values      List of values to convert\n   * @param {String} delim      Used to join the values (\",\", \";\", \":\")\n   * @param {String} type       Lowecase ical value type\n   *        (like boolean, date-time, etc..)\n   * @param {?String} innerMulti If set, each value will again be processed\n   *        Used for structured values\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   *\n   * @return {String}           iCalendar/vCard string for value\n   */\n  stringify.multiValue = function(values, delim, type, innerMulti, designSet, structuredValue) {\n    var result = '';\n    var len = values.length;\n    var i = 0;\n\n    for (; i < len; i++) {\n      if (innerMulti && Array.isArray(values[i])) {\n        result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);\n      } else {\n        result += stringify.value(values[i], type, designSet, structuredValue);\n      }\n\n      if (i !== (len - 1)) {\n        result += delim;\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   * Processes a single ical value runs the associated \"toICAL\" method from the\n   * design value type if available to convert the value.\n   *\n   * @function ICAL.stringify.value\n   * @param {String|Number} value       A formatted value\n   * @param {String} type               Lowercase iCalendar/vCard value type\n   *  (like boolean, date-time, etc..)\n   * @return {String}                   iCalendar/vCard value for single value\n   */\n  stringify.value = function(value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'toICAL' in designSet.value[type]) {\n      return designSet.value[type].toICAL(value, structuredValue);\n    }\n    return value;\n  };\n\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.stringify so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @param {String} val        The value to unescape\n   * @return {String}           The escaped value\n   */\n  stringify._rfc6868Unescape = function(val) {\n    return val.replace(/[\\n^\"]/g, function(x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n  var RFC6868_REPLACE_MAP = { '\"': \"^'\", \"\\n\": \"^n\", \"^\": \"^^\" };\n\n  return stringify;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * Contains various functions to parse iCalendar and vCard data.\n * @namespace\n */\nICAL.parse = (function() {\n  'use strict';\n\n  var CHAR = /[^ \\t]/;\n  var MULTIVALUE_DELIMITER = ',';\n  var VALUE_DELIMITER = ':';\n  var PARAM_DELIMITER = ';';\n  var PARAM_NAME_DELIMITER = '=';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n  var DEFAULT_PARAM_TYPE = 'text';\n\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n\n  /**\n   * An error that occurred during parsing.\n   *\n   * @param {String} message        The error message\n   * @memberof ICAL.parse\n   * @extends {Error}\n   * @class\n   */\n  function ParserError(message) {\n    this.message = message;\n    this.name = 'ParserError';\n\n    try {\n      throw new Error();\n    } catch (e) {\n      if (e.stack) {\n        var split = e.stack.split('\\n');\n        split.shift();\n        this.stack = split.join('\\n');\n      }\n    }\n  }\n\n  ParserError.prototype = Error.prototype;\n\n  /**\n   * Parses iCalendar or vCard data into a raw jCal object. Consult\n   * documentation on the {@tutorial layers|layers of parsing} for more\n   * details.\n   *\n   * @function ICAL.parse\n   * @variation function\n   * @todo Fix the API to be more clear on the return type\n   * @param {String} input      The string data to parse\n   * @return {Object|Object[]}  A single jCal object, or an array thereof\n   */\n  function parser(input) {\n    var state = {};\n    var root = state.component = [];\n\n    state.stack = [root];\n\n    parser._eachLine(input, function(err, line) {\n      parser._handleContentLine(line, state);\n    });\n\n\n    // when there are still items on the stack\n    // throw a fatal error, a component was not closed\n    // correctly in that case.\n    if (state.stack.length > 1) {\n      throw new ParserError(\n        'invalid ical body. component began but did not end'\n      );\n    }\n\n    state = null;\n\n    return (root.length == 1 ? root[0] : root);\n  }\n\n  /**\n   * Parse an iCalendar property value into the jCal for a single property\n   *\n   * @function ICAL.parse.property\n   * @param {String} str\n   *   The iCalendar property string to parse\n   * @param {ICAL.design.designSet=} designSet\n   *   The design data to use for this property\n   * @return {Object}\n   *   The jCal Object containing the property\n   */\n  parser.property = function(str, designSet) {\n    var state = {\n      component: [[], []],\n      designSet: designSet || design.defaultSet\n    };\n    parser._handleContentLine(str, state);\n    return state.component[1][0];\n  };\n\n  /**\n   * Convenience method to parse a component. You can use ICAL.parse() directly\n   * instead.\n   *\n   * @function ICAL.parse.component\n   * @see ICAL.parse(function)\n   * @param {String} str    The iCalendar component string to parse\n   * @return {Object}       The jCal Object containing the component\n   */\n  parser.component = function(str) {\n    return parser(str);\n  };\n\n  // classes & constants\n  parser.ParserError = ParserError;\n\n  /**\n   * The state for parsing content lines from an iCalendar/vCard string.\n   *\n   * @private\n   * @memberof ICAL.parse\n   * @typedef {Object} parserState\n   * @property {ICAL.design.designSet} designSet    The design set to use for parsing\n   * @property {ICAL.Component[]} stack             The stack of components being processed\n   * @property {ICAL.Component} component           The currently active component\n   */\n\n\n  /**\n   * Handles a single line of iCalendar/vCard, updating the state.\n   *\n   * @private\n   * @function ICAL.parse._handleContentLine\n   * @param {String} line               The content line to process\n   * @param {ICAL.parse.parserState}    The current state of the line parsing\n   */\n  parser._handleContentLine = function(line, state) {\n    // break up the parts of the line\n    var valuePos = line.indexOf(VALUE_DELIMITER);\n    var paramPos = line.indexOf(PARAM_DELIMITER);\n\n    var lastParamIndex;\n    var lastValuePos;\n\n    // name of property or begin/end\n    var name;\n    var value;\n    // params is only overridden if paramPos !== -1.\n    // we can't do params = params || {} later on\n    // because it sacrifices ops.\n    var params = {};\n\n    /**\n     * Different property cases\n     *\n     *\n     * 1. RRULE:FREQ=foo\n     *    // FREQ= is not a param but the value\n     *\n     * 2. ATTENDEE;ROLE=REQ-PARTICIPANT;\n     *    // ROLE= is a param because : has not happened yet\n     */\n      // when the parameter delimiter is after the\n      // value delimiter then its not a parameter.\n\n    if ((paramPos !== -1 && valuePos !== -1)) {\n      // when the parameter delimiter is after the\n      // value delimiter then its not a parameter.\n      if (paramPos > valuePos) {\n        paramPos = -1;\n      }\n    }\n\n    var parsedParams;\n    if (paramPos !== -1) {\n      name = line.substring(0, paramPos).toLowerCase();\n      parsedParams = parser._parseParameters(line.substring(paramPos), 0, state.designSet);\n      if (parsedParams[2] == -1) {\n        throw new ParserError(\"Invalid parameters in '\" + line + \"'\");\n      }\n      params = parsedParams[0];\n      lastParamIndex = parsedParams[1].length + parsedParams[2] + paramPos;\n      if ((lastValuePos =\n        line.substring(lastParamIndex).indexOf(VALUE_DELIMITER)) !== -1) {\n        value = line.substring(lastParamIndex + lastValuePos + 1);\n      } else {\n        throw new ParserError(\"Missing parameter value in '\" + line + \"'\");\n      }\n    } else if (valuePos !== -1) {\n      // without parmeters (BEGIN:VCAENDAR, CLASS:PUBLIC)\n      name = line.substring(0, valuePos).toLowerCase();\n      value = line.substring(valuePos + 1);\n\n      if (name === 'begin') {\n        var newComponent = [value.toLowerCase(), [], []];\n        if (state.stack.length === 1) {\n          state.component.push(newComponent);\n        } else {\n          state.component[2].push(newComponent);\n        }\n        state.stack.push(state.component);\n        state.component = newComponent;\n        if (!state.designSet) {\n          state.designSet = design.getDesignSet(state.component[0]);\n        }\n        return;\n      } else if (name === 'end') {\n        state.component = state.stack.pop();\n        return;\n      }\n      // If its not begin/end, then this is a property with an empty value,\n      // which should be considered valid.\n    } else {\n      /**\n       * Invalid line.\n       * The rational to throw an error is we will\n       * never be certain that the rest of the file\n       * is sane and its unlikely that we can serialize\n       * the result correctly either.\n       */\n      throw new ParserError(\n        'invalid line (no token \";\" or \":\") \"' + line + '\"'\n      );\n    }\n\n    var valueType;\n    var multiValue = false;\n    var structuredValue = false;\n    var propertyDetails;\n\n    if (name in state.designSet.property) {\n      propertyDetails = state.designSet.property[name];\n\n      if ('multiValue' in propertyDetails) {\n        multiValue = propertyDetails.multiValue;\n      }\n\n      if ('structuredValue' in propertyDetails) {\n        structuredValue = propertyDetails.structuredValue;\n      }\n\n      if (value && 'detectType' in propertyDetails) {\n        valueType = propertyDetails.detectType(value);\n      }\n    }\n\n    // attempt to determine value\n    if (!valueType) {\n      if (!('value' in params)) {\n        if (propertyDetails) {\n          valueType = propertyDetails.defaultType;\n        } else {\n          valueType = DEFAULT_VALUE_TYPE;\n        }\n      } else {\n        // possible to avoid this?\n        valueType = params.value.toLowerCase();\n      }\n    }\n\n    delete params.value;\n\n    /**\n     * Note on `var result` juggling:\n     *\n     * I observed that building the array in pieces has adverse\n     * effects on performance, so where possible we inline the creation.\n     * Its a little ugly but resulted in ~2000 additional ops/sec.\n     */\n\n    var result;\n    if (multiValue && structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else if (multiValue) {\n      result = [name, params, valueType];\n      parser._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, false);\n    } else if (structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else {\n      value = parser._parseValue(value, valueType, state.designSet, false);\n      result = [name, params, valueType, value];\n    }\n    // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n    if (state.component[0] === 'vcard' && state.component[1].length === 0 &&\n            !(name === 'version' && value === '4.0')) {\n      state.designSet = design.getDesignSet(\"vcard3\");\n    }\n    state.component[1].push(result);\n  };\n\n  /**\n   * Parse a value from the raw value into the jCard/jCal value.\n   *\n   * @private\n   * @function ICAL.parse._parseValue\n   * @param {String} value          Original value\n   * @param {String} type           Type of value\n   * @param {Object} designSet      The design data to use for this value\n   * @return {Object} varies on type\n   */\n  parser._parseValue = function(value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'fromICAL' in designSet.value[type]) {\n      return designSet.value[type].fromICAL(value, structuredValue);\n    }\n    return value;\n  };\n\n  /**\n   * Parse parameters from a string to object.\n   *\n   * @function ICAL.parse._parseParameters\n   * @private\n   * @param {String} line           A single unfolded line\n   * @param {Numeric} start         Position to start looking for properties\n   * @param {Object} designSet      The design data to use for this property\n   * @return {Object} key/value pairs\n   */\n  parser._parseParameters = function(line, start, designSet) {\n    var lastParam = start;\n    var pos = 0;\n    var delim = PARAM_NAME_DELIMITER;\n    var result = {};\n    var name, lcname;\n    var value, valuePos = -1;\n    var type, multiValue, mvdelim;\n\n    // find the next '=' sign\n    // use lastParam and pos to find name\n    // check if \" is used if so get value from \"->\"\n    // then increment pos to find next ;\n\n    while ((pos !== false) &&\n           (pos = helpers.unescapedIndexOf(line, delim, pos + 1)) !== -1) {\n\n      name = line.substr(lastParam + 1, pos - lastParam - 1);\n      if (name.length == 0) {\n        throw new ParserError(\"Empty parameter name in '\" + line + \"'\");\n      }\n      lcname = name.toLowerCase();\n      mvdelim = false;\n      multiValue = false;\n\n      if (lcname in designSet.param && designSet.param[lcname].valueType) {\n        type = designSet.param[lcname].valueType;\n      } else {\n        type = DEFAULT_PARAM_TYPE;\n      }\n\n      if (lcname in designSet.param) {\n        multiValue = designSet.param[lcname].multiValue;\n        if (designSet.param[lcname].multiValueSeparateDQuote) {\n          mvdelim = parser._rfc6868Escape('\"' + multiValue + '\"');\n        }\n      }\n\n      var nextChar = line[pos + 1];\n      if (nextChar === '\"') {\n        valuePos = pos + 2;\n        pos = helpers.unescapedIndexOf(line, '\"', valuePos);\n        if (multiValue && pos != -1) {\n            var extendedValue = true;\n            while (extendedValue) {\n              if (line[pos + 1] == multiValue && line[pos + 2] == '\"') {\n                pos = helpers.unescapedIndexOf(line, '\"', pos + 3);\n              } else {\n                extendedValue = false;\n              }\n            }\n          }\n        if (pos === -1) {\n          throw new ParserError(\n            'invalid line (no matching double quote) \"' + line + '\"'\n          );\n        }\n        value = line.substr(valuePos, pos - valuePos);\n        lastParam = helpers.unescapedIndexOf(line, PARAM_DELIMITER, pos);\n        if (lastParam === -1) {\n          pos = false;\n        }\n      } else {\n        valuePos = pos + 1;\n\n        // move to next \";\"\n        var nextPos = helpers.unescapedIndexOf(line, PARAM_DELIMITER, valuePos);\n        var propValuePos = helpers.unescapedIndexOf(line, VALUE_DELIMITER, valuePos);\n        if (propValuePos !== -1 && nextPos > propValuePos) {\n          // this is a delimiter in the property value, let's stop here\n          nextPos = propValuePos;\n          pos = false;\n        } else if (nextPos === -1) {\n          // no \";\"\n          if (propValuePos === -1) {\n            nextPos = line.length;\n          } else {\n            nextPos = propValuePos;\n          }\n          pos = false;\n        } else {\n          lastParam = nextPos;\n          pos = nextPos;\n        }\n\n        value = line.substr(valuePos, nextPos - valuePos);\n      }\n\n      value = parser._rfc6868Escape(value);\n      if (multiValue) {\n        var delimiter = mvdelim || multiValue;\n        value = parser._parseMultiValue(value, delimiter, type, [], null, designSet);\n      } else {\n        value = parser._parseValue(value, type, designSet);\n      }\n\n      if (multiValue && (lcname in result)) {\n        if (Array.isArray(result[lcname])) {\n          result[lcname].push(value);\n        } else {\n          result[lcname] = [\n            result[lcname],\n            value\n          ];\n        }\n      } else {\n        result[lcname] = value;\n      }\n    }\n    return [result, value, valuePos];\n  };\n\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.parse so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @function ICAL.parse._rfc6868Escape\n   * @param {String} val        The value to escape\n   * @return {String}           The escaped value\n   */\n  parser._rfc6868Escape = function(val) {\n    return val.replace(/\\^['n^]/g, function(x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n  var RFC6868_REPLACE_MAP = { \"^'\": '\"', \"^n\": \"\\n\", \"^^\": \"^\" };\n\n  /**\n   * Parse a multi value string. This function is used either for parsing\n   * actual multi-value property's values, or for handling parameter values. It\n   * can be used for both multi-value properties and structured value properties.\n   *\n   * @private\n   * @function ICAL.parse._parseMultiValue\n   * @param {String} buffer     The buffer containing the full value\n   * @param {String} delim      The multi-value delimiter\n   * @param {String} type       The value type to be parsed\n   * @param {Array.<?>} result        The array to append results to, varies on value type\n   * @param {String} innerMulti The inner delimiter to split each value with\n   * @param {ICAL.design.designSet} designSet   The design data for this value\n   * @return {?|Array.<?>}            Either an array of results, or the first result\n   */\n  parser._parseMultiValue = function(buffer, delim, type, result, innerMulti, designSet, structuredValue) {\n    var pos = 0;\n    var lastPos = 0;\n    var value;\n    if (delim.length === 0) {\n      return buffer;\n    }\n\n    // split each piece\n    while ((pos = helpers.unescapedIndexOf(buffer, delim, lastPos)) !== -1) {\n      value = buffer.substr(lastPos, pos - lastPos);\n      if (innerMulti) {\n        value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n      } else {\n        value = parser._parseValue(value, type, designSet, structuredValue);\n      }\n      result.push(value);\n      lastPos = pos + delim.length;\n    }\n\n    // on the last piece take the rest of string\n    value = buffer.substr(lastPos);\n    if (innerMulti) {\n      value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n    } else {\n      value = parser._parseValue(value, type, designSet, structuredValue);\n    }\n    result.push(value);\n\n    return result.length == 1 ? result[0] : result;\n  };\n\n  /**\n   * Process a complete buffer of iCalendar/vCard data line by line, correctly\n   * unfolding content. Each line will be processed with the given callback\n   *\n   * @private\n   * @function ICAL.parse._eachLine\n   * @param {String} buffer                         The buffer to process\n   * @param {function(?String, String)} callback    The callback for each line\n   */\n  parser._eachLine = function(buffer, callback) {\n    var len = buffer.length;\n    var lastPos = buffer.search(CHAR);\n    var pos = lastPos;\n    var line;\n    var firstChar;\n\n    var newlineOffset;\n\n    do {\n      pos = buffer.indexOf('\\n', lastPos) + 1;\n\n      if (pos > 1 && buffer[pos - 2] === '\\r') {\n        newlineOffset = 2;\n      } else {\n        newlineOffset = 1;\n      }\n\n      if (pos === 0) {\n        pos = len;\n        newlineOffset = 0;\n      }\n\n      firstChar = buffer[lastPos];\n\n      if (firstChar === ' ' || firstChar === '\\t') {\n        // add to line\n        line += buffer.substr(\n          lastPos + 1,\n          pos - lastPos - (newlineOffset + 1)\n        );\n      } else {\n        if (line)\n          callback(null, line);\n        // push line\n        line = buffer.substr(\n          lastPos,\n          pos - lastPos - newlineOffset\n        );\n      }\n\n      lastPos = pos;\n    } while (pos !== len);\n\n    // extra ending line\n    line = line.trim();\n\n    if (line.length)\n      callback(null, line);\n  };\n\n  return parser;\n\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Component = (function() {\n  'use strict';\n\n  var PROPERTY_INDEX = 1;\n  var COMPONENT_INDEX = 2;\n  var NAME_INDEX = 0;\n\n  /**\n   * @classdesc\n   * Wraps a jCal component, adding convenience methods to add, remove and\n   * update subcomponents and properties.\n   *\n   * @class\n   * @alias ICAL.Component\n   * @param {Array|String} jCal         Raw jCal component data OR name of new\n   *                                      component\n   * @param {ICAL.Component} parent     Parent component to associate\n   */\n  function Component(jCal, parent) {\n    if (typeof(jCal) === 'string') {\n      // jCal spec (name, properties, components)\n      jCal = [jCal, [], []];\n    }\n\n    // mostly for legacy reasons.\n    this.jCal = jCal;\n\n    this.parent = parent || null;\n  }\n\n  Component.prototype = {\n    /**\n     * Hydrated properties are inserted into the _properties array at the same\n     * position as in the jCal array, so its possible the array contains\n     * undefined values for unhydrdated properties. To avoid iterating the\n     * array when checking if all properties have been hydrated, we save the\n     * count here.\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedPropertyCount: 0,\n\n    /**\n     * The same count as for _hydratedPropertyCount, but for subcomponents\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedComponentCount: 0,\n\n    /**\n     * The name of this component\n     * @readonly\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The design set for this component, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      var parentDesign = this.parent && this.parent._designSet;\n      return parentDesign || ICAL.design.getDesignSet(this.name);\n    },\n\n    _hydrateComponent: function(index) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (this._components[index]) {\n        return this._components[index];\n      }\n\n      var comp = new Component(\n        this.jCal[COMPONENT_INDEX][index],\n        this\n      );\n\n      this._hydratedComponentCount++;\n      return (this._components[index] = comp);\n    },\n\n    _hydrateProperty: function(index) {\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (this._properties[index]) {\n        return this._properties[index];\n      }\n\n      var prop = new ICAL.Property(\n        this.jCal[PROPERTY_INDEX][index],\n        this\n      );\n\n      this._hydratedPropertyCount++;\n      return (this._properties[index] = prop);\n    },\n\n    /**\n     * Finds first sub component, optionally filtered by name.\n     *\n     * @param {String=} name        Optional name to filter by\n     * @return {?ICAL.Component}     The found subcomponent\n     */\n    getFirstSubcomponent: function(name) {\n      if (name) {\n        var i = 0;\n        var comps = this.jCal[COMPONENT_INDEX];\n        var len = comps.length;\n\n        for (; i < len; i++) {\n          if (comps[i][NAME_INDEX] === name) {\n            var result = this._hydrateComponent(i);\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[COMPONENT_INDEX].length) {\n          return this._hydrateComponent(0);\n        }\n      }\n\n      // ensure we return a value (strict mode)\n      return null;\n    },\n\n    /**\n     * Finds all sub components, optionally filtering by name.\n     *\n     * @param {String=} name            Optional name to filter by\n     * @return {ICAL.Component[]}       The found sub components\n     */\n    getAllSubcomponents: function(name) {\n      var jCalLen = this.jCal[COMPONENT_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var comps = this.jCal[COMPONENT_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === comps[i][NAME_INDEX]) {\n            result.push(\n              this._hydrateComponent(i)\n            );\n          }\n        }\n        return result;\n      } else {\n        if (!this._components ||\n            (this._hydratedComponentCount !== jCalLen)) {\n          for (; i < jCalLen; i++) {\n            this._hydrateComponent(i);\n          }\n        }\n\n        return this._components || [];\n      }\n    },\n\n    /**\n     * Returns true when a named property exists.\n     *\n     * @param {String} name     The property name\n     * @return {Boolean}        True, when property is found\n     */\n    hasProperty: function(name) {\n      var props = this.jCal[PROPERTY_INDEX];\n      var len = props.length;\n\n      var i = 0;\n      for (; i < len; i++) {\n        // 0 is property name\n        if (props[i][NAME_INDEX] === name) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Finds the first property, optionally with the given name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {?ICAL.Property}     The found property\n     */\n    getFirstProperty: function(name) {\n      if (name) {\n        var i = 0;\n        var props = this.jCal[PROPERTY_INDEX];\n        var len = props.length;\n\n        for (; i < len; i++) {\n          if (props[i][NAME_INDEX] === name) {\n            var result = this._hydrateProperty(i);\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[PROPERTY_INDEX].length) {\n          return this._hydrateProperty(0);\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Returns first property's value, if available.\n     *\n     * @param {String=} name    Lowercase property name\n     * @return {?String}        The found property value.\n     */\n    getFirstPropertyValue: function(name) {\n      var prop = this.getFirstProperty(name);\n      if (prop) {\n        return prop.getFirstValue();\n      }\n\n      return null;\n    },\n\n    /**\n     * Get all properties in the component, optionally filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {ICAL.Property[]}    List of properties\n     */\n    getAllProperties: function(name) {\n      var jCalLen = this.jCal[PROPERTY_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var props = this.jCal[PROPERTY_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === props[i][NAME_INDEX]) {\n            result.push(\n              this._hydrateProperty(i)\n            );\n          }\n        }\n        return result;\n      } else {\n        if (!this._properties ||\n            (this._hydratedPropertyCount !== jCalLen)) {\n          for (; i < jCalLen; i++) {\n            this._hydrateProperty(i);\n          }\n        }\n\n        return this._properties || [];\n      }\n    },\n\n    _removeObjectByIndex: function(jCalIndex, cache, index) {\n      cache = cache || [];\n      // remove cached version\n      if (cache[index]) {\n        var obj = cache[index];\n        if (\"parent\" in obj) {\n            obj.parent = null;\n        }\n      }\n\n      cache.splice(index, 1);\n\n      // remove it from the jCal\n      this.jCal[jCalIndex].splice(index, 1);\n    },\n\n    _removeObject: function(jCalIndex, cache, nameOrObject) {\n      var i = 0;\n      var objects = this.jCal[jCalIndex];\n      var len = objects.length;\n      var cached = this[cache];\n\n      if (typeof(nameOrObject) === 'string') {\n        for (; i < len; i++) {\n          if (objects[i][NAME_INDEX] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n            return true;\n          }\n        }\n      } else if (cached) {\n        for (; i < len; i++) {\n          if (cached[i] && cached[i] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    _removeAllObjects: function(jCalIndex, cache, name) {\n      var cached = this[cache];\n\n      // Unfortunately we have to run through all children to reset their\n      // parent property.\n      var objects = this.jCal[jCalIndex];\n      var i = objects.length - 1;\n\n      // descending search required because splice\n      // is used and will effect the indices.\n      for (; i >= 0; i--) {\n        if (!name || objects[i][NAME_INDEX] === name) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n        }\n      }\n    },\n\n    /**\n     * Adds a single sub component.\n     *\n     * @param {ICAL.Component} component        The component to add\n     * @return {ICAL.Component}                 The passed in component\n     */\n    addSubcomponent: function(component) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (component.parent) {\n        component.parent.removeSubcomponent(component);\n      }\n\n      var idx = this.jCal[COMPONENT_INDEX].push(component.jCal);\n      this._components[idx - 1] = component;\n      this._hydratedComponentCount++;\n      component.parent = this;\n      return component;\n    },\n\n    /**\n     * Removes a single component by name or the instance of a specific\n     * component.\n     *\n     * @param {ICAL.Component|String} nameOrComp    Name of component, or component\n     * @return {Boolean}                            True when comp is removed\n     */\n    removeSubcomponent: function(nameOrComp) {\n      var removed = this._removeObject(COMPONENT_INDEX, '_components', nameOrComp);\n      if (removed) {\n        this._hydratedComponentCount--;\n      }\n      return removed;\n    },\n\n    /**\n     * Removes all components or (if given) all components by a particular\n     * name.\n     *\n     * @param {String=} name            Lowercase component name\n     */\n    removeAllSubcomponents: function(name) {\n      var removed = this._removeAllObjects(COMPONENT_INDEX, '_components', name);\n      this._hydratedComponentCount = 0;\n      return removed;\n    },\n\n    /**\n     * Adds an {@link ICAL.Property} to the component.\n     *\n     * @param {ICAL.Property} property      The property to add\n     * @return {ICAL.Property}              The passed in property\n     */\n    addProperty: function(property) {\n      if (!(property instanceof ICAL.Property)) {\n        throw new TypeError('must instance of ICAL.Property');\n      }\n\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (property.parent) {\n        property.parent.removeProperty(property);\n      }\n\n      var idx = this.jCal[PROPERTY_INDEX].push(property.jCal);\n      this._properties[idx - 1] = property;\n      this._hydratedPropertyCount++;\n      property.parent = this;\n      return property;\n    },\n\n    /**\n     * Helper method to add a property with a value to the component.\n     *\n     * @param {String}               name         Property name to add\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    addPropertyWithValue: function(name, value) {\n      var prop = new ICAL.Property(name);\n      prop.setValue(value);\n\n      this.addProperty(prop);\n\n      return prop;\n    },\n\n    /**\n     * Helper method that will update or create a property of the given name\n     * and sets its value. If multiple properties with the given name exist,\n     * only the first is updated.\n     *\n     * @param {String}               name         Property name to update\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    updatePropertyWithValue: function(name, value) {\n      var prop = this.getFirstProperty(name);\n\n      if (prop) {\n        prop.setValue(value);\n      } else {\n        prop = this.addPropertyWithValue(name, value);\n      }\n\n      return prop;\n    },\n\n    /**\n     * Removes a single property by name or the instance of the specific\n     * property.\n     *\n     * @param {String|ICAL.Property} nameOrProp     Property name or instance to remove\n     * @return {Boolean}                            True, when deleted\n     */\n    removeProperty: function(nameOrProp) {\n      var removed = this._removeObject(PROPERTY_INDEX, '_properties', nameOrProp);\n      if (removed) {\n        this._hydratedPropertyCount--;\n      }\n      return removed;\n    },\n\n    /**\n     * Removes all properties associated with this component, optionally\n     * filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {Boolean}            True, when deleted\n     */\n    removeAllProperties: function(name) {\n      var removed = this._removeAllObjects(PROPERTY_INDEX, '_properties', name);\n      this._hydratedPropertyCount = 0;\n      return removed;\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toString: function() {\n      return ICAL.stringify.component(\n        this.jCal, this._designSet\n      );\n    }\n  };\n\n  /**\n   * Create an {@link ICAL.Component} by parsing the passed iCalendar string.\n   *\n   * @param {String} str        The iCalendar string to parse\n   */\n  Component.fromString = function(str) {\n    return new Component(ICAL.parse.component(str));\n  };\n\n  return Component;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Property = (function() {\n  'use strict';\n\n  var NAME_INDEX = 0;\n  var PROP_INDEX = 1;\n  var TYPE_INDEX = 2;\n  var VALUE_INDEX = 3;\n\n  var design = ICAL.design;\n\n  /**\n   * @classdesc\n   * Provides a layer on top of the raw jCal object for manipulating a single\n   * property, with its parameters and value.\n   *\n   * @description\n   * Its important to note that mutations done in the wrapper\n   * directly mutate the jCal object used to initialize.\n   *\n   * Can also be used to create new properties by passing\n   * the name of the property (as a String).\n   *\n   * @class\n   * @alias ICAL.Property\n   * @param {Array|String} jCal         Raw jCal representation OR\n   *  the new name of the property\n   *\n   * @param {ICAL.Component=} parent    Parent component\n   */\n  function Property(jCal, parent) {\n    this._parent = parent || null;\n\n    if (typeof(jCal) === 'string') {\n      // We are creating the property by name and need to detect the type\n      this.jCal = [jCal, {}, design.defaultType];\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n    } else {\n      this.jCal = jCal;\n    }\n    this._updateType();\n  }\n\n  Property.prototype = {\n\n    /**\n     * The value type for this property\n     * @readonly\n     * @type {String}\n     */\n    get type() {\n      return this.jCal[TYPE_INDEX];\n    },\n\n    /**\n     * The name of this property, in lowercase.\n     * @readonly\n     * @type {String}\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The parent component for this property.\n     * @type {ICAL.Component}\n     */\n    get parent() {\n      return this._parent;\n    },\n\n    set parent(p) {\n      // Before setting the parent, check if the design set has changed. If it\n      // has, we later need to update the type if it was unknown before.\n      var designSetChanged = !this._parent || (p && p._designSet != this._parent._designSet);\n\n      this._parent = p;\n\n      if (this.type == design.defaultType && designSetChanged) {\n        this.jCal[TYPE_INDEX] = this.getDefaultType();\n        this._updateType();\n      }\n\n      return p;\n    },\n\n    /**\n     * The design set for this property, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      return this.parent ? this.parent._designSet : design.defaultSet;\n    },\n\n    /**\n     * Updates the type metadata from the current jCal type and design set.\n     *\n     * @private\n     */\n    _updateType: function() {\n      var designSet = this._designSet;\n\n      if (this.type in designSet.value) {\n        var designType = designSet.value[this.type];\n\n        if ('decorate' in designSet.value[this.type]) {\n          this.isDecorated = true;\n        } else {\n          this.isDecorated = false;\n        }\n\n        if (this.name in designSet.property) {\n          this.isMultiValue = ('multiValue' in designSet.property[this.name]);\n          this.isStructuredValue = ('structuredValue' in designSet.property[this.name]);\n        }\n      }\n    },\n\n    /**\n     * Hydrate a single value. The act of hydrating means turning the raw jCal\n     * value into a potentially wrapped object, for example {@link ICAL.Time}.\n     *\n     * @private\n     * @param {Number} index        The index of the value to hydrate\n     * @return {Object}             The decorated value.\n     */\n    _hydrateValue: function(index) {\n      if (this._values && this._values[index]) {\n        return this._values[index];\n      }\n\n      // for the case where there is no value.\n      if (this.jCal.length <= (VALUE_INDEX + index)) {\n        return null;\n      }\n\n      if (this.isDecorated) {\n        if (!this._values) {\n          this._values = [];\n        }\n        return (this._values[index] = this._decorate(\n          this.jCal[VALUE_INDEX + index]\n        ));\n      } else {\n        return this.jCal[VALUE_INDEX + index];\n      }\n    },\n\n    /**\n     * Decorate a single value, returning its wrapped object. This is used by\n     * the hydrate function to actually wrap the value.\n     *\n     * @private\n     * @param {?} value         The value to decorate\n     * @return {Object}         The decorated value\n     */\n    _decorate: function(value) {\n      return this._designSet.value[this.type].decorate(value, this);\n    },\n\n    /**\n     * Undecorate a single value, returning its raw jCal data.\n     *\n     * @private\n     * @param {Object} value         The value to undecorate\n     * @return {?}                   The undecorated value\n     */\n    _undecorate: function(value) {\n      return this._designSet.value[this.type].undecorate(value, this);\n    },\n\n    /**\n     * Sets the value at the given index while also hydrating it. The passed\n     * value can either be a decorated or undecorated value.\n     *\n     * @private\n     * @param {?} value             The value to set\n     * @param {Number} index        The index to set it at\n     */\n    _setDecoratedValue: function(value, index) {\n      if (!this._values) {\n        this._values = [];\n      }\n\n      if (typeof(value) === 'object' && 'icaltype' in value) {\n        // decorated value\n        this.jCal[VALUE_INDEX + index] = this._undecorate(value);\n        this._values[index] = value;\n      } else {\n        // undecorated value\n        this.jCal[VALUE_INDEX + index] = value;\n        this._values[index] = this._decorate(value);\n      }\n    },\n\n    /**\n     * Gets a parameter on the property.\n     *\n     * @param {String}        name   Property name (lowercase)\n     * @return {Array|String}        Property value\n     */\n    getParameter: function(name) {\n      if (name in this.jCal[PROP_INDEX]) {\n        return this.jCal[PROP_INDEX][name];\n      } else {\n        return undefined;\n      }\n    },\n\n    /**\n     * Gets first parameter on the property.\n     *\n     * @param {String}        name   Property name (lowercase)\n     * @return {String}        Property value\n     */\n    getFirstParameter: function(name) {\n      var parameters = this.getParameter(name);\n\n      if (Array.isArray(parameters)) {\n        return parameters[0];\n      }\n\n      return parameters;\n    },\n\n    /**\n     * Sets a parameter on the property.\n     *\n     * @param {String}       name     The parameter name\n     * @param {Array|String} value    The parameter value\n     */\n    setParameter: function(name, value) {\n      var lcname = name.toLowerCase();\n      if (typeof value === \"string\" &&\n          lcname in this._designSet.param &&\n          'multiValue' in this._designSet.param[lcname]) {\n          value = [value];\n      }\n      this.jCal[PROP_INDEX][name] = value;\n    },\n\n    /**\n     * Removes a parameter\n     *\n     * @param {String} name     The parameter name\n     */\n    removeParameter: function(name) {\n      delete this.jCal[PROP_INDEX][name];\n    },\n\n    /**\n     * Get the default type based on this property's name.\n     *\n     * @return {String}     The default type for this property\n     */\n    getDefaultType: function() {\n      var name = this.jCal[NAME_INDEX];\n      var designSet = this._designSet;\n\n      if (name in designSet.property) {\n        var details = designSet.property[name];\n        if ('defaultType' in details) {\n          return details.defaultType;\n        }\n      }\n      return design.defaultType;\n    },\n\n    /**\n     * Sets type of property and clears out any existing values of the current\n     * type.\n     *\n     * @param {String} type     New iCAL type (see design.*.values)\n     */\n    resetType: function(type) {\n      this.removeAllValues();\n      this.jCal[TYPE_INDEX] = type;\n      this._updateType();\n    },\n\n    /**\n     * Finds the first property value.\n     *\n     * @return {String}         First property value\n     */\n    getFirstValue: function() {\n      return this._hydrateValue(0);\n    },\n\n    /**\n     * Gets all values on the property.\n     *\n     * NOTE: this creates an array during each call.\n     *\n     * @return {Array}          List of values\n     */\n    getValues: function() {\n      var len = this.jCal.length - VALUE_INDEX;\n\n      if (len < 1) {\n        // its possible for a property to have no value.\n        return [];\n      }\n\n      var i = 0;\n      var result = [];\n\n      for (; i < len; i++) {\n        result[i] = this._hydrateValue(i);\n      }\n\n      return result;\n    },\n\n    /**\n     * Removes all values from this property\n     */\n    removeAllValues: function() {\n      if (this._values) {\n        this._values.length = 0;\n      }\n      this.jCal.length = 3;\n    },\n\n    /**\n     * Sets the values of the property.  Will overwrite the existing values.\n     * This can only be used for multi-value properties.\n     *\n     * @param {Array} values    An array of values\n     */\n    setValues: function(values) {\n      if (!this.isMultiValue) {\n        throw new Error(\n          this.name + ': does not not support mulitValue.\\n' +\n          'override isMultiValue'\n        );\n      }\n\n      var len = values.length;\n      var i = 0;\n      this.removeAllValues();\n\n      if (len > 0 &&\n          typeof(values[0]) === 'object' &&\n          'icaltype' in values[0]) {\n        this.resetType(values[0].icaltype);\n      }\n\n      if (this.isDecorated) {\n        for (; i < len; i++) {\n          this._setDecoratedValue(values[i], i);\n        }\n      } else {\n        for (; i < len; i++) {\n          this.jCal[VALUE_INDEX + i] = values[i];\n        }\n      }\n    },\n\n    /**\n     * Sets the current value of the property. If this is a multi-value\n     * property, all other values will be removed.\n     *\n     * @param {String|Object} value     New property value.\n     */\n    setValue: function(value) {\n      this.removeAllValues();\n      if (typeof(value) === 'object' && 'icaltype' in value) {\n        this.resetType(value.icaltype);\n      }\n\n      if (this.isDecorated) {\n        this._setDecoratedValue(value, 0);\n      } else {\n        this.jCal[VALUE_INDEX] = value;\n      }\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toICALString: function() {\n      return ICAL.stringify.property(\n        this.jCal, this._designSet, true\n      );\n    }\n  };\n\n  /**\n   * Create an {@link ICAL.Property} by parsing the passed iCalendar string.\n   *\n   * @param {String} str                        The iCalendar string to parse\n   * @param {ICAL.design.designSet=} designSet  The design data to use for this property\n   * @return {ICAL.Property}                    The created iCalendar property\n   */\n  Property.fromString = function(str, designSet) {\n    return new Property(ICAL.parse.property(str, designSet));\n  };\n\n  return Property;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.UtcOffset = (function() {\n\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.UtcOffset\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  function UtcOffset(aData) {\n    this.fromData(aData);\n  }\n\n  UtcOffset.prototype = {\n\n    /**\n     * The hours in the utc-offset\n     * @type {Number}\n     */\n    hours: 0,\n\n    /**\n     * The minutes in the utc-offset\n     * @type {Number}\n     */\n    minutes: 0,\n\n    /**\n     * The sign of the utc offset, 1 for positive offset, -1 for negative\n     * offsets.\n     * @type {Number}\n     */\n    factor: 1,\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"utc-offset\"\n     */\n    icaltype: \"utc-offset\",\n\n    /**\n     * Returns a clone of the utc offset object.\n     *\n     * @return {ICAL.UtcOffset}     The cloned object\n     */\n    clone: function() {\n      return ICAL.UtcOffset.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData          An object with members of the utc offset\n     * @param {Number=} aData.hours   The hours for the utc offset\n     * @param {Number=} aData.minutes The minutes in the utc offset\n     * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n     */\n    fromData: function(aData) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (aData.hasOwnProperty(key)) {\n            this[key] = aData[key];\n          }\n        }\n      }\n      this._normalize();\n    },\n\n    /**\n     * Sets up the current instance from the given seconds value. The seconds\n     * value is truncated to the minute. Offsets are wrapped when the world\n     * ends, the hour after UTC+14:00 is UTC-12:00.\n     *\n     * @param {Number} aSeconds         The seconds to convert into an offset\n     */\n    fromSeconds: function(aSeconds) {\n      var secs = Math.abs(aSeconds);\n\n      this.factor = aSeconds < 0 ? -1 : 1;\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n\n      secs -= (this.hours * 3600);\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      return this;\n    },\n\n    /**\n     * Convert the current offset to a value in seconds\n     *\n     * @return {Number}                 The offset in seconds\n     */\n    toSeconds: function() {\n      return this.factor * (60 * this.minutes + 3600 * this.hours);\n    },\n\n    /**\n     * Compare this utc offset with another one.\n     *\n     * @param {ICAL.UtcOffset} other        The other offset to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toSeconds();\n      var b = other.toSeconds();\n      return (a > b) - (b > a);\n    },\n\n    _normalize: function() {\n      // Range: 97200 seconds (with 1 hour inbetween)\n      var secs = this.toSeconds();\n      var factor = this.factor;\n      while (secs < -43200) { // = UTC-12:00\n        secs += 97200;\n      }\n      while (secs > 50400) { // = UTC+14:00\n        secs -= 97200;\n      }\n\n      this.fromSeconds(secs);\n\n      // Avoid changing the factor when on zero seconds\n      if (secs == 0) {\n        this.factor = factor;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this utc-offset.\n     * @return {String}\n     */\n    toICALString: function() {\n      return ICAL.design.icalendar.value['utc-offset'].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this utc-offset.\n     * @return {String}\n     */\n    toString: function toString() {\n      return (this.factor == 1 ? \"+\" : \"-\") +\n              ICAL.helpers.pad2(this.hours) + ':' +\n              ICAL.helpers.pad2(this.minutes);\n    }\n  };\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed string.\n   *\n   * @param {String} aString    The string to parse\n   * @return {ICAL.Duration}    The created utc-offset instance\n   */\n  UtcOffset.fromString = function(aString) {\n    // -05:00\n    var options = {};\n    //TODO: support seconds per rfc5545 ?\n    options.factor = (aString[0] === '+') ? 1 : -1;\n    options.hours = ICAL.helpers.strictParseInt(aString.substr(1, 2));\n    options.minutes = ICAL.helpers.strictParseInt(aString.substr(4, 2));\n\n    return new ICAL.UtcOffset(options);\n  };\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds\n   * value.\n   *\n   * @param {Number} aSeconds       The number of seconds to convert\n   */\n  UtcOffset.fromSeconds = function(aSeconds) {\n    var instance = new UtcOffset();\n    instance.fromSeconds(aSeconds);\n    return instance;\n  };\n\n  return UtcOffset;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Binary = (function() {\n\n  /**\n   * @classdesc\n   * Represents the BINARY value type, which contains extra methods for\n   * encoding and decoding.\n   *\n   * @class\n   * @alias ICAL.Binary\n   * @param {String} aValue     The binary data for this value\n   */\n  function Binary(aValue) {\n    this.value = aValue;\n  }\n\n  Binary.prototype = {\n    /**\n     * The type name, to be used in the jCal object.\n     * @default \"binary\"\n     * @constant\n     */\n    icaltype: \"binary\",\n\n    /**\n     * Base64 decode the current value\n     *\n     * @return {String}         The base64-decoded value\n     */\n    decodeValue: function decodeValue() {\n      return this._b64_decode(this.value);\n    },\n\n    /**\n     * Encodes the passed parameter with base64 and sets the internal\n     * value to the result.\n     *\n     * @param {String} aValue      The raw binary value to encode\n     */\n    setEncodedValue: function setEncodedValue(aValue) {\n      this.value = this._b64_encode(aValue);\n    },\n\n    _b64_encode: function base64_encode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Bayron Guevara\n      // +   improved by: Thunder.m\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   improved by: Rafał Kukawski (http://kukawski.pl)\n      // *     example 1: base64_encode('Kevin van Zonneveld');\n      // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['atob'] == 'function') {\n      //    return atob(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n                \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n        ac = 0,\n        enc = \"\",\n        tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      do { // pack three octets into four hexets\n        o1 = data.charCodeAt(i++);\n        o2 = data.charCodeAt(i++);\n        o3 = data.charCodeAt(i++);\n\n        bits = o1 << 16 | o2 << 8 | o3;\n\n        h1 = bits >> 18 & 0x3f;\n        h2 = bits >> 12 & 0x3f;\n        h3 = bits >> 6 & 0x3f;\n        h4 = bits & 0x3f;\n\n        // use hexets to index into b64, and append result to encoded string\n        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n      } while (i < data.length);\n\n      enc = tmp_arr.join('');\n\n      var r = data.length % 3;\n\n      return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n\n    },\n\n    _b64_decode: function base64_decode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Thunder.m\n      // +      input by: Aman Gupta\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Onno Marsman\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +      input by: Brett Zamir (http://brett-zamir.me)\n      // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\n      // *     returns 1: 'Kevin van Zonneveld'\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['btoa'] == 'function') {\n      //    return btoa(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n                \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n        ac = 0,\n        dec = \"\",\n        tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      data += '';\n\n      do { // unpack four hexets into three octets using index points in b64\n        h1 = b64.indexOf(data.charAt(i++));\n        h2 = b64.indexOf(data.charAt(i++));\n        h3 = b64.indexOf(data.charAt(i++));\n        h4 = b64.indexOf(data.charAt(i++));\n\n        bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n\n        o1 = bits >> 16 & 0xff;\n        o2 = bits >> 8 & 0xff;\n        o3 = bits & 0xff;\n\n        if (h3 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1);\n        } else if (h4 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2);\n        } else {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n        }\n      } while (i < data.length);\n\n      dec = tmp_arr.join('');\n\n      return dec;\n    },\n\n    /**\n     * The string representation of this value\n     * @return {String}\n     */\n    toString: function() {\n      return this.value;\n    }\n  };\n\n  /**\n   * Creates a binary value from the given string.\n   *\n   * @param {String} aString        The binary value string\n   * @return {ICAL.Binary}          The binary value instance\n   */\n  Binary.fromString = function(aString) {\n    return new Binary(aString);\n  };\n\n  return Binary;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  /**\n   * @classdesc\n   * This class represents the \"period\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @description\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @class\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   */\n  ICAL.Period = function icalperiod(aData) {\n    this.wrappedJSObject = this;\n\n    if (aData && 'start' in aData) {\n      if (aData.start && !(aData.start instanceof ICAL.Time)) {\n        throw new TypeError('.start must be an instance of ICAL.Time');\n      }\n      this.start = aData.start;\n    }\n\n    if (aData && aData.end && aData.duration) {\n      throw new Error('cannot accept both end and duration');\n    }\n\n    if (aData && 'end' in aData) {\n      if (aData.end && !(aData.end instanceof ICAL.Time)) {\n        throw new TypeError('.end must be an instance of ICAL.Time');\n      }\n      this.end = aData.end;\n    }\n\n    if (aData && 'duration' in aData) {\n      if (aData.duration && !(aData.duration instanceof ICAL.Duration)) {\n        throw new TypeError('.duration must be an instance of ICAL.Duration');\n      }\n      this.duration = aData.duration;\n    }\n  };\n\n  ICAL.Period.prototype = {\n\n    /**\n     * The start of the period\n     * @type {ICAL.Time}\n     */\n    start: null,\n\n    /**\n     * The end of the period\n     * @type {ICAL.Time}\n     */\n    end: null,\n\n    /**\n     * The duration of the period\n     * @type {ICAL.Duration}\n     */\n    duration: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalperiod\"\n     */\n    icalclass: \"icalperiod\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"period\"\n     */\n    icaltype: \"period\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Period}      The cloned object\n     */\n    clone: function() {\n      return ICAL.Period.fromData({\n        start: this.start ? this.start.clone() : null,\n        end: this.end ? this.end.clone() : null,\n        duration: this.duration ? this.duration.clone() : null\n      });\n    },\n\n    /**\n     * Calculates the duration of the period, either directly or by subtracting\n     * start from end date.\n     *\n     * @return {ICAL.Duration}      The calculated duration\n     */\n    getDuration: function duration() {\n      if (this.duration) {\n        return this.duration;\n      } else {\n        return this.end.subtractDate(this.start);\n      }\n    },\n\n    /**\n     * Calculates the end date of the period, either directly or by adding\n     * duration to start date.\n     *\n     * @return {ICAL.Time}          The calculated end date\n     */\n    getEnd: function() {\n      if (this.end) {\n        return this.end;\n      } else {\n        var end = this.start.clone();\n        end.addDuration(this.duration);\n        return end;\n      }\n    },\n\n    /**\n     * The string representation of this period.\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.start + \"/\" + (this.end || this.duration);\n    },\n\n    /**\n     * The jCal representation of this period type.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return [this.start.toString(), (this.end || this.duration).toString()];\n    },\n\n    /**\n     * The iCalendar string representation of this period.\n     * @return {String}\n     */\n    toICALString: function() {\n      return this.start.toICALString() + \"/\" +\n             (this.end || this.duration).toICALString();\n    }\n  };\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the passed string.\n   *\n   * @param {String} str            The string to parse\n   * @param {ICAL.Property} prop    The property this period will be on\n   * @return {ICAL.Period}          The created period instance\n   */\n  ICAL.Period.fromString = function fromString(str, prop) {\n    var parts = str.split('/');\n\n    if (parts.length !== 2) {\n      throw new Error(\n        'Invalid string value: \"' + str + '\" must contain a \"/\" char.'\n      );\n    }\n\n    var options = {\n      start: ICAL.Time.fromDateTimeString(parts[0], prop)\n    };\n\n    var end = parts[1];\n\n    if (ICAL.Duration.isValueString(end)) {\n      options.duration = ICAL.Duration.fromString(end);\n    } else {\n      options.end = ICAL.Time.fromDateTimeString(end, prop);\n    }\n\n    return new ICAL.Period(options);\n  };\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the given data object.\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   * @return {ICAL.Period}                  The period instance\n   */\n  ICAL.Period.fromData = function fromData(aData) {\n    return new ICAL.Period(aData);\n  };\n\n  /**\n   * Returns a new period instance from the given jCal data array. The first\n   * member is always the start date string, the second member is either a\n   * duration or end date string.\n   *\n   * @param {Array<String,String>} aData    The jCal data array\n   * @param {ICAL.Property} aProp           The property this jCal data is on\n   * @param {Boolean} aLenient              If true, data value can be both date and date-time\n   * @return {ICAL.Period}                  The period instance\n   */\n  ICAL.Period.fromJSON = function(aData, aProp, aLenient) {\n    function fromDateOrDateTimeString(aValue, aProp) {\n      if (aLenient) {\n        return ICAL.Time.fromString(aValue, aProp);\n      } else {\n        return ICAL.Time.fromDateTimeString(aValue, aProp);\n      }\n    }\n\n    if (ICAL.Duration.isValueString(aData[1])) {\n      return ICAL.Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        duration: ICAL.Duration.fromString(aData[1])\n      });\n    } else {\n      return ICAL.Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        end: fromDateOrDateTimeString(aData[1], aProp)\n      });\n    }\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  var DURATION_LETTERS = /([PDWHMTS]{1,1})/;\n\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Duration\n   * @param {Object} data               An object with members of the duration\n   * @param {Number} data.weeks         Duration in weeks\n   * @param {Number} data.days          Duration in days\n   * @param {Number} data.hours         Duration in hours\n   * @param {Number} data.minutes       Duration in minutes\n   * @param {Number} data.seconds       Duration in seconds\n   * @param {Boolean} data.isNegative   If true, the duration is negative\n   */\n  ICAL.Duration = function icalduration(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Duration.prototype = {\n    /**\n     * The weeks in this duration\n     * @type {Number}\n     * @default 0\n     */\n    weeks: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    days: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    hours: 0,\n\n    /**\n     * The minutes in this duration\n     * @type {Number}\n     * @default 0\n     */\n    minutes: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Number}\n     * @default 0\n     */\n    seconds: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Boolean}\n     * @default false\n     */\n    isNegative: false,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalduration\"\n     */\n    icalclass: \"icalduration\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"duration\"\n     */\n    icaltype: \"duration\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Duration}      The cloned object\n     */\n    clone: function clone() {\n      return ICAL.Duration.fromData(this);\n    },\n\n    /**\n     * The duration value expressed as a number of seconds.\n     *\n     * @return {Number}             The duration value in seconds\n     */\n    toSeconds: function toSeconds() {\n      var seconds = this.seconds + 60 * this.minutes + 3600 * this.hours +\n                    86400 * this.days + 7 * 86400 * this.weeks;\n      return (this.isNegative ? -seconds : seconds);\n    },\n\n    /**\n     * Reads the passed seconds value into this duration object. Afterwards,\n     * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up\n     * accordingly.\n     *\n     * @param {Number} aSeconds     The duration value in seconds\n     * @return {ICAL.Duration}      Returns this instance\n     */\n    fromSeconds: function fromSeconds(aSeconds) {\n      var secs = Math.abs(aSeconds);\n\n      this.isNegative = (aSeconds < 0);\n      this.days = ICAL.helpers.trunc(secs / 86400);\n\n      // If we have a flat number of weeks, use them.\n      if (this.days % 7 == 0) {\n        this.weeks = this.days / 7;\n        this.days = 0;\n      } else {\n        this.weeks = 0;\n      }\n\n      secs -= (this.days + 7 * this.weeks) * 86400;\n\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n      secs -= this.hours * 3600;\n\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      secs -= this.minutes * 60;\n\n      this.seconds = secs;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData               An object with members of the duration\n     * @param {Number} aData.weeks         Duration in weeks\n     * @param {Number} aData.days          Duration in days\n     * @param {Number} aData.hours         Duration in hours\n     * @param {Number} aData.minutes       Duration in minutes\n     * @param {Number} aData.seconds       Duration in seconds\n     * @param {Boolean} aData.isNegative   If true, the duration is negative\n     */\n    fromData: function fromData(aData) {\n      var propsToCopy = [\"weeks\", \"days\", \"hours\",\n                         \"minutes\", \"seconds\", \"isNegative\"];\n      for (var key in propsToCopy) {\n        /* istanbul ignore if */\n        if (!propsToCopy.hasOwnProperty(key)) {\n          continue;\n        }\n        var prop = propsToCopy[key];\n        if (aData && prop in aData) {\n          this[prop] = aData[prop];\n        } else {\n          this[prop] = 0;\n        }\n      }\n    },\n\n    /**\n     * Resets the duration instance to the default values, i.e. PT0S\n     */\n    reset: function reset() {\n      this.isNegative = false;\n      this.weeks = 0;\n      this.days = 0;\n      this.hours = 0;\n      this.minutes = 0;\n      this.seconds = 0;\n    },\n\n    /**\n     * Compares the duration instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function compare(aOther) {\n      var thisSeconds = this.toSeconds();\n      var otherSeconds = aOther.toSeconds();\n      return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);\n    },\n\n    /**\n     * Normalizes the duration instance. For example, a duration with a value\n     * of 61 seconds will be normalized to 1 minute and 1 second.\n     */\n    normalize: function normalize() {\n      this.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * The string representation of this duration.\n     * @return {String}\n     */\n    toString: function toString() {\n      if (this.toSeconds() == 0) {\n        return \"PT0S\";\n      } else {\n        var str = \"\";\n        if (this.isNegative) str += \"-\";\n        str += \"P\";\n        if (this.weeks) str += this.weeks + \"W\";\n        if (this.days) str += this.days + \"D\";\n\n        if (this.hours || this.minutes || this.seconds) {\n          str += \"T\";\n          if (this.hours) str += this.hours + \"H\";\n          if (this.minutes) str += this.minutes + \"M\";\n          if (this.seconds) str += this.seconds + \"S\";\n        }\n        return str;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this duration.\n     * @return {String}\n     */\n    toICALString: function() {\n      return this.toString();\n    }\n  };\n\n  /**\n   * Returns a new ICAL.Duration instance from the passed seconds value.\n   *\n   * @param {Number} aSeconds       The seconds to create the instance from\n   * @return {ICAL.Duration}        The newly created duration instance\n   */\n  ICAL.Duration.fromSeconds = function icalduration_from_seconds(aSeconds) {\n    return (new ICAL.Duration()).fromSeconds(aSeconds);\n  };\n\n  /**\n   * Internal helper function to handle a chunk of a duration.\n   *\n   * @param {String} letter type of duration chunk\n   * @param {String} number numeric value or -/+\n   * @param {Object} dict target to assign values to\n   */\n  function parseDurationChunk(letter, number, object) {\n    var type;\n    switch (letter) {\n      case 'P':\n        if (number && number === '-') {\n          object.isNegative = true;\n        } else {\n          object.isNegative = false;\n        }\n        // period\n        break;\n      case 'D':\n        type = 'days';\n        break;\n      case 'W':\n        type = 'weeks';\n        break;\n      case 'H':\n        type = 'hours';\n        break;\n      case 'M':\n        type = 'minutes';\n        break;\n      case 'S':\n        type = 'seconds';\n        break;\n      default:\n        // Not a valid chunk\n        return 0;\n    }\n\n    if (type) {\n      if (!number && number !== 0) {\n        throw new Error(\n          'invalid duration value: Missing number before \"' + letter + '\"'\n        );\n      }\n      var num = parseInt(number, 10);\n      if (ICAL.helpers.isStrictlyNaN(num)) {\n        throw new Error(\n          'invalid duration value: Invalid number \"' + number + '\" before \"' + letter + '\"'\n        );\n      }\n      object[type] = num;\n    }\n\n    return 1;\n  }\n\n  /**\n   * Checks if the given string is an iCalendar duration value.\n   *\n   * @param {String} value      The raw ical value\n   * @return {Boolean}          True, if the given value is of the\n   *                              duration ical type\n   */\n  ICAL.Duration.isValueString = function(string) {\n    return (string[0] === 'P' || string[1] === 'P');\n  };\n\n  /**\n   * Creates a new {@link ICAL.Duration} instance from the passed string.\n   *\n   * @param {String} aStr       The string to parse\n   * @return {ICAL.Duration}    The created duration instance\n   */\n  ICAL.Duration.fromString = function icalduration_from_string(aStr) {\n    var pos = 0;\n    var dict = Object.create(null);\n    var chunks = 0;\n\n    while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {\n      var type = aStr[pos];\n      var numeric = aStr.substr(0, pos);\n      aStr = aStr.substr(pos + 1);\n\n      chunks += parseDurationChunk(type, numeric, dict);\n    }\n\n    if (chunks < 2) {\n      // There must be at least a chunk with \"P\" and some unit chunk\n      throw new Error(\n        'invalid duration value: Not enough duration components in \"' + aStr + '\"'\n      );\n    }\n\n    return new ICAL.Duration(dict);\n  };\n\n  /**\n   * Creates a new ICAL.Duration instance from the given data object.\n   *\n   * @param {Object} aData               An object with members of the duration\n   * @param {Number} aData.weeks         Duration in weeks\n   * @param {Number} aData.days          Duration in days\n   * @param {Number} aData.hours         Duration in hours\n   * @param {Number} aData.minutes       Duration in minutes\n   * @param {Number} aData.seconds       Duration in seconds\n   * @param {Boolean} aData.isNegative   If true, the duration is negative\n   * @return {ICAL.Duration}             The createad duration instance\n   */\n  ICAL.Duration.fromData = function icalduration_from_data(aData) {\n    return new ICAL.Duration(aData);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2012 */\n\n\n\n(function() {\n  var OPTIONS = [\"tzid\", \"location\", \"tznames\",\n                 \"latitude\", \"longitude\"];\n\n  /**\n   * @classdesc\n   * Timezone representation, created by passing in a tzid and component.\n   *\n   * @example\n   * var vcalendar;\n   * var timezoneComp = vcalendar.getFirstSubcomponent('vtimezone');\n   * var tzid = timezoneComp.getFirstPropertyValue('tzid');\n   *\n   * var timezone = new ICAL.Timezone({\n   *   component: timezoneComp,\n   *   tzid\n   * });\n   *\n   * @class\n   * @param {ICAL.Component|Object} data options for class\n   * @param {String|ICAL.Component} data.component\n   *        If data is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} data.tzid      The timezone identifier\n   * @param {String} data.location  The timezone locationw\n   * @param {String} data.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} data.latitude  The latitude of the timezone\n   * @param {Number} data.longitude The longitude of the timezone\n   */\n  ICAL.Timezone = function icaltimezone(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Timezone.prototype = {\n\n    /**\n     * Timezone identifier\n     * @type {String}\n     */\n    tzid: \"\",\n\n    /**\n     * Timezone location\n     * @type {String}\n     */\n    location: \"\",\n\n    /**\n     * Alternative timezone name, for the string representation\n     * @type {String}\n     */\n    tznames: \"\",\n\n    /**\n     * The primary latitude for the timezone.\n     * @type {Number}\n     */\n    latitude: 0.0,\n\n    /**\n     * The primary longitude for the timezone.\n     * @type {Number}\n     */\n    longitude: 0.0,\n\n    /**\n     * The vtimezone component for this timezone.\n     * @type {ICAL.Component}\n     */\n    component: null,\n\n    /**\n     * The year this timezone has been expanded to. All timezone transition\n     * dates until this year are known and can be used for calculation\n     *\n     * @private\n     * @type {Number}\n     */\n    expandedUntilYear: 0,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltimezone\"\n     */\n    icalclass: \"icaltimezone\",\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {ICAL.Component|Object} aData options for class\n     * @param {String|ICAL.Component} aData.component\n     *        If aData is a simple object, then this member can be set to either a\n     *        string containing the component data, or an already parsed\n     *        ICAL.Component\n     * @param {String} aData.tzid      The timezone identifier\n     * @param {String} aData.location  The timezone locationw\n     * @param {String} aData.tznames   An alternative string representation of the\n     *                                  timezone\n     * @param {Number} aData.latitude  The latitude of the timezone\n     * @param {Number} aData.longitude The longitude of the timezone\n     */\n    fromData: function fromData(aData) {\n      this.expandedUntilYear = 0;\n      this.changes = [];\n\n      if (aData instanceof ICAL.Component) {\n        // Either a component is passed directly\n        this.component = aData;\n      } else {\n        // Otherwise the component may be in the data object\n        if (aData && \"component\" in aData) {\n          if (typeof aData.component == \"string\") {\n            // If a string was passed, parse it as a component\n            var jCal = ICAL.parse(aData.component);\n            this.component = new ICAL.Component(jCal);\n          } else if (aData.component instanceof ICAL.Component) {\n            // If it was a component already, then just set it\n            this.component = aData.component;\n          } else {\n            // Otherwise just null out the component\n            this.component = null;\n          }\n        }\n\n        // Copy remaining passed properties\n        for (var key in OPTIONS) {\n          /* istanbul ignore else */\n          if (OPTIONS.hasOwnProperty(key)) {\n            var prop = OPTIONS[key];\n            if (aData && prop in aData) {\n              this[prop] = aData[prop];\n            }\n          }\n        }\n      }\n\n      // If we have a component but no TZID, attempt to get it from the\n      // component's properties.\n      if (this.component instanceof ICAL.Component && !this.tzid) {\n        this.tzid = this.component.getFirstPropertyValue('tzid');\n      }\n\n      return this;\n    },\n\n    /**\n     * Finds the utcOffset the given time would occur in this timezone.\n     *\n     * @param {ICAL.Time} tt        The time to check for\n     * @return {Number} utc offset in seconds\n     */\n    utcOffset: function utcOffset(tt) {\n      if (this == ICAL.Timezone.utcTimezone || this == ICAL.Timezone.localTimezone) {\n        return 0;\n      }\n\n      this._ensureCoverage(tt.year);\n\n      if (!this.changes.length) {\n        return 0;\n      }\n\n      var tt_change = {\n        year: tt.year,\n        month: tt.month,\n        day: tt.day,\n        hour: tt.hour,\n        minute: tt.minute,\n        second: tt.second\n      };\n\n      var change_num = this._findNearbyChange(tt_change);\n      var change_num_to_use = -1;\n      var step = 1;\n\n      // TODO: replace with bin search?\n      for (;;) {\n        var change = ICAL.helpers.clone(this.changes[change_num], true);\n        if (change.utcOffset < change.prevUtcOffset) {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);\n        } else {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                          change.prevUtcOffset);\n        }\n\n        var cmp = ICAL.Timezone._compare_change_fn(tt_change, change);\n\n        if (cmp >= 0) {\n          change_num_to_use = change_num;\n        } else {\n          step = -1;\n        }\n\n        if (step == -1 && change_num_to_use != -1) {\n          break;\n        }\n\n        change_num += step;\n\n        if (change_num < 0) {\n          return 0;\n        }\n\n        if (change_num >= this.changes.length) {\n          break;\n        }\n      }\n\n      var zone_change = this.changes[change_num_to_use];\n      var utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;\n\n      if (utcOffset_change < 0 && change_num_to_use > 0) {\n        var tmp_change = ICAL.helpers.clone(zone_change, true);\n        ICAL.Timezone.adjust_change(tmp_change, 0, 0, 0,\n                                        tmp_change.prevUtcOffset);\n\n        if (ICAL.Timezone._compare_change_fn(tt_change, tmp_change) < 0) {\n          var prev_zone_change = this.changes[change_num_to_use - 1];\n\n          var want_daylight = false; // TODO\n\n          if (zone_change.is_daylight != want_daylight &&\n              prev_zone_change.is_daylight == want_daylight) {\n            zone_change = prev_zone_change;\n          }\n        }\n      }\n\n      // TODO return is_daylight?\n      return zone_change.utcOffset;\n    },\n\n    _findNearbyChange: function icaltimezone_find_nearby_change(change) {\n      // find the closest match\n      var idx = ICAL.helpers.binsearchInsert(\n        this.changes,\n        change,\n        ICAL.Timezone._compare_change_fn\n      );\n\n      if (idx >= this.changes.length) {\n        return this.changes.length - 1;\n      }\n\n      return idx;\n    },\n\n    _ensureCoverage: function(aYear) {\n      if (ICAL.Timezone._minimumExpansionYear == -1) {\n        var today = ICAL.Time.now();\n        ICAL.Timezone._minimumExpansionYear = today.year;\n      }\n\n      var changesEndYear = aYear;\n      if (changesEndYear < ICAL.Timezone._minimumExpansionYear) {\n        changesEndYear = ICAL.Timezone._minimumExpansionYear;\n      }\n\n      changesEndYear += ICAL.Timezone.EXTRA_COVERAGE;\n\n      if (changesEndYear > ICAL.Timezone.MAX_YEAR) {\n        changesEndYear = ICAL.Timezone.MAX_YEAR;\n      }\n\n      if (!this.changes.length || this.expandedUntilYear < aYear) {\n        var subcomps = this.component.getAllSubcomponents();\n        var compLen = subcomps.length;\n        var compIdx = 0;\n\n        for (; compIdx < compLen; compIdx++) {\n          this._expandComponent(\n            subcomps[compIdx], changesEndYear, this.changes\n          );\n        }\n\n        this.changes.sort(ICAL.Timezone._compare_change_fn);\n        this.expandedUntilYear = changesEndYear;\n      }\n    },\n\n    _expandComponent: function(aComponent, aYear, changes) {\n      if (!aComponent.hasProperty(\"dtstart\") ||\n          !aComponent.hasProperty(\"tzoffsetto\") ||\n          !aComponent.hasProperty(\"tzoffsetfrom\")) {\n        return null;\n      }\n\n      var dtstart = aComponent.getFirstProperty(\"dtstart\").getFirstValue();\n      var change;\n\n      function convert_tzoffset(offset) {\n        return offset.factor * (offset.hours * 3600 + offset.minutes * 60);\n      }\n\n      function init_changes() {\n        var changebase = {};\n        changebase.is_daylight = (aComponent.name == \"daylight\");\n        changebase.utcOffset = convert_tzoffset(\n          aComponent.getFirstProperty(\"tzoffsetto\").getFirstValue()\n        );\n\n        changebase.prevUtcOffset = convert_tzoffset(\n          aComponent.getFirstProperty(\"tzoffsetfrom\").getFirstValue()\n        );\n\n        return changebase;\n      }\n\n      if (!aComponent.hasProperty(\"rrule\") && !aComponent.hasProperty(\"rdate\")) {\n        change = init_changes();\n        change.year = dtstart.year;\n        change.month = dtstart.month;\n        change.day = dtstart.day;\n        change.hour = dtstart.hour;\n        change.minute = dtstart.minute;\n        change.second = dtstart.second;\n\n        ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                        -change.prevUtcOffset);\n        changes.push(change);\n      } else {\n        var props = aComponent.getAllProperties(\"rdate\");\n        for (var rdatekey in props) {\n          /* istanbul ignore if */\n          if (!props.hasOwnProperty(rdatekey)) {\n            continue;\n          }\n          var rdate = props[rdatekey];\n          var time = rdate.getFirstValue();\n          change = init_changes();\n\n          change.year = time.year;\n          change.month = time.month;\n          change.day = time.day;\n\n          if (time.isDate) {\n            change.hour = dtstart.hour;\n            change.minute = dtstart.minute;\n            change.second = dtstart.second;\n\n            if (dtstart.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                              -change.prevUtcOffset);\n            }\n          } else {\n            change.hour = time.hour;\n            change.minute = time.minute;\n            change.second = time.second;\n\n            if (time.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                              -change.prevUtcOffset);\n            }\n          }\n\n          changes.push(change);\n        }\n\n        var rrule = aComponent.getFirstProperty(\"rrule\");\n\n        if (rrule) {\n          rrule = rrule.getFirstValue();\n          change = init_changes();\n\n          if (rrule.until && rrule.until.zone == ICAL.Timezone.utcTimezone) {\n            rrule.until.adjust(0, 0, 0, change.prevUtcOffset);\n            rrule.until.zone = ICAL.Timezone.localTimezone;\n          }\n\n          var iterator = rrule.iterator(dtstart);\n\n          var occ;\n          while ((occ = iterator.next())) {\n            change = init_changes();\n            if (occ.year > aYear || !occ) {\n              break;\n            }\n\n            change.year = occ.year;\n            change.month = occ.month;\n            change.day = occ.day;\n            change.hour = occ.hour;\n            change.minute = occ.minute;\n            change.second = occ.second;\n            change.isDate = occ.isDate;\n\n            ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                            -change.prevUtcOffset);\n            changes.push(change);\n          }\n        }\n      }\n\n      return changes;\n    },\n\n    /**\n     * The string representation of this timezone.\n     * @return {String}\n     */\n    toString: function toString() {\n      return (this.tznames ? this.tznames : this.tzid);\n    }\n  };\n\n  ICAL.Timezone._compare_change_fn = function icaltimezone_compare_change_fn(a, b) {\n    if (a.year < b.year) return -1;\n    else if (a.year > b.year) return 1;\n\n    if (a.month < b.month) return -1;\n    else if (a.month > b.month) return 1;\n\n    if (a.day < b.day) return -1;\n    else if (a.day > b.day) return 1;\n\n    if (a.hour < b.hour) return -1;\n    else if (a.hour > b.hour) return 1;\n\n    if (a.minute < b.minute) return -1;\n    else if (a.minute > b.minute) return 1;\n\n    if (a.second < b.second) return -1;\n    else if (a.second > b.second) return 1;\n\n    return 0;\n  };\n\n  /**\n   * Convert the date/time from one zone to the next.\n   *\n   * @param {ICAL.Time} tt                  The time to convert\n   * @param {ICAL.Timezone} from_zone       The source zone to convert from\n   * @param {ICAL.Timezone} to_zone         The target zone to convert to\n   * @return {ICAL.Time}                    The converted date/time object\n   */\n  ICAL.Timezone.convert_time = function icaltimezone_convert_time(tt, from_zone, to_zone) {\n    if (tt.isDate ||\n        from_zone.tzid == to_zone.tzid ||\n        from_zone == ICAL.Timezone.localTimezone ||\n        to_zone == ICAL.Timezone.localTimezone) {\n      tt.zone = to_zone;\n      return tt;\n    }\n\n    var utcOffset = from_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, - utcOffset);\n\n    utcOffset = to_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, utcOffset);\n\n    return null;\n  };\n\n  /**\n   * Creates a new ICAL.Timezone instance from the passed data object.\n   *\n   * @param {ICAL.Component|Object} aData options for class\n   * @param {String|ICAL.Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n  ICAL.Timezone.fromData = function icaltimezone_fromData(aData) {\n    var tt = new ICAL.Timezone();\n    return tt.fromData(aData);\n  };\n\n  /**\n   * The instance describing the UTC timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n  ICAL.Timezone.utcTimezone = ICAL.Timezone.fromData({\n    tzid: \"UTC\"\n  });\n\n  /**\n   * The instance describing the local timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n  ICAL.Timezone.localTimezone = ICAL.Timezone.fromData({\n    tzid: \"floating\"\n  });\n\n  /**\n   * Adjust a timezone change object.\n   * @private\n   * @param {Object} change     The timezone change object\n   * @param {Number} days       The extra amount of days\n   * @param {Number} hours      The extra amount of hours\n   * @param {Number} minutes    The extra amount of minutes\n   * @param {Number} seconds    The extra amount of seconds\n   */\n  ICAL.Timezone.adjust_change = function icaltimezone_adjust_change(change, days, hours, minutes, seconds) {\n    return ICAL.Time.prototype.adjust.call(\n      change,\n      days,\n      hours,\n      minutes,\n      seconds,\n      change\n    );\n  };\n\n  ICAL.Timezone._minimumExpansionYear = -1;\n  ICAL.Timezone.MAX_YEAR = 2035; // TODO this is because of time_t, which we don't need. Still usefull?\n  ICAL.Timezone.EXTRA_COVERAGE = 5;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.TimezoneService = (function() {\n  var zones;\n\n  /**\n   * @classdesc\n   * Singleton class to contain timezones.  Right now its all manual registry in\n   * the future we may use this class to download timezone information or handle\n   * loading pre-expanded timezones.\n   *\n   * @namespace\n   * @alias ICAL.TimezoneService\n   */\n  var TimezoneService = {\n    get count() {\n      return Object.keys(zones).length;\n    },\n\n    reset: function() {\n      zones = Object.create(null);\n      var utc = ICAL.Timezone.utcTimezone;\n\n      zones.Z = utc;\n      zones.UTC = utc;\n      zones.GMT = utc;\n    },\n\n    /**\n     * Checks if timezone id has been registered.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {Boolean}        False, when not present\n     */\n    has: function(tzid) {\n      return !!zones[tzid];\n    },\n\n    /**\n     * Returns a timezone by its tzid if present.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The timezone, or null if not found\n     */\n    get: function(tzid) {\n      return zones[tzid];\n    },\n\n    /**\n     * Registers a timezone object or component.\n     *\n     * @param {String=} name\n     *        The name of the timezone. Defaults to the component's TZID if not\n     *        passed.\n     * @param {ICAL.Component|ICAL.Timezone} zone\n     *        The initialized zone or vtimezone.\n     */\n    register: function(name, timezone) {\n      if (name instanceof ICAL.Component) {\n        if (name.name === 'vtimezone') {\n          timezone = new ICAL.Timezone(name);\n          name = timezone.tzid;\n        }\n      }\n\n      if (timezone instanceof ICAL.Timezone) {\n        zones[name] = timezone;\n      } else {\n        throw new TypeError('timezone must be ICAL.Timezone or ICAL.Component');\n      }\n    },\n\n    /**\n     * Removes a timezone by its tzid from the list.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The removed timezone, or null if not registered\n     */\n    remove: function(tzid) {\n      return (delete zones[tzid]);\n    }\n  };\n\n  // initialize defaults\n  TimezoneService.reset();\n\n  return TimezoneService;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n\n  /**\n   * @classdesc\n   * iCalendar Time representation (similar to JS Date object).  Fully\n   * independent of system (OS) timezone / time.  Unlike JS Date, the month\n   * January is 1, not zero.\n   *\n   * @example\n   * var time = new ICAL.Time({\n   *   year: 2012,\n   *   month: 10,\n   *   day: 11\n   *   minute: 0,\n   *   second: 0,\n   *   isDate: false\n   * });\n   *\n   *\n   * @alias ICAL.Time\n   * @class\n   * @param {Object} data           Time initialization\n   * @param {Number=} data.year     The year for this date\n   * @param {Number=} data.month    The month for this date\n   * @param {Number=} data.day      The day for this date\n   * @param {Number=} data.hour     The hour for this date\n   * @param {Number=} data.minute   The minute for this date\n   * @param {Number=} data.second   The second for this date\n   * @param {Boolean=} data.isDate  If true, the instance represents a date (as\n   *                                  opposed to a date-time)\n   * @param {ICAL.Timezone} zone timezone this position occurs in\n   */\n  ICAL.Time = function icaltime(data, zone) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n\n    /* time defaults */\n    time.year = 0;\n    time.month = 1;\n    time.day = 1;\n    time.hour = 0;\n    time.minute = 0;\n    time.second = 0;\n    time.isDate = false;\n\n    this.fromData(data, zone);\n  };\n\n  ICAL.Time._dowCache = {};\n  ICAL.Time._wnCache = {};\n\n  ICAL.Time.prototype = {\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltime\"\n     */\n    icalclass: \"icaltime\",\n    _cachedUnixTime: null,\n\n    /**\n     * The type name, to be used in the jCal object. This value may change and\n     * is strictly defined by the {@link ICAL.Time#isDate isDate} member.\n     * @readonly\n     * @type {String}\n     * @default \"date-time\"\n     */\n    get icaltype() {\n      return this.isDate ? 'date' : 'date-time';\n    },\n\n    /**\n     * The timezone for this time.\n     * @type {ICAL.Timezone}\n     */\n    zone: null,\n\n    /**\n     * Internal uses to indicate that a change has been made and the next read\n     * operation must attempt to normalize the value (for example changing the\n     * day to 33).\n     *\n     * @type {Boolean}\n     * @private\n     */\n    _pendingNormalization: false,\n\n    /**\n     * Returns a clone of the time object.\n     *\n     * @return {ICAL.Time}              The cloned object\n     */\n    clone: function() {\n      return new ICAL.Time(this._time, this.zone);\n    },\n\n    /**\n     * Reset the time instance to epoch time\n     */\n    reset: function icaltime_reset() {\n      this.fromData(ICAL.Time.epochTime);\n      this.zone = ICAL.Timezone.utcTimezone;\n    },\n\n    /**\n     * Reset the time instance to the given date/time values.\n     *\n     * @param {Number} year             The year to set\n     * @param {Number} month            The month to set\n     * @param {Number} day              The day to set\n     * @param {Number} hour             The hour to set\n     * @param {Number} minute           The minute to set\n     * @param {Number} second           The second to set\n     * @param {ICAL.Timezone} timezone  The timezone to set\n     */\n    resetTo: function icaltime_resetTo(year, month, day,\n                                       hour, minute, second, timezone) {\n      this.fromData({\n        year: year,\n        month: month,\n        day: day,\n        hour: hour,\n        minute: minute,\n        second: second,\n        zone: timezone\n      });\n    },\n\n    /**\n     * Set up the current instance from the Javascript date value.\n     *\n     * @param {?Date} aDate     The Javascript Date to read, or null to reset\n     * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n     */\n    fromJSDate: function icaltime_fromJSDate(aDate, useUTC) {\n      if (!aDate) {\n        this.reset();\n      } else {\n        if (useUTC) {\n          this.zone = ICAL.Timezone.utcTimezone;\n          this.year = aDate.getUTCFullYear();\n          this.month = aDate.getUTCMonth() + 1;\n          this.day = aDate.getUTCDate();\n          this.hour = aDate.getUTCHours();\n          this.minute = aDate.getUTCMinutes();\n          this.second = aDate.getUTCSeconds();\n        } else {\n          this.zone = ICAL.Timezone.localTimezone;\n          this.year = aDate.getFullYear();\n          this.month = aDate.getMonth() + 1;\n          this.day = aDate.getDate();\n          this.hour = aDate.getHours();\n          this.minute = aDate.getMinutes();\n          this.second = aDate.getSeconds();\n        }\n      }\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData            Time initialization\n     * @param {Number=} aData.year      The year for this date\n     * @param {Number=} aData.month     The month for this date\n     * @param {Number=} aData.day       The day for this date\n     * @param {Number=} aData.hour      The hour for this date\n     * @param {Number=} aData.minute    The minute for this date\n     * @param {Number=} aData.second    The second for this date\n     * @param {Boolean=} aData.isDate   If true, the instance represents a date\n     *                                    (as opposed to a date-time)\n     * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n     */\n    fromData: function fromData(aData, aZone) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (Object.prototype.hasOwnProperty.call(aData, key)) {\n            // ical type cannot be set\n            if (key === 'icaltype') continue;\n            this[key] = aData[key];\n          }\n        }\n      }\n\n      if (aZone) {\n        this.zone = aZone;\n      }\n\n      if (aData && !(\"isDate\" in aData)) {\n        this.isDate = !(\"hour\" in aData);\n      } else if (aData && (\"isDate\" in aData)) {\n        this.isDate = aData.isDate;\n      }\n\n      if (aData && \"timezone\" in aData) {\n        var zone = ICAL.TimezoneService.get(\n          aData.timezone\n        );\n\n        this.zone = zone || ICAL.Timezone.localTimezone;\n      }\n\n      if (aData && \"zone\" in aData) {\n        this.zone = aData.zone;\n      }\n\n      if (!this.zone) {\n        this.zone = ICAL.Timezone.localTimezone;\n      }\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Calculate the day of week.\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time.weekDay}\n     */\n    dayOfWeek: function icaltime_dayOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var dowCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + firstDow;\n      if (dowCacheKey in ICAL.Time._dowCache) {\n        return ICAL.Time._dowCache[dowCacheKey];\n      }\n\n      // Using Zeller's algorithm\n      var q = this.day;\n      var m = this.month + (this.month < 3 ? 12 : 0);\n      var Y = this.year - (this.month < 3 ? 1 : 0);\n\n      var h = (q + Y + ICAL.helpers.trunc(((m + 1) * 26) / 10) + ICAL.helpers.trunc(Y / 4));\n      /* istanbul ignore else */\n      if (true /* gregorian */) {\n        h += ICAL.helpers.trunc(Y / 100) * 6 + ICAL.helpers.trunc(Y / 400);\n      } else {\n        h += 5;\n      }\n\n      // Normalize to 1 = wkst\n      h = ((h + 7 - firstDow) % 7) + 1;\n      ICAL.Time._dowCache[dowCacheKey] = h;\n      return h;\n    },\n\n    /**\n     * Calculate the day of year.\n     * @return {Number}\n     */\n    dayOfYear: function dayOfYear() {\n      var is_leap = (ICAL.Time.isLeapYear(this.year) ? 1 : 0);\n      var diypm = ICAL.Time.daysInYearPassedMonth;\n      return diypm[is_leap][this.month - 1] + this.day;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * week. The resulting ICAL.Time instance is of icaltype date, even if this\n     * is a date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The start of the week (cloned)\n     */\n    startOfWeek: function startOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day -= ((this.dayOfWeek() + 7 - firstDow) % 7);\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the week.\n     * The resulting ICAL.Time instance is of icaltype date, even if this is a\n     * date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The end of the week (cloned)\n     */\n    endOfWeek: function endOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day += (7 - this.dayOfWeek() + firstDow - ICAL.Time.SUNDAY) % 7;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * month. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the month (cloned)\n     */\n    startOfMonth: function startOfMonth() {\n      var result = this.clone();\n      result.day = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * month.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the month (cloned)\n     */\n    endOfMonth: function endOfMonth() {\n      var result = this.clone();\n      result.day = ICAL.Time.daysInMonth(result.month, result.year);\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * year. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the year (cloned)\n     */\n    startOfYear: function startOfYear() {\n      var result = this.clone();\n      result.day = 1;\n      result.month = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * year.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the year (cloned)\n     */\n    endOfYear: function endOfYear() {\n      var result = this.clone();\n      result.day = 31;\n      result.month = 12;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * First calculates the start of the week, then returns the day of year for\n     * this date. If the day falls into the previous year, the day is zero or negative.\n     *\n     * @param {ICAL.Time.weekDay=} aFirstDayOfWeek\n     *        The week start weekday, defaults to SUNDAY\n     * @return {Number}     The calculated day of year\n     */\n    startDoyWeek: function startDoyWeek(aFirstDayOfWeek) {\n      var firstDow = aFirstDayOfWeek || ICAL.Time.SUNDAY;\n      var delta = this.dayOfWeek() - firstDow;\n      if (delta < 0) delta += 7;\n      return this.dayOfYear() - delta;\n    },\n\n    /**\n     * Get the dominical letter for the current year. Letters range from A - G\n     * for common years, and AG to GF for leap years.\n     *\n     * @param {Number} yr           The year to retrieve the letter for\n     * @return {String}             The dominical letter.\n     */\n    getDominicalLetter: function() {\n      return ICAL.Time.getDominicalLetter(this.year);\n    },\n\n    /**\n     * Finds the nthWeekDay relative to the current month (not day).  The\n     * returned value is a day relative the month that this month belongs to so\n     * 1 would indicate the first of the month and 40 would indicate a day in\n     * the following month.\n     *\n     * @param {Number} aDayOfWeek   Day of the week see the day name constants\n     * @param {Number} aPos         Nth occurrence of a given week day values\n     *        of 1 and 0 both indicate the first weekday of that type. aPos may\n     *        be either positive or negative\n     *\n     * @return {Number} numeric value indicating a day relative\n     *                   to the current month of this time object\n     */\n    nthWeekDay: function icaltime_nthWeekDay(aDayOfWeek, aPos) {\n      var daysInMonth = ICAL.Time.daysInMonth(this.month, this.year);\n      var weekday;\n      var pos = aPos;\n\n      var start = 0;\n\n      var otherDay = this.clone();\n\n      if (pos >= 0) {\n        otherDay.day = 1;\n\n        // because 0 means no position has been given\n        // 1 and 0 indicate the same day.\n        if (pos != 0) {\n          // remove the extra numeric value\n          pos--;\n        }\n\n        // set current start offset to current day.\n        start = otherDay.day;\n\n        // find the current day of week\n        var startDow = otherDay.dayOfWeek();\n\n        // calculate the difference between current\n        // day of the week and desired day of the week\n        var offset = aDayOfWeek - startDow;\n\n\n        // if the offset goes into the past\n        // week we add 7 so its goes into the next\n        // week. We only want to go forward in time here.\n        if (offset < 0)\n          // this is really important otherwise we would\n          // end up with dates from in the past.\n          offset += 7;\n\n        // add offset to start so start is the same\n        // day of the week as the desired day of week.\n        start += offset;\n\n        // because we are going to add (and multiply)\n        // the numeric value of the day we subtract it\n        // from the start position so not to add it twice.\n        start -= aDayOfWeek;\n\n        // set week day\n        weekday = aDayOfWeek;\n      } else {\n\n        // then we set it to the last day in the current month\n        otherDay.day = daysInMonth;\n\n        // find the ends weekday\n        var endDow = otherDay.dayOfWeek();\n\n        pos++;\n\n        weekday = (endDow - aDayOfWeek);\n\n        if (weekday < 0) {\n          weekday += 7;\n        }\n\n        weekday = daysInMonth - weekday;\n      }\n\n      weekday += pos * 7;\n\n      return start + weekday;\n    },\n\n    /**\n     * Checks if current time is the nth weekday, relative to the current\n     * month.  Will always return false when rule resolves outside of current\n     * month.\n     *\n     * @param {ICAL.Time.weekDay} aDayOfWeek       Day of week to check\n     * @param {Number} aPos                        Relative position\n     * @return {Boolean}                           True, if its the nth weekday\n     */\n    isNthWeekDay: function(aDayOfWeek, aPos) {\n      var dow = this.dayOfWeek();\n\n      if (aPos === 0 && dow === aDayOfWeek) {\n        return true;\n      }\n\n      // get pos\n      var day = this.nthWeekDay(aDayOfWeek, aPos);\n\n      if (day === this.day) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Calculates the ISO 8601 week number. The first week of a year is the\n     * week that contains the first Thursday. The year can have 53 weeks, if\n     * January 1st is a Friday.\n     *\n     * Note there are regions where the first week of the year is the one that\n     * starts on January 1st, which may offset the week number. Also, if a\n     * different week start is specified, this will also affect the week\n     * number.\n     *\n     * @see ICAL.Time.weekOneStarts\n     * @param {ICAL.Time.weekDay} aWeekStart        The weekday the week starts with\n     * @return {Number}                             The ISO week number\n     */\n    weekNumber: function weekNumber(aWeekStart) {\n      var wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;\n      if (wnCacheKey in ICAL.Time._wnCache) {\n        return ICAL.Time._wnCache[wnCacheKey];\n      }\n      // This function courtesty of Julian Bucknall, published under the MIT license\n      // http://www.boyet.com/articles/publishedarticles/calculatingtheisoweeknumb.html\n      // plus some fixes to be able to use different week starts.\n      var week1;\n\n      var dt = this.clone();\n      dt.isDate = true;\n      var isoyear = this.year;\n\n      if (dt.month == 12 && dt.day > 25) {\n        week1 = ICAL.Time.weekOneStarts(isoyear + 1, aWeekStart);\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n        } else {\n          isoyear++;\n        }\n      } else {\n        week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(--isoyear, aWeekStart);\n        }\n      }\n\n      var daysBetween = (dt.subtractDate(week1).toSeconds() / 86400);\n      var answer = ICAL.helpers.trunc(daysBetween / 7) + 1;\n      ICAL.Time._wnCache[wnCacheKey] = answer;\n      return answer;\n    },\n\n    /**\n     * Adds the duration to the current time. The instance is modified in\n     * place.\n     *\n     * @param {ICAL.Duration} aDuration         The duration to add\n     */\n    addDuration: function icaltime_add(aDuration) {\n      var mult = (aDuration.isNegative ? -1 : 1);\n\n      // because of the duration optimizations it is much\n      // more efficient to grab all the values up front\n      // then set them directly (which will avoid a normalization call).\n      // So we don't actually normalize until we need it.\n      var second = this.second;\n      var minute = this.minute;\n      var hour = this.hour;\n      var day = this.day;\n\n      second += mult * aDuration.seconds;\n      minute += mult * aDuration.minutes;\n      hour += mult * aDuration.hours;\n      day += mult * aDuration.days;\n      day += mult * 7 * aDuration.weeks;\n\n      this.second = second;\n      this.minute = minute;\n      this.hour = hour;\n      this.day = day;\n\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Subtract the date details (_excluding_ timezone).  Useful for finding\n     * the relative difference between two time objects excluding their\n     * timezone differences.\n     *\n     * @param {ICAL.Time} aDate     The date to substract\n     * @return {ICAL.Duration}      The difference as a duration\n     */\n    subtractDate: function icaltime_subtract(aDate) {\n      var unixTime = this.toUnixTime() + this.utcOffset();\n      var other = aDate.toUnixTime() + aDate.utcOffset();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Subtract the date details, taking timezones into account.\n     *\n     * @param {ICAL.Time} aDate  The date to subtract\n     * @return {ICAL.Duration}  The difference in duration\n     */\n    subtractDateTz: function icaltime_subtract_abs(aDate) {\n      var unixTime = this.toUnixTime();\n      var other = aDate.toUnixTime();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Compares the ICAL.Time instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toUnixTime();\n      var b = other.toUnixTime();\n\n      if (a > b) return 1;\n      if (b > a) return -1;\n      return 0;\n    },\n\n    /**\n     * Compares only the date part of this instance with another one.\n     *\n     * @param {ICAL.Duration} other         The instance to compare with\n     * @param {ICAL.Timezone} tz            The timezone to compare in\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compareDateOnlyTz: function icaltime_compareDateOnlyTz(other, tz) {\n      function cmp(attr) {\n        return ICAL.Time._cmp_attr(a, b, attr);\n      }\n      var a = this.convertToZone(tz);\n      var b = other.convertToZone(tz);\n      var rc = 0;\n\n      if ((rc = cmp(\"year\")) != 0) return rc;\n      if ((rc = cmp(\"month\")) != 0) return rc;\n      if ((rc = cmp(\"day\")) != 0) return rc;\n\n      return rc;\n    },\n\n    /**\n     * Convert the instance into another timzone. The returned ICAL.Time\n     * instance is always a copy.\n     *\n     * @param {ICAL.Timezone} zone      The zone to convert to\n     * @return {ICAL.Time}              The copy, converted to the zone\n     */\n    convertToZone: function convertToZone(zone) {\n      var copy = this.clone();\n      var zone_equals = (this.zone.tzid == zone.tzid);\n\n      if (!this.isDate && !zone_equals) {\n        ICAL.Timezone.convert_time(copy, this.zone, zone);\n      }\n\n      copy.zone = zone;\n      return copy;\n    },\n\n    /**\n     * Calculates the UTC offset of the current date/time in the timezone it is\n     * in.\n     *\n     * @return {Number}     UTC offset in seconds\n     */\n    utcOffset: function utc_offset() {\n      if (this.zone == ICAL.Timezone.localTimezone ||\n          this.zone == ICAL.Timezone.utcTimezone) {\n        return 0;\n      } else {\n        return this.zone.utcOffset(this);\n      }\n    },\n\n    /**\n     * Returns an RFC 5545 compliant ical representation of this object.\n     *\n     * @return {String} ical date/date-time\n     */\n    toICALString: function() {\n      var string = this.toString();\n\n      if (string.length > 10) {\n        return ICAL.design.icalendar.value['date-time'].toICAL(string);\n      } else {\n        return ICAL.design.icalendar.value.date.toICAL(string);\n      }\n    },\n\n    /**\n     * The string representation of this date/time, in jCal form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var result = this.year + '-' +\n                   ICAL.helpers.pad2(this.month) + '-' +\n                   ICAL.helpers.pad2(this.day);\n\n      if (!this.isDate) {\n          result += 'T' + ICAL.helpers.pad2(this.hour) + ':' +\n                    ICAL.helpers.pad2(this.minute) + ':' +\n                    ICAL.helpers.pad2(this.second);\n\n        if (this.zone === ICAL.Timezone.utcTimezone) {\n          result += 'Z';\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Converts the current instance to a Javascript date\n     * @return {Date}\n     */\n    toJSDate: function toJSDate() {\n      if (this.zone == ICAL.Timezone.localTimezone) {\n        if (this.isDate) {\n          return new Date(this.year, this.month - 1, this.day);\n        } else {\n          return new Date(this.year, this.month - 1, this.day,\n                          this.hour, this.minute, this.second, 0);\n        }\n      } else {\n        return new Date(this.toUnixTime() * 1000);\n      }\n    },\n\n    _normalize: function icaltime_normalize() {\n      var isDate = this._time.isDate;\n      if (this._time.isDate) {\n        this._time.hour = 0;\n        this._time.minute = 0;\n        this._time.second = 0;\n      }\n      this.adjust(0, 0, 0, 0);\n\n      return this;\n    },\n\n    /**\n     * Adjust the date/time by the given offset\n     *\n     * @param {Number} aExtraDays       The extra amount of days\n     * @param {Number} aExtraHours      The extra amount of hours\n     * @param {Number} aExtraMinutes    The extra amount of minutes\n     * @param {Number} aExtraSeconds    The extra amount of seconds\n     * @param {Number=} aTime           The time to adjust, defaults to the\n     *                                    current instance.\n     */\n    adjust: function icaltime_adjust(aExtraDays, aExtraHours,\n                                     aExtraMinutes, aExtraSeconds, aTime) {\n\n      var minutesOverflow, hoursOverflow,\n          daysOverflow = 0, yearsOverflow = 0;\n\n      var second, minute, hour, day;\n      var daysInMonth;\n\n      var time = aTime || this._time;\n\n      if (!time.isDate) {\n        second = time.second + aExtraSeconds;\n        time.second = second % 60;\n        minutesOverflow = ICAL.helpers.trunc(second / 60);\n        if (time.second < 0) {\n          time.second += 60;\n          minutesOverflow--;\n        }\n\n        minute = time.minute + aExtraMinutes + minutesOverflow;\n        time.minute = minute % 60;\n        hoursOverflow = ICAL.helpers.trunc(minute / 60);\n        if (time.minute < 0) {\n          time.minute += 60;\n          hoursOverflow--;\n        }\n\n        hour = time.hour + aExtraHours + hoursOverflow;\n\n        time.hour = hour % 24;\n        daysOverflow = ICAL.helpers.trunc(hour / 24);\n        if (time.hour < 0) {\n          time.hour += 24;\n          daysOverflow--;\n        }\n      }\n\n\n      // Adjust month and year first, because we need to know what month the day\n      // is in before adjusting it.\n      if (time.month > 12) {\n        yearsOverflow = ICAL.helpers.trunc((time.month - 1) / 12);\n      } else if (time.month < 1) {\n        yearsOverflow = ICAL.helpers.trunc(time.month / 12) - 1;\n      }\n\n      time.year += yearsOverflow;\n      time.month -= 12 * yearsOverflow;\n\n      // Now take care of the days (and adjust month if needed)\n      day = time.day + aExtraDays + daysOverflow;\n\n      if (day > 0) {\n        for (;;) {\n          daysInMonth = ICAL.Time.daysInMonth(time.month, time.year);\n          if (day <= daysInMonth) {\n            break;\n          }\n\n          time.month++;\n          if (time.month > 12) {\n            time.year++;\n            time.month = 1;\n          }\n\n          day -= daysInMonth;\n        }\n      } else {\n        while (day <= 0) {\n          if (time.month == 1) {\n            time.year--;\n            time.month = 12;\n          } else {\n            time.month--;\n          }\n\n          day += ICAL.Time.daysInMonth(time.month, time.year);\n        }\n      }\n\n      time.day = day;\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance from unix time, the number of seconds since\n     * January 1st, 1970.\n     *\n     * @param {Number} seconds      The seconds to set up with\n     */\n    fromUnixTime: function fromUnixTime(seconds) {\n      this.zone = ICAL.Timezone.utcTimezone;\n      var epoch = ICAL.Time.epochTime.clone();\n      epoch.adjust(0, 0, 0, seconds);\n\n      this.year = epoch.year;\n      this.month = epoch.month;\n      this.day = epoch.day;\n      this.hour = epoch.hour;\n      this.minute = epoch.minute;\n      this.second = Math.floor(epoch.second);\n\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Converts the current instance to seconds since January 1st 1970.\n     *\n     * @return {Number}         Seconds since 1970\n     */\n    toUnixTime: function toUnixTime() {\n      if (this._cachedUnixTime !== null) {\n        return this._cachedUnixTime;\n      }\n      var offset = this.utcOffset();\n\n      // we use the offset trick to ensure\n      // that we are getting the actual UTC time\n      var ms = Date.UTC(\n        this.year,\n        this.month - 1,\n        this.day,\n        this.hour,\n        this.minute,\n        this.second - offset\n      );\n\n      // seconds\n      this._cachedUnixTime = ms / 1000;\n      return this._cachedUnixTime;\n    },\n\n    /**\n     * Converts time to into Object which can be serialized then re-created\n     * using the constructor.\n     *\n     * @example\n     * // toJSON will automatically be called\n     * var json = JSON.stringify(mytime);\n     *\n     * var deserialized = JSON.parse(json);\n     *\n     * var time = new ICAL.Time(deserialized);\n     *\n     * @return {Object}\n     */\n    toJSON: function() {\n      var copy = [\n        'year',\n        'month',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'isDate'\n      ];\n\n      var result = Object.create(null);\n\n      var i = 0;\n      var len = copy.length;\n      var prop;\n\n      for (; i < len; i++) {\n        prop = copy[i];\n        result[prop] = this[prop];\n      }\n\n      if (this.zone) {\n        result.timezone = this.zone.tzid;\n      }\n\n      return result;\n    }\n\n  };\n\n  (function setupNormalizeAttributes() {\n    // This needs to run before any instances are created!\n    function defineAttr(attr) {\n      Object.defineProperty(ICAL.Time.prototype, attr, {\n        get: function getTimeAttr() {\n          if (this._pendingNormalization) {\n            this._normalize();\n            this._pendingNormalization = false;\n          }\n\n          return this._time[attr];\n        },\n        set: function setTimeAttr(val) {\n          // Check if isDate will be set and if was not set to normalize date.\n          // This avoids losing days when seconds, minutes and hours are zeroed\n          // what normalize will do when time is a date.\n          if (attr === \"isDate\" && val && !this._time.isDate) {\n            this.adjust(0, 0, 0, 0);\n          }\n          this._cachedUnixTime = null;\n          this._pendingNormalization = true;\n          this._time[attr] = val;\n\n          return val;\n        }\n      });\n\n    }\n\n    /* istanbul ignore else */\n    if (\"defineProperty\" in Object) {\n      defineAttr(\"year\");\n      defineAttr(\"month\");\n      defineAttr(\"day\");\n      defineAttr(\"hour\");\n      defineAttr(\"minute\");\n      defineAttr(\"second\");\n      defineAttr(\"isDate\");\n    }\n  })();\n\n  /**\n   * Returns the days in the given month\n   *\n   * @param {Number} month      The month to check\n   * @param {Number} year       The year to check\n   * @return {Number}           The number of days in the month\n   */\n  ICAL.Time.daysInMonth = function icaltime_daysInMonth(month, year) {\n    var _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var days = 30;\n\n    if (month < 1 || month > 12) return days;\n\n    days = _daysInMonth[month];\n\n    if (month == 2) {\n      days += ICAL.Time.isLeapYear(year);\n    }\n\n    return days;\n  };\n\n  /**\n   * Checks if the year is a leap year\n   *\n   * @param {Number} year       The year to check\n   * @return {Boolean}          True, if the year is a leap year\n   */\n  ICAL.Time.isLeapYear = function isLeapYear(year) {\n    if (year <= 1752) {\n      return ((year % 4) == 0);\n    } else {\n      return (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0));\n    }\n  };\n\n  /**\n   * Create a new ICAL.Time from the day of year and year. The date is returned\n   * in floating timezone.\n   *\n   * @param {Number} aDayOfYear     The day of year\n   * @param {Number} aYear          The year to create the instance in\n   * @return {ICAL.Time}            The created instance with the calculated date\n   */\n  ICAL.Time.fromDayOfYear = function icaltime_fromDayOfYear(aDayOfYear, aYear) {\n    var year = aYear;\n    var doy = aDayOfYear;\n    var tt = new ICAL.Time();\n    tt.auto_normalize = false;\n    var is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n\n    if (doy < 1) {\n      year--;\n      is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n      doy += ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      return ICAL.Time.fromDayOfYear(doy, year);\n    } else if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][12]) {\n      is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n      doy -= ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      year++;\n      return ICAL.Time.fromDayOfYear(doy, year);\n    }\n\n    tt.year = year;\n    tt.isDate = true;\n\n    for (var month = 11; month >= 0; month--) {\n      if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][month]) {\n        tt.month = month + 1;\n        tt.day = doy - ICAL.Time.daysInYearPassedMonth[is_leap][month];\n        break;\n      }\n    }\n\n    tt.auto_normalize = true;\n    return tt;\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @deprecated                Use {@link ICAL.Time.fromDateString} instead\n   * @param {String} str        The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n  ICAL.Time.fromStringv2 = function fromString(str) {\n    return new ICAL.Time({\n      year: parseInt(str.substr(0, 4), 10),\n      month: parseInt(str.substr(5, 2), 10),\n      day: parseInt(str.substr(8, 2), 10),\n      isDate: true\n    });\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @param {String} aValue     The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n  ICAL.Time.fromDateString = function(aValue) {\n    // Dates should have no timezone.\n    // Google likes to sometimes specify Z on dates\n    // we specifically ignore that to avoid issues.\n\n    // YYYY-MM-DD\n    // 2012-10-10\n    return new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      isDate: true\n    });\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date-time string, e.g\n   * 2015-01-02T03:04:05. If a property is specified, the timezone is set up\n   * from the property's TZID parameter.\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n  ICAL.Time.fromDateTimeString = function(aValue, prop) {\n    if (aValue.length < 19) {\n      throw new Error(\n        'invalid date-time value: \"' + aValue + '\"'\n      );\n    }\n\n    var zone;\n\n    if (aValue[19] && aValue[19] === 'Z') {\n      zone = 'Z';\n    } else if (prop) {\n      zone = prop.getParameter('tzid');\n    }\n\n    // 2012-10-10T10:10:10(Z)?\n    var time = new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      hour: ICAL.helpers.strictParseInt(aValue.substr(11, 2)),\n      minute: ICAL.helpers.strictParseInt(aValue.substr(14, 2)),\n      second: ICAL.helpers.strictParseInt(aValue.substr(17, 2)),\n      timezone: zone\n    });\n\n    return time;\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date or date-time string,\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n  ICAL.Time.fromString = function fromString(aValue, aProperty) {\n    if (aValue.length > 10) {\n      return ICAL.Time.fromDateTimeString(aValue, aProperty);\n    } else {\n      return ICAL.Time.fromDateString(aValue);\n    }\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the given Javascript Date.\n   *\n   * @param {?Date} aDate     The Javascript Date to read, or null to reset\n   * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n   */\n  ICAL.Time.fromJSDate = function fromJSDate(aDate, useUTC) {\n    var tt = new ICAL.Time();\n    return tt.fromJSDate(aDate, useUTC);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the the passed data object.\n   *\n   * @param {Object} aData            Time initialization\n   * @param {Number=} aData.year      The year for this date\n   * @param {Number=} aData.month     The month for this date\n   * @param {Number=} aData.day       The day for this date\n   * @param {Number=} aData.hour      The hour for this date\n   * @param {Number=} aData.minute    The minute for this date\n   * @param {Number=} aData.second    The second for this date\n   * @param {Boolean=} aData.isDate   If true, the instance represents a date\n   *                                    (as opposed to a date-time)\n   * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n   */\n  ICAL.Time.fromData = function fromData(aData, aZone) {\n    var t = new ICAL.Time();\n    return t.fromData(aData, aZone);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the current moment.\n   * @return {ICAL.Time}\n   */\n  ICAL.Time.now = function icaltime_now() {\n    return ICAL.Time.fromJSDate(new Date(), false);\n  };\n\n  /**\n   * Returns the date on which ISO week number 1 starts.\n   *\n   * @see ICAL.Time#weekNumber\n   * @param {Number} aYear                  The year to search in\n   * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday, used for calculation.\n   * @return {ICAL.Time}                    The date on which week number 1 starts\n   */\n  ICAL.Time.weekOneStarts = function weekOneStarts(aYear, aWeekStart) {\n    var t = ICAL.Time.fromData({\n      year: aYear,\n      month: 1,\n      day: 1,\n      isDate: true\n    });\n\n    var dow = t.dayOfWeek();\n    var wkst = aWeekStart || ICAL.Time.DEFAULT_WEEK_START;\n    if (dow > ICAL.Time.THURSDAY) {\n      t.day += 7;\n    }\n    if (wkst > ICAL.Time.THURSDAY) {\n      t.day -= 7;\n    }\n\n    t.day -= dow - wkst;\n\n    return t;\n  };\n\n  /**\n   * Get the dominical letter for the given year. Letters range from A - G for\n   * common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n  ICAL.Time.getDominicalLetter = function(yr) {\n    var LTRS = \"GFEDCBA\";\n    var dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;\n    var isLeap = ICAL.Time.isLeapYear(yr);\n    if (isLeap) {\n      return LTRS[(dom + 6) % 7] + LTRS[dom];\n    } else {\n      return LTRS[dom];\n    }\n  };\n\n  /**\n   * January 1st, 1970 as an ICAL.Time.\n   * @type {ICAL.Time}\n   * @constant\n   * @instance\n   */\n  ICAL.Time.epochTime = ICAL.Time.fromData({\n    year: 1970,\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    isDate: false,\n    timezone: \"Z\"\n  });\n\n  ICAL.Time._cmp_attr = function _cmp_attr(a, b, attr) {\n    if (a[attr] > b[attr]) return 1;\n    if (a[attr] < b[attr]) return -1;\n    return 0;\n  };\n\n  /**\n   * The days that have passed in the year after a given month. The array has\n   * two members, one being an array of passed days for non-leap years, the\n   * other analog for leap years.\n   * @example\n   * var isLeapYear = ICAL.Time.isLeapYear(year);\n   * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];\n   * @type {Array.<Array.<Number>>}\n   */\n  ICAL.Time.daysInYearPassedMonth = [\n    [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365],\n    [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]\n  ];\n\n  /**\n   * The weekday, 1 = SUNDAY, 7 = SATURDAY. Access via\n   * ICAL.Time.MONDAY, ICAL.Time.TUESDAY, ...\n   *\n   * @typedef {Number} weekDay\n   * @memberof ICAL.Time\n   */\n\n  ICAL.Time.SUNDAY = 1;\n  ICAL.Time.MONDAY = 2;\n  ICAL.Time.TUESDAY = 3;\n  ICAL.Time.WEDNESDAY = 4;\n  ICAL.Time.THURSDAY = 5;\n  ICAL.Time.FRIDAY = 6;\n  ICAL.Time.SATURDAY = 7;\n\n  /**\n   * The default weekday for the WKST part.\n   * @constant\n   * @default ICAL.Time.MONDAY\n   */\n  ICAL.Time.DEFAULT_WEEK_START = ICAL.Time.MONDAY;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2015 */\n\n\n\n(function() {\n\n  /**\n   * Describes a vCard time, which has slight differences to the ICAL.Time.\n   * Properties can be null if not specified, for example for dates with\n   * reduced accuracy or truncation.\n   *\n   * Note that currently not all methods are correctly re-implemented for\n   * VCardTime. For example, comparison will have undefined results when some\n   * members are null.\n   *\n   * Also, normalization is not yet implemented for this class!\n   *\n   * @alias ICAL.VCardTime\n   * @class\n   * @extends {ICAL.Time}\n   * @param {Object} data                           The data for the time instance\n   * @param {Number=} data.year                     The year for this date\n   * @param {Number=} data.month                    The month for this date\n   * @param {Number=} data.day                      The day for this date\n   * @param {Number=} data.hour                     The hour for this date\n   * @param {Number=} data.minute                   The minute for this date\n   * @param {Number=} data.second                   The second for this date\n   * @param {ICAL.Timezone|ICAL.UtcOffset} zone     The timezone to use\n   * @param {String} icaltype                       The type for this date/time object\n   */\n  ICAL.VCardTime = function(data, zone, icaltype) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n\n    time.year = null;\n    time.month = null;\n    time.day = null;\n    time.hour = null;\n    time.minute = null;\n    time.second = null;\n\n    this.icaltype = icaltype || \"date-and-or-time\";\n\n    this.fromData(data, zone);\n  };\n  ICAL.helpers.inherits(ICAL.Time, ICAL.VCardTime, /** @lends ICAL.VCardTime */ {\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"vcardtime\"\n     */\n    icalclass: \"vcardtime\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @type {String}\n     * @default \"date-and-or-time\"\n     */\n    icaltype: \"date-and-or-time\",\n\n    /**\n     * The timezone. This can either be floating, UTC, or an instance of\n     * ICAL.UtcOffset.\n     * @type {ICAL.Timezone|ICAL.UtcOFfset}\n     */\n    zone: null,\n\n    /**\n     * Returns a clone of the vcard date/time object.\n     *\n     * @return {ICAL.VCardTime}     The cloned object\n     */\n    clone: function() {\n      return new ICAL.VCardTime(this._time, this.zone, this.icaltype);\n    },\n\n    _normalize: function() {\n      return this;\n    },\n\n    /**\n     * @inheritdoc\n     */\n    utcOffset: function() {\n      if (this.zone instanceof ICAL.UtcOffset) {\n        return this.zone.toSeconds();\n      } else {\n        return ICAL.Time.prototype.utcOffset.apply(this, arguments);\n      }\n    },\n\n    /**\n     * Returns an RFC 6350 compliant representation of this object.\n     *\n     * @return {String}         vcard date/time string\n     */\n    toICALString: function() {\n      return ICAL.design.vcard.value[this.icaltype].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this date/time, in jCard form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var p2 = ICAL.helpers.pad2;\n      var y = this.year, m = this.month, d = this.day;\n      var h = this.hour, mm = this.minute, s = this.second;\n\n      var hasYear = y !== null, hasMonth = m !== null, hasDay = d !== null;\n      var hasHour = h !== null, hasMinute = mm !== null, hasSecond = s !== null;\n\n      var datepart = (hasYear ? p2(y) + (hasMonth || hasDay ? '-' : '') : (hasMonth || hasDay ? '--' : '')) +\n                     (hasMonth ? p2(m) : '') +\n                     (hasDay ? '-' + p2(d) : '');\n      var timepart = (hasHour ? p2(h) : '-') + (hasHour && hasMinute ? ':' : '') +\n                     (hasMinute ? p2(mm) : '') + (!hasHour && !hasMinute ? '-' : '') +\n                     (hasMinute && hasSecond ? ':' : '') +\n                     (hasSecond ? p2(s) : '');\n\n      var zone;\n      if (this.zone === ICAL.Timezone.utcTimezone) {\n        zone = 'Z';\n      } else if (this.zone instanceof ICAL.UtcOffset) {\n        zone = this.zone.toString();\n      } else if (this.zone === ICAL.Timezone.localTimezone) {\n        zone = '';\n      } else if (this.zone instanceof ICAL.Timezone) {\n        var offset = ICAL.UtcOffset.fromSeconds(this.zone.utcOffset(this));\n        zone = offset.toString();\n      } else {\n        zone = '';\n      }\n\n      switch (this.icaltype) {\n        case \"time\":\n          return timepart + zone;\n        case \"date-and-or-time\":\n        case \"date-time\":\n          return datepart + (timepart == '--' ? '' : 'T' + timepart + zone);\n        case \"date\":\n          return datepart;\n      }\n      return null;\n    }\n  });\n\n  /**\n   * Returns a new ICAL.VCardTime instance from a date and/or time string.\n   *\n   * @param {String} aValue     The string to create from\n   * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time\n   * @return {ICAL.VCardTime}   The date/time instance\n   */\n  ICAL.VCardTime.fromDateAndOrTimeString = function(aValue, aIcalType) {\n    function part(v, s, e) {\n      return v ? ICAL.helpers.strictParseInt(v.substr(s, e)) : null;\n    }\n    var parts = aValue.split('T');\n    var dt = parts[0], tmz = parts[1];\n    var splitzone = tmz ? ICAL.design.vcard.value.time._splitZone(tmz) : [];\n    var zone = splitzone[0], tm = splitzone[1];\n\n    var stoi = ICAL.helpers.strictParseInt;\n    var dtlen = dt ? dt.length : 0;\n    var tmlen = tm ? tm.length : 0;\n\n    var hasDashDate = dt && dt[0] == '-' && dt[1] == '-';\n    var hasDashTime = tm && tm[0] == '-';\n\n    var o = {\n      year: hasDashDate ? null : part(dt, 0, 4),\n      month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,\n      day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,\n\n      hour: hasDashTime ? null : part(tm, 0, 2),\n      minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,\n      second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null\n    };\n\n    if (zone == 'Z') {\n      zone = ICAL.Timezone.utcTimezone;\n    } else if (zone && zone[3] == ':') {\n      zone = ICAL.UtcOffset.fromString(zone);\n    } else {\n      zone = null;\n    }\n\n    return new ICAL.VCardTime(o, zone, aIcalType);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  var DOW_MAP = {\n    SU: ICAL.Time.SUNDAY,\n    MO: ICAL.Time.MONDAY,\n    TU: ICAL.Time.TUESDAY,\n    WE: ICAL.Time.WEDNESDAY,\n    TH: ICAL.Time.THURSDAY,\n    FR: ICAL.Time.FRIDAY,\n    SA: ICAL.Time.SATURDAY\n  };\n\n  var REVERSE_DOW_MAP = {};\n  for (var key in DOW_MAP) {\n    /* istanbul ignore else */\n    if (DOW_MAP.hasOwnProperty(key)) {\n      REVERSE_DOW_MAP[DOW_MAP[key]] = key;\n    }\n  }\n\n  var COPY_PARTS = [\"BYSECOND\", \"BYMINUTE\", \"BYHOUR\", \"BYDAY\",\n                    \"BYMONTHDAY\", \"BYYEARDAY\", \"BYWEEKNO\",\n                    \"BYMONTH\", \"BYSETPOS\"];\n\n  /**\n   * @classdesc\n   * This class represents the \"recur\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Recur\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues=} data.freq     The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {ICAL.Time.weekDay=} data.wkst              The week start value\n   * @param {ICAL.Time=} data.until                     The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n  ICAL.Recur = function icalrecur(data) {\n    this.wrappedJSObject = this;\n    this.parts = {};\n\n    if (data && typeof(data) === 'object') {\n      this.fromData(data);\n    }\n  };\n\n  ICAL.Recur.prototype = {\n    /**\n     * An object holding the BY-parts of the recurrence rule\n     * @type {Object}\n     */\n    parts: null,\n\n    /**\n     * The interval value for the recurrence rule.\n     * @type {Number}\n     */\n    interval: 1,\n\n    /**\n     * The week start day\n     *\n     * @type {ICAL.Time.weekDay}\n     * @default ICAL.Time.MONDAY\n     */\n    wkst: ICAL.Time.MONDAY,\n\n    /**\n     * The end of the recurrence\n     * @type {?ICAL.Time}\n     */\n    until: null,\n\n    /**\n     * The maximum number of occurrences\n     * @type {?Number}\n     */\n    count: null,\n\n    /**\n     * The frequency value.\n     * @type {ICAL.Recur.frequencyValues}\n     */\n    freq: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalrecur\"\n     */\n    icalclass: \"icalrecur\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"recur\"\n     */\n    icaltype: \"recur\",\n\n    /**\n     * Create a new iterator for this recurrence rule. The passed start date\n     * must be the start date of the event, not the start of the range to\n     * search in.\n     *\n     * @example\n     * var recur = comp.getFirstPropertyValue('rrule');\n     * var dtstart = comp.getFirstPropertyValue('dtstart');\n     * var iter = recur.iterator(dtstart);\n     * for (var next = iter.next(); next; next = iter.next()) {\n     *   if (next.compare(rangeStart) < 0) {\n     *     continue;\n     *   }\n     *   console.log(next.toString());\n     * }\n     *\n     * @param {ICAL.Time} aStart        The item's start date\n     * @return {ICAL.RecurIterator}     The recurrence iterator\n     */\n    iterator: function(aStart) {\n      return new ICAL.RecurIterator({\n        rule: this,\n        dtstart: aStart\n      });\n    },\n\n    /**\n     * Returns a clone of the recurrence object.\n     *\n     * @return {ICAL.Recur}      The cloned object\n     */\n    clone: function clone() {\n      return new ICAL.Recur(this.toJSON());\n    },\n\n    /**\n     * Checks if the current rule is finite, i.e. has a count or until part.\n     *\n     * @return {Boolean}        True, if the rule is finite\n     */\n    isFinite: function isfinite() {\n      return !!(this.count || this.until);\n    },\n\n    /**\n     * Checks if the current rule has a count part, and not limited by an until\n     * part.\n     *\n     * @return {Boolean}        True, if the rule is by count\n     */\n    isByCount: function isbycount() {\n      return !!(this.count && !this.until);\n    },\n\n    /**\n     * Adds a component (part) to the recurrence rule. This is not a component\n     * in the sense of {@link ICAL.Component}, but a part of the recurrence\n     * rule, i.e. BYMONTH.\n     *\n     * @param {String} aType            The name of the component part\n     * @param {Array|String} aValue     The component value\n     */\n    addComponent: function addPart(aType, aValue) {\n      var ucname = aType.toUpperCase();\n      if (ucname in this.parts) {\n        this.parts[ucname].push(aValue);\n      } else {\n        this.parts[ucname] = [aValue];\n      }\n    },\n\n    /**\n     * Sets the component value for the given by-part.\n     *\n     * @param {String} aType        The component part name\n     * @param {Array} aValues       The component values\n     */\n    setComponent: function setComponent(aType, aValues) {\n      this.parts[aType.toUpperCase()] = aValues.slice();\n    },\n\n    /**\n     * Gets (a copy) of the requested component value.\n     *\n     * @param {String} aType        The component part name\n     * @return {Array}              The component part value\n     */\n    getComponent: function getComponent(aType) {\n      var ucname = aType.toUpperCase();\n      return (ucname in this.parts ? this.parts[ucname].slice() : []);\n    },\n\n    /**\n     * Retrieves the next occurrence after the given recurrence id. See the\n     * guide on {@tutorial terminology} for more details.\n     *\n     * NOTE: Currently, this method iterates all occurrences from the start\n     * date. It should not be called in a loop for performance reasons. If you\n     * would like to get more than one occurrence, you can iterate the\n     * occurrences manually, see the example on the\n     * {@link ICAL.Recur#iterator iterator} method.\n     *\n     * @param {ICAL.Time} aStartTime        The start of the event series\n     * @param {ICAL.Time} aRecurrenceId     The date of the last occurrence\n     * @return {ICAL.Time}                  The next occurrence after\n     */\n    getNextOccurrence: function getNextOccurrence(aStartTime, aRecurrenceId) {\n      var iter = this.iterator(aStartTime);\n      var next, cdt;\n\n      do {\n        next = iter.next();\n      } while (next && next.compare(aRecurrenceId) <= 0);\n\n      if (next && aRecurrenceId.zone) {\n        next.zone = aRecurrenceId.zone;\n      }\n\n      return next;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} data                               An object with members of the recurrence\n     * @param {ICAL.Recur.frequencyValues=} data.freq     The frequency value\n     * @param {Number=} data.interval                     The INTERVAL value\n     * @param {ICAL.Time.weekDay=} data.wkst              The week start value\n     * @param {ICAL.Time=} data.until                     The end of the recurrence set\n     * @param {Number=} data.count                        The number of occurrences\n     * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n     * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n     * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n     * @param {Array.<String>=} data.byday                The BYDAY values\n     * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n     * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n     * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n     * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n     * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n     */\n    fromData: function(data) {\n      for (var key in data) {\n        var uckey = key.toUpperCase();\n\n        if (uckey in partDesign) {\n          if (Array.isArray(data[key])) {\n            this.parts[uckey] = data[key];\n          } else {\n            this.parts[uckey] = [data[key]];\n          }\n        } else {\n          this[key] = data[key];\n        }\n      }\n\n      if (this.interval && typeof this.interval != \"number\") {\n        optionDesign.INTERVAL(this.interval, this);\n      }\n\n      if (this.wkst && typeof this.wkst != \"number\") {\n        this.wkst = ICAL.Recur.icalDayToNumericDay(this.wkst);\n      }\n\n      if (this.until && !(this.until instanceof ICAL.Time)) {\n        this.until = ICAL.Time.fromString(this.until);\n      }\n    },\n\n    /**\n     * The jCal representation of this recurrence type.\n     * @return {Object}\n     */\n    toJSON: function() {\n      var res = Object.create(null);\n      res.freq = this.freq;\n\n      if (this.count) {\n        res.count = this.count;\n      }\n\n      if (this.interval > 1) {\n        res.interval = this.interval;\n      }\n\n      for (var k in this.parts) {\n        /* istanbul ignore if */\n        if (!this.parts.hasOwnProperty(k)) {\n          continue;\n        }\n        var kparts = this.parts[k];\n        if (Array.isArray(kparts) && kparts.length == 1) {\n          res[k.toLowerCase()] = kparts[0];\n        } else {\n          res[k.toLowerCase()] = ICAL.helpers.clone(this.parts[k]);\n        }\n      }\n\n      if (this.until) {\n        res.until = this.until.toString();\n      }\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        res.wkst = ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n      return res;\n    },\n\n    /**\n     * The string representation of this recurrence rule.\n     * @return {String}\n     */\n    toString: function icalrecur_toString() {\n      // TODO retain order\n      var str = \"FREQ=\" + this.freq;\n      if (this.count) {\n        str += \";COUNT=\" + this.count;\n      }\n      if (this.interval > 1) {\n        str += \";INTERVAL=\" + this.interval;\n      }\n      for (var k in this.parts) {\n        /* istanbul ignore else */\n        if (this.parts.hasOwnProperty(k)) {\n          str += \";\" + k + \"=\" + this.parts[k];\n        }\n      }\n      if (this.until) {\n        str += ';UNTIL=' + this.until.toICALString();\n      }\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        str += ';WKST=' + ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n      return str;\n    }\n  };\n\n  function parseNumericValue(type, min, max, value) {\n    var result = value;\n\n    if (value[0] === '+') {\n      result = value.substr(1);\n    }\n\n    result = ICAL.helpers.strictParseInt(result);\n\n    if (min !== undefined && value < min) {\n      throw new Error(\n        type + ': invalid value \"' + value + '\" must be > ' + min\n      );\n    }\n\n    if (max !== undefined && value > max) {\n      throw new Error(\n        type + ': invalid value \"' + value + '\" must be < ' + min\n      );\n    }\n\n    return result;\n  }\n\n  /**\n   * Convert an ical representation of a day (SU, MO, etc..)\n   * into a numeric value of that day.\n   *\n   * @param {String} string     The iCalendar day name\n   * @param {ICAL.Time.weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}           Numeric value of given day\n   */\n  ICAL.Recur.icalDayToNumericDay = function toNumericDay(string, aWeekStart) {\n    //XXX: this is here so we can deal\n    //     with possibly invalid string values.\n    var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n    return ((DOW_MAP[string] - firstDow + 7) % 7) + 1;\n  };\n\n  /**\n   * Convert a numeric day value into its ical representation (SU, MO, etc..)\n   *\n   * @param {Number} num        Numeric value of given day\n   * @param {ICAL.Time.weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {String}           The ICAL day value, e.g SU,MO,...\n   */\n  ICAL.Recur.numericDayToIcalDay = function toIcalDay(num, aWeekStart) {\n    //XXX: this is here so we can deal with possibly invalid number values.\n    //     Also, this allows consistent mapping between day numbers and day\n    //     names for external users.\n    var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n    var dow = (num + firstDow - ICAL.Time.SUNDAY);\n    if (dow > 7) {\n      dow -= 7;\n    }\n    return REVERSE_DOW_MAP[dow];\n  };\n\n  var VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;\n  var VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\n\n  /**\n   * Possible frequency values for the FREQ part\n   * (YEARLY, MONTHLY, WEEKLY, DAILY, HOURLY, MINUTELY, SECONDLY)\n   *\n   * @typedef {String} frequencyValues\n   * @memberof ICAL.Recur\n   */\n\n  var ALLOWED_FREQ = ['SECONDLY', 'MINUTELY', 'HOURLY',\n                      'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'];\n\n  var optionDesign = {\n    FREQ: function(value, dict, fmtIcal) {\n      // yes this is actually equal or faster then regex.\n      // upside here is we can enumerate the valid values.\n      if (ALLOWED_FREQ.indexOf(value) !== -1) {\n        dict.freq = value;\n      } else {\n        throw new Error(\n          'invalid frequency \"' + value + '\" expected: \"' +\n          ALLOWED_FREQ.join(', ') + '\"'\n        );\n      }\n    },\n\n    COUNT: function(value, dict, fmtIcal) {\n      dict.count = ICAL.helpers.strictParseInt(value);\n    },\n\n    INTERVAL: function(value, dict, fmtIcal) {\n      dict.interval = ICAL.helpers.strictParseInt(value);\n      if (dict.interval < 1) {\n        // 0 or negative values are not allowed, some engines seem to generate\n        // it though. Assume 1 instead.\n        dict.interval = 1;\n      }\n    },\n\n    UNTIL: function(value, dict, fmtIcal) {\n      if (value.length > 10) {\n        dict.until = ICAL.design.icalendar.value['date-time'].fromICAL(value);\n      } else {\n        dict.until = ICAL.design.icalendar.value.date.fromICAL(value);\n      }\n      if (!fmtIcal) {\n        dict.until = ICAL.Time.fromString(dict.until);\n      }\n    },\n\n    WKST: function(value, dict, fmtIcal) {\n      if (VALID_DAY_NAMES.test(value)) {\n        dict.wkst = ICAL.Recur.icalDayToNumericDay(value);\n      } else {\n        throw new Error('invalid WKST value \"' + value + '\"');\n      }\n    }\n  };\n\n  var partDesign = {\n    BYSECOND: parseNumericValue.bind(this, 'BYSECOND', 0, 60),\n    BYMINUTE: parseNumericValue.bind(this, 'BYMINUTE', 0, 59),\n    BYHOUR: parseNumericValue.bind(this, 'BYHOUR', 0, 23),\n    BYDAY: function(value) {\n      if (VALID_BYDAY_PART.test(value)) {\n        return value;\n      } else {\n        throw new Error('invalid BYDAY value \"' + value + '\"');\n      }\n    },\n    BYMONTHDAY: parseNumericValue.bind(this, 'BYMONTHDAY', -31, 31),\n    BYYEARDAY: parseNumericValue.bind(this, 'BYYEARDAY', -366, 366),\n    BYWEEKNO: parseNumericValue.bind(this, 'BYWEEKNO', -53, 53),\n    BYMONTH: parseNumericValue.bind(this, 'BYMONTH', 0, 12),\n    BYSETPOS: parseNumericValue.bind(this, 'BYSETPOS', -366, 366)\n  };\n\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance from the passed string.\n   *\n   * @param {String} string         The string to parse\n   * @return {ICAL.Recur}           The created recurrence instance\n   */\n  ICAL.Recur.fromString = function(string) {\n    var data = ICAL.Recur._stringToData(string, false);\n    return new ICAL.Recur(data);\n  };\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance using members from the passed\n   * data object.\n   *\n   * @param {Object} aData                              An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues=} aData.freq    The frequency value\n   * @param {Number=} aData.interval                    The INTERVAL value\n   * @param {ICAL.Time.weekDay=} aData.wkst             The week start value\n   * @param {ICAL.Time=} aData.until                    The end of the recurrence set\n   * @param {Number=} aData.count                       The number of occurrences\n   * @param {Array.<Number>=} aData.bysecond            The seconds for the BYSECOND part\n   * @param {Array.<Number>=} aData.byminute            The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} aData.byhour              The hours for the BYHOUR part\n   * @param {Array.<String>=} aData.byday               The BYDAY values\n   * @param {Array.<Number>=} aData.bymonthday          The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} aData.byyearday           The days for the BYYEARDAY part\n   * @param {Array.<Number>=} aData.byweekno            The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} aData.bymonth             The month for the BYMONTH part\n   * @param {Array.<Number>=} aData.bysetpos            The positionals for the BYSETPOS part\n   */\n  ICAL.Recur.fromData = function(aData) {\n    return new ICAL.Recur(aData);\n  };\n\n  /**\n   * Converts a recurrence string to a data object, suitable for the fromData\n   * method.\n   *\n   * @param {String} string     The string to parse\n   * @param {Boolean} fmtIcal   If true, the string is considered to be an\n   *                              iCalendar string\n   * @return {ICAL.Recur}       The recurrence instance\n   */\n  ICAL.Recur._stringToData = function(string, fmtIcal) {\n    var dict = Object.create(null);\n\n    // split is slower in FF but fast enough.\n    // v8 however this is faster then manual split?\n    var values = string.split(';');\n    var len = values.length;\n\n    for (var i = 0; i < len; i++) {\n      var parts = values[i].split('=');\n      var ucname = parts[0].toUpperCase();\n      var lcname = parts[0].toLowerCase();\n      var name = (fmtIcal ? lcname : ucname);\n      var value = parts[1];\n\n      if (ucname in partDesign) {\n        var partArr = value.split(',');\n        var partArrIdx = 0;\n        var partArrLen = partArr.length;\n\n        for (; partArrIdx < partArrLen; partArrIdx++) {\n          partArr[partArrIdx] = partDesign[ucname](partArr[partArrIdx]);\n        }\n        dict[name] = (partArr.length == 1 ? partArr[0] : partArr);\n      } else if (ucname in optionDesign) {\n        optionDesign[ucname](value, dict, fmtIcal);\n      } else {\n        // Don't swallow unknown values. Just set them as they are.\n        dict[lcname] = value;\n      }\n    }\n\n    return dict;\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.RecurIterator = (function() {\n\n  /**\n   * @classdesc\n   * An iterator for a single recurrence rule. This class usually doesn't have\n   * to be instanciated directly, the convenience method\n   * {@link ICAL.Recur#iterator} can be used.\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration from a previous run\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration\n   * from a previous run.\n   *\n   * @class\n   * @alias ICAL.RecurIterator\n   * @param {Object} options                The iterator options\n   * @param {ICAL.Recur} options.rule       The rule to iterate.\n   * @param {ICAL.Time} options.dtstart     The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  function icalrecur_iterator(options) {\n    this.fromData(options);\n  }\n\n  icalrecur_iterator.prototype = {\n\n    /**\n     * True when iteration is finished.\n     * @type {Boolean}\n     */\n    completed: false,\n\n    /**\n     * The rule that is being iterated\n     * @type {ICAL.Recur}\n     */\n    rule: null,\n\n    /**\n     * The start date of the event being iterated.\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * The last occurrence that was returned from the\n     * {@link ICAL.RecurIterator#next} method.\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * The sequence number from the occurrence\n     * @type {Number}\n     */\n    occurrence_number: 0,\n\n    /**\n     * The indices used for the {@link ICAL.RecurIterator#by_data} object.\n     * @type {Object}\n     * @private\n     */\n    by_indices: null,\n\n    /**\n     * If true, the iterator has already been initialized\n     * @type {Boolean}\n     * @private\n     */\n    initialized: false,\n\n    /**\n     * The initializd by-data.\n     * @type {Object}\n     * @private\n     */\n    by_data: null,\n\n    /**\n     * The expanded yeardays\n     * @type {Array}\n     * @private\n     */\n    days: null,\n\n    /**\n     * The index in the {@link ICAL.RecurIterator#days} array.\n     * @type {Number}\n     * @private\n     */\n    days_index: 0,\n\n    /**\n     * Initialize the recurrence iterator from the passed data object. This\n     * method is usually not called directly, you can initialize the iterator\n     * through the constructor.\n     *\n     * @param {Object} options                The iterator options\n     * @param {ICAL.Recur} options.rule       The rule to iterate.\n     * @param {ICAL.Time} options.dtstart     The start date of the event.\n     * @param {Boolean=} options.initialized  When true, assume that options are\n     *        from a previously constructed iterator. Initialization will not be\n     *        repeated.\n     */\n    fromData: function(options) {\n      this.rule = ICAL.helpers.formatClassType(options.rule, ICAL.Recur);\n\n      if (!this.rule) {\n        throw new Error('iterator requires a (ICAL.Recur) rule');\n      }\n\n      this.dtstart = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!this.dtstart) {\n        throw new Error('iterator requires a (ICAL.Time) dtstart');\n      }\n\n      if (options.by_data) {\n        this.by_data = options.by_data;\n      } else {\n        this.by_data = ICAL.helpers.clone(this.rule.parts, true);\n      }\n\n      if (options.occurrence_number)\n        this.occurrence_number = options.occurrence_number;\n\n      this.days = options.days || [];\n      if (options.last) {\n        this.last = ICAL.helpers.formatClassType(options.last, ICAL.Time);\n      }\n\n      this.by_indices = options.by_indices;\n\n      if (!this.by_indices) {\n        this.by_indices = {\n          \"BYSECOND\": 0,\n          \"BYMINUTE\": 0,\n          \"BYHOUR\": 0,\n          \"BYDAY\": 0,\n          \"BYMONTH\": 0,\n          \"BYWEEKNO\": 0,\n          \"BYMONTHDAY\": 0\n        };\n      }\n\n      this.initialized = options.initialized || false;\n\n      if (!this.initialized) {\n        this.init();\n      }\n    },\n\n    /**\n     * Intialize the iterator\n     * @private\n     */\n    init: function icalrecur_iterator_init() {\n      this.initialized = true;\n      this.last = this.dtstart.clone();\n      var parts = this.by_data;\n\n      if (\"BYDAY\" in parts) {\n        // libical does this earlier when the rule is loaded, but we postpone to\n        // now so we can preserve the original order.\n        this.sort_byday_rules(parts.BYDAY);\n      }\n\n      // If the BYYEARDAY appares, no other date rule part may appear\n      if (\"BYYEARDAY\" in parts) {\n        if (\"BYMONTH\" in parts || \"BYWEEKNO\" in parts ||\n            \"BYMONTHDAY\" in parts || \"BYDAY\" in parts) {\n          throw new Error(\"Invalid BYYEARDAY rule\");\n        }\n      }\n\n      // BYWEEKNO and BYMONTHDAY rule parts may not both appear\n      if (\"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {\n        throw new Error(\"BYWEEKNO does not fit to BYMONTHDAY\");\n      }\n\n      // For MONTHLY recurrences (FREQ=MONTHLY) neither BYYEARDAY nor\n      // BYWEEKNO may appear.\n      if (this.rule.freq == \"MONTHLY\" &&\n          (\"BYYEARDAY\" in parts || \"BYWEEKNO\" in parts)) {\n        throw new Error(\"For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear\");\n      }\n\n      // For WEEKLY recurrences (FREQ=WEEKLY) neither BYMONTHDAY nor\n      // BYYEARDAY may appear.\n      if (this.rule.freq == \"WEEKLY\" &&\n          (\"BYYEARDAY\" in parts || \"BYMONTHDAY\" in parts)) {\n        throw new Error(\"For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear\");\n      }\n\n      // BYYEARDAY may only appear in YEARLY rules\n      if (this.rule.freq != \"YEARLY\" && \"BYYEARDAY\" in parts) {\n        throw new Error(\"BYYEARDAY may only appear in YEARLY rules\");\n      }\n\n      this.last.second = this.setup_defaults(\"BYSECOND\", \"SECONDLY\", this.dtstart.second);\n      this.last.minute = this.setup_defaults(\"BYMINUTE\", \"MINUTELY\", this.dtstart.minute);\n      this.last.hour = this.setup_defaults(\"BYHOUR\", \"HOURLY\", this.dtstart.hour);\n      this.last.day = this.setup_defaults(\"BYMONTHDAY\", \"DAILY\", this.dtstart.day);\n      this.last.month = this.setup_defaults(\"BYMONTH\", \"MONTHLY\", this.dtstart.month);\n\n      if (this.rule.freq == \"WEEKLY\") {\n        if (\"BYDAY\" in parts) {\n          var bydayParts = this.ruleDayOfWeek(parts.BYDAY[0], this.rule.wkst);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var wkdy = dow - this.last.dayOfWeek(this.rule.wkst);\n          if ((this.last.dayOfWeek(this.rule.wkst) < dow && wkdy >= 0) || wkdy < 0) {\n            // Initial time is after first day of BYDAY data\n            this.last.day += wkdy;\n          }\n        } else {\n          var dayName = ICAL.Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());\n          parts.BYDAY = [dayName];\n        }\n      }\n\n      if (this.rule.freq == \"YEARLY\") {\n        for (;;) {\n          this.expand_year_days(this.last.year);\n          if (this.days.length > 0) {\n            break;\n          }\n          this.increment_year(this.rule.interval);\n        }\n\n        this._nextByYearDay();\n      }\n\n      if (this.rule.freq == \"MONTHLY\" && this.has_by_data(\"BYDAY\")) {\n        var tempLast = null;\n        var initLast = this.last.clone();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n\n        // Check every weekday in BYDAY with relative dow and pos.\n        for (var i in this.by_data.BYDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYDAY.hasOwnProperty(i)) {\n            continue;\n          }\n          this.last = initLast.clone();\n          var bydayParts = this.ruleDayOfWeek(this.by_data.BYDAY[i]);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var dayOfMonth = this.last.nthWeekDay(dow, pos);\n\n          // If |pos| >= 6, the byday is invalid for a monthly rule.\n          if (pos >= 6 || pos <= -6) {\n            throw new Error(\"Malformed values in BYDAY part\");\n          }\n\n          // If a Byday with pos=+/-5 is not in the current month it\n          // must be searched in the next months.\n          if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n            // Skip if we have already found a \"last\" in this month.\n            if (tempLast && tempLast.month == initLast.month) {\n              continue;\n            }\n            while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n              this.increment_month();\n              daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n              dayOfMonth = this.last.nthWeekDay(dow, pos);\n            }\n          }\n\n          this.last.day = dayOfMonth;\n          if (!tempLast || this.last.compare(tempLast) < 0) {\n            tempLast = this.last.clone();\n          }\n        }\n        this.last = tempLast.clone();\n\n        //XXX: This feels like a hack, but we need to initialize\n        //     the BYMONTHDAY case correctly and byDayAndMonthDay handles\n        //     this case. It accepts a special flag which will avoid incrementing\n        //     the initial value without the flag days that match the start time\n        //     would be missed.\n        if (this.has_by_data('BYMONTHDAY')) {\n          this._byDayAndMonthDay(true);\n        }\n\n        if (this.last.day > daysInMonth || this.last.day == 0) {\n          throw new Error(\"Malformed values in BYDAY part\");\n        }\n\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        if (this.last.day < 0) {\n          var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n          this.last.day = daysInMonth + this.last.day + 1;\n        }\n      }\n\n    },\n\n    /**\n     * Retrieve the next occurrence from the iterator.\n     * @return {ICAL.Time}\n     */\n    next: function icalrecur_iterator_next() {\n      var before = (this.last ? this.last.clone() : null);\n\n      if ((this.rule.count && this.occurrence_number >= this.rule.count) ||\n          (this.rule.until && this.last.compare(this.rule.until) > 0)) {\n\n        //XXX: right now this is just a flag and has no impact\n        //     we can simplify the above case to check for completed later.\n        this.completed = true;\n\n        return null;\n      }\n\n      if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {\n        // First of all, give the instance that was initialized\n        this.occurrence_number++;\n        return this.last;\n      }\n\n\n      var valid;\n      do {\n        valid = 1;\n\n        switch (this.rule.freq) {\n        case \"SECONDLY\":\n          this.next_second();\n          break;\n        case \"MINUTELY\":\n          this.next_minute();\n          break;\n        case \"HOURLY\":\n          this.next_hour();\n          break;\n        case \"DAILY\":\n          this.next_day();\n          break;\n        case \"WEEKLY\":\n          this.next_week();\n          break;\n        case \"MONTHLY\":\n          valid = this.next_month();\n          break;\n        case \"YEARLY\":\n          this.next_year();\n          break;\n\n        default:\n          return null;\n        }\n      } while (!this.check_contracting_rules() ||\n               this.last.compare(this.dtstart) < 0 ||\n               !valid);\n\n      // TODO is this valid?\n      if (this.last.compare(before) == 0) {\n        throw new Error(\"Same occurrence found twice, protecting \" +\n                        \"you from death by recursion\");\n      }\n\n      if (this.rule.until && this.last.compare(this.rule.until) > 0) {\n        this.completed = true;\n        return null;\n      } else {\n        this.occurrence_number++;\n        return this.last;\n      }\n    },\n\n    next_second: function next_second() {\n      return this.next_generic(\"BYSECOND\", \"SECONDLY\", \"second\", \"minute\");\n    },\n\n    increment_second: function increment_second(inc) {\n      return this.increment_generic(inc, \"second\", 60, \"minute\");\n    },\n\n    next_minute: function next_minute() {\n      return this.next_generic(\"BYMINUTE\", \"MINUTELY\",\n                               \"minute\", \"hour\", \"next_second\");\n    },\n\n    increment_minute: function increment_minute(inc) {\n      return this.increment_generic(inc, \"minute\", 60, \"hour\");\n    },\n\n    next_hour: function next_hour() {\n      return this.next_generic(\"BYHOUR\", \"HOURLY\", \"hour\",\n                               \"monthday\", \"next_minute\");\n    },\n\n    increment_hour: function increment_hour(inc) {\n      this.increment_generic(inc, \"hour\", 24, \"monthday\");\n    },\n\n    next_day: function next_day() {\n      var has_by_day = (\"BYDAY\" in this.by_data);\n      var this_freq = (this.rule.freq == \"DAILY\");\n\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (this_freq) {\n        this.increment_monthday(this.rule.interval);\n      } else {\n        this.increment_monthday(1);\n      }\n\n      return 0;\n    },\n\n    next_week: function next_week() {\n      var end_of_data = 0;\n\n      if (this.next_weekday_by_week() == 0) {\n        return end_of_data;\n      }\n\n      if (this.has_by_data(\"BYWEEKNO\")) {\n        var idx = ++this.by_indices.BYWEEKNO;\n\n        if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {\n          this.by_indices.BYWEEKNO = 0;\n          end_of_data = 1;\n        }\n\n        // HACK should be first month of the year\n        this.last.month = 1;\n        this.last.day = 1;\n\n        var week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];\n\n        this.last.day += 7 * week_no;\n\n        if (end_of_data) {\n          this.increment_year(1);\n        }\n      } else {\n        // Jump to the next week\n        this.increment_monthday(7 * this.rule.interval);\n      }\n\n      return end_of_data;\n    },\n\n    /**\n     * Normalize each by day rule for a given year/month.\n     * Takes into account ordering and negative rules\n     *\n     * @private\n     * @param {Number} year         Current year.\n     * @param {Number} month        Current month.\n     * @param {Array}  rules        Array of rules.\n     *\n     * @return {Array} sorted and normalized rules.\n     *                 Negative rules will be expanded to their\n     *                 correct positive values for easier processing.\n     */\n    normalizeByMonthDayRules: function(year, month, rules) {\n      var daysInMonth = ICAL.Time.daysInMonth(month, year);\n\n      // XXX: This is probably bad for performance to allocate\n      //      a new array for each month we scan, if possible\n      //      we should try to optimize this...\n      var newRules = [];\n\n      var ruleIdx = 0;\n      var len = rules.length;\n      var rule;\n\n      for (; ruleIdx < len; ruleIdx++) {\n        rule = rules[ruleIdx];\n\n        // if this rule falls outside of given\n        // month discard it.\n        if (Math.abs(rule) > daysInMonth) {\n          continue;\n        }\n\n        // negative case\n        if (rule < 0) {\n          // we add (not subtract its a negative number)\n          // one from the rule because 1 === last day of month\n          rule = daysInMonth + (rule + 1);\n        } else if (rule === 0) {\n          // skip zero its invalid.\n          continue;\n        }\n\n        // only add unique items...\n        if (newRules.indexOf(rule) === -1) {\n          newRules.push(rule);\n        }\n\n      }\n\n      // unique and sort\n      return newRules.sort(function(a, b) { return a - b; });\n    },\n\n    /**\n     * NOTES:\n     * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)\n     * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when\n     * both conditions match a given date (this.last.day) iteration stops.\n     *\n     * @private\n     * @param {Boolean=} isInit     When given true will not increment the\n     *                                current day (this.last).\n     */\n    _byDayAndMonthDay: function(isInit) {\n      var byMonthDay; // setup in initMonth\n      var byDay = this.by_data.BYDAY;\n\n      var date;\n      var dateIdx = 0;\n      var dateLen; // setup in initMonth\n      var dayLen = byDay.length;\n\n      // we are not valid by default\n      var dataIsValid = 0;\n\n      var daysInMonth;\n      var self = this;\n      // we need a copy of this, because a DateTime gets normalized\n      // automatically if the day is out of range. At some points we\n      // set the last day to 0 to start counting.\n      var lastDay = this.last.day;\n\n      function initMonth() {\n        daysInMonth = ICAL.Time.daysInMonth(\n          self.last.month, self.last.year\n        );\n\n        byMonthDay = self.normalizeByMonthDayRules(\n          self.last.year,\n          self.last.month,\n          self.by_data.BYMONTHDAY\n        );\n\n        dateLen = byMonthDay.length;\n\n        // For the case of more than one occurrence in one month\n        // we have to be sure to start searching after the last\n        // found date or at the last BYMONTHDAY, unless we are\n        // initializing the iterator because in this case we have\n        // to consider the last found date too.\n        while (byMonthDay[dateIdx] <= lastDay &&\n               !(isInit && byMonthDay[dateIdx] == lastDay) &&\n               dateIdx < dateLen - 1) {\n          dateIdx++;\n        }\n      }\n\n      function nextMonth() {\n        // since the day is incremented at the start\n        // of the loop below, we need to start at 0\n        lastDay = 0;\n        self.increment_month();\n        dateIdx = 0;\n        initMonth();\n      }\n\n      initMonth();\n\n      // should come after initMonth\n      if (isInit) {\n        lastDay -= 1;\n      }\n\n      // Use a counter to avoid an infinite loop with malformed rules.\n      // Stop checking after 4 years so we consider also a leap year.\n      var monthsCounter = 48;\n\n      while (!dataIsValid && monthsCounter) {\n        monthsCounter--;\n        // increment the current date. This is really\n        // important otherwise we may fall into the infinite\n        // loop trap. The initial date takes care of the case\n        // where the current date is the date we are looking\n        // for.\n        date = lastDay + 1;\n\n        if (date > daysInMonth) {\n          nextMonth();\n          continue;\n        }\n\n        // find next date\n        var next = byMonthDay[dateIdx++];\n\n        // this logic is dependant on the BYMONTHDAYS\n        // being in order (which is done by #normalizeByMonthDayRules)\n        if (next >= date) {\n          // if the next month day is in the future jump to it.\n          lastDay = next;\n        } else {\n          // in this case the 'next' monthday has past\n          // we must move to the month.\n          nextMonth();\n          continue;\n        }\n\n        // Now we can loop through the day rules to see\n        // if one matches the current month date.\n        for (var dayIdx = 0; dayIdx < dayLen; dayIdx++) {\n          var parts = this.ruleDayOfWeek(byDay[dayIdx]);\n          var pos = parts[0];\n          var dow = parts[1];\n\n          this.last.day = lastDay;\n          if (this.last.isNthWeekDay(dow, pos)) {\n            // when we find the valid one we can mark\n            // the conditions as met and break the loop.\n            // (Because we have this condition above\n            //  it will also break the parent loop).\n            dataIsValid = 1;\n            break;\n          }\n        }\n\n        // Its completely possible that the combination\n        // cannot be matched in the current month.\n        // When we reach the end of possible combinations\n        // in the current month we iterate to the next one.\n        // since dateIdx is incremented right after getting\n        // \"next\", we don't need dateLen -1 here.\n        if (!dataIsValid && dateIdx === dateLen) {\n          nextMonth();\n          continue;\n        }\n      }\n\n      if (monthsCounter <= 0) {\n        // Checked 4 years without finding a Byday that matches\n        // a Bymonthday. Maybe the rule is not correct.\n        throw new Error(\"Malformed values in BYDAY combined with BYMONTHDAY parts\");\n      }\n\n\n      return dataIsValid;\n    },\n\n    next_month: function next_month() {\n      var this_freq = (this.rule.freq == \"MONTHLY\");\n      var data_valid = 1;\n\n      if (this.next_hour() == 0) {\n        return data_valid;\n      }\n\n      if (this.has_by_data(\"BYDAY\") && this.has_by_data(\"BYMONTHDAY\")) {\n        data_valid = this._byDayAndMonthDay();\n      } else if (this.has_by_data(\"BYDAY\")) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var setpos = 0;\n        var setpos_total = 0;\n\n        if (this.has_by_data(\"BYSETPOS\")) {\n          var last_day = this.last.day;\n          for (var day = 1; day <= daysInMonth; day++) {\n            this.last.day = day;\n            if (this.is_day_in_byday(this.last)) {\n              setpos_total++;\n              if (day <= last_day) {\n                setpos++;\n              }\n            }\n          }\n          this.last.day = last_day;\n        }\n\n        data_valid = 0;\n        for (var day = this.last.day + 1; day <= daysInMonth; day++) {\n          this.last.day = day;\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") ||\n                this.check_set_position(++setpos) ||\n                this.check_set_position(setpos - setpos_total - 1)) {\n\n              data_valid = 1;\n              break;\n            }\n          }\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          this.increment_month();\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(1)) {\n              data_valid = 1;\n            }\n          } else {\n            data_valid = 0;\n          }\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        this.by_indices.BYMONTHDAY++;\n\n        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n          this.by_indices.BYMONTHDAY = 0;\n          this.increment_month();\n        }\n\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];\n\n        if (day < 0) {\n          day = daysInMonth + day + 1;\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          data_valid = this.is_day_in_byday(this.last);\n        } else {\n          this.last.day = day;\n        }\n\n      } else {\n        this.increment_month();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        if (this.by_data.BYMONTHDAY[0] > daysInMonth) {\n          data_valid = 0;\n        } else {\n          this.last.day = this.by_data.BYMONTHDAY[0];\n        }\n      }\n\n      return data_valid;\n    },\n\n    next_weekday_by_week: function next_weekday_by_week() {\n      var end_of_data = 0;\n\n      if (this.next_hour() == 0) {\n        return end_of_data;\n      }\n\n      if (!this.has_by_data(\"BYDAY\")) {\n        return 1;\n      }\n\n      for (;;) {\n        var tt = new ICAL.Time();\n        this.by_indices.BYDAY++;\n\n        if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {\n          this.by_indices.BYDAY = 0;\n          end_of_data = 1;\n        }\n\n        var coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];\n        var parts = this.ruleDayOfWeek(coded_day);\n        var dow = parts[1];\n\n        dow -= this.rule.wkst;\n\n        if (dow < 0) {\n          dow += 7;\n        }\n\n        tt.year = this.last.year;\n        tt.month = this.last.month;\n        tt.day = this.last.day;\n\n        var startOfWeek = tt.startDoyWeek(this.rule.wkst);\n\n        if (dow + startOfWeek < 1) {\n          // The selected date is in the previous year\n          if (!end_of_data) {\n            continue;\n          }\n        }\n\n        var next = ICAL.Time.fromDayOfYear(startOfWeek + dow,\n                                                  this.last.year);\n\n        /**\n         * The normalization horrors below are due to\n         * the fact that when the year/month/day changes\n         * it can effect the other operations that come after.\n         */\n        this.last.year = next.year;\n        this.last.month = next.month;\n        this.last.day = next.day;\n\n        return end_of_data;\n      }\n    },\n\n    next_year: function next_year() {\n\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (++this.days_index == this.days.length) {\n        this.days_index = 0;\n        do {\n          this.increment_year(this.rule.interval);\n          this.expand_year_days(this.last.year);\n        } while (this.days.length == 0);\n      }\n\n      this._nextByYearDay();\n\n      return 1;\n    },\n\n    _nextByYearDay: function _nextByYearDay() {\n        var doy = this.days[this.days_index];\n        var year = this.last.year;\n        if (doy < 1) {\n            // Time.fromDayOfYear(doy, year) indexes relative to the\n            // start of the given year. That is different from the\n            // semantics of BYYEARDAY where negative indexes are an\n            // offset from the end of the given year.\n            doy += 1;\n            year += 1;\n        }\n        var next = ICAL.Time.fromDayOfYear(doy, year);\n        this.last.day = next.day;\n        this.last.month = next.month;\n    },\n\n    /**\n     * @param dow (eg: '1TU', '-1MO')\n     * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday\n     * @return [pos, numericDow] (eg: [1, 3]) numericDow is relative to aWeekStart\n     */\n    ruleDayOfWeek: function ruleDayOfWeek(dow, aWeekStart) {\n      var matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);\n      if (matches) {\n        var pos = parseInt(matches[1] || 0, 10);\n        dow = ICAL.Recur.icalDayToNumericDay(matches[2], aWeekStart);\n        return [pos, dow];\n      } else {\n        return [0, 0];\n      }\n    },\n\n    next_generic: function next_generic(aRuleType, aInterval, aDateAttr,\n                                        aFollowingAttr, aPreviousIncr) {\n      var has_by_rule = (aRuleType in this.by_data);\n      var this_freq = (this.rule.freq == aInterval);\n      var end_of_data = 0;\n\n      if (aPreviousIncr && this[aPreviousIncr]() == 0) {\n        return end_of_data;\n      }\n\n      if (has_by_rule) {\n        this.by_indices[aRuleType]++;\n        var idx = this.by_indices[aRuleType];\n        var dta = this.by_data[aRuleType];\n\n        if (this.by_indices[aRuleType] == dta.length) {\n          this.by_indices[aRuleType] = 0;\n          end_of_data = 1;\n        }\n        this.last[aDateAttr] = dta[this.by_indices[aRuleType]];\n      } else if (this_freq) {\n        this[\"increment_\" + aDateAttr](this.rule.interval);\n      }\n\n      if (has_by_rule && end_of_data && this_freq) {\n        this[\"increment_\" + aFollowingAttr](1);\n      }\n\n      return end_of_data;\n    },\n\n    increment_monthday: function increment_monthday(inc) {\n      for (var i = 0; i < inc; i++) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        this.last.day++;\n\n        if (this.last.day > daysInMonth) {\n          this.last.day -= daysInMonth;\n          this.increment_month();\n        }\n      }\n    },\n\n    increment_month: function increment_month() {\n      this.last.day = 1;\n      if (this.has_by_data(\"BYMONTH\")) {\n        this.by_indices.BYMONTH++;\n\n        if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {\n          this.by_indices.BYMONTH = 0;\n          this.increment_year(1);\n        }\n\n        this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];\n      } else {\n        if (this.rule.freq == \"MONTHLY\") {\n          this.last.month += this.rule.interval;\n        } else {\n          this.last.month++;\n        }\n\n        this.last.month--;\n        var years = ICAL.helpers.trunc(this.last.month / 12);\n        this.last.month %= 12;\n        this.last.month++;\n\n        if (years != 0) {\n          this.increment_year(years);\n        }\n      }\n    },\n\n    increment_year: function increment_year(inc) {\n      this.last.year += inc;\n    },\n\n    increment_generic: function increment_generic(inc, aDateAttr,\n                                                  aFactor, aNextIncrement) {\n      this.last[aDateAttr] += inc;\n      var nextunit = ICAL.helpers.trunc(this.last[aDateAttr] / aFactor);\n      this.last[aDateAttr] %= aFactor;\n      if (nextunit != 0) {\n        this[\"increment_\" + aNextIncrement](nextunit);\n      }\n    },\n\n    has_by_data: function has_by_data(aRuleType) {\n      return (aRuleType in this.rule.parts);\n    },\n\n    expand_year_days: function expand_year_days(aYear) {\n      var t = new ICAL.Time();\n      this.days = [];\n\n      // We need our own copy with a few keys set\n      var parts = {};\n      var rules = [\"BYDAY\", \"BYWEEKNO\", \"BYMONTHDAY\", \"BYMONTH\", \"BYYEARDAY\"];\n      for (var p in rules) {\n        /* istanbul ignore else */\n        if (rules.hasOwnProperty(p)) {\n          var part = rules[p];\n          if (part in this.rule.parts) {\n            parts[part] = this.rule.parts[part];\n          }\n        }\n      }\n\n      if (\"BYMONTH\" in parts && \"BYWEEKNO\" in parts) {\n        var valid = 1;\n        var validWeeks = {};\n        t.year = aYear;\n        t.isDate = true;\n\n        for (var monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {\n          var month = this.by_data.BYMONTH[monthIdx];\n          t.month = month;\n          t.day = 1;\n          var first_week = t.weekNumber(this.rule.wkst);\n          t.day = ICAL.Time.daysInMonth(month, aYear);\n          var last_week = t.weekNumber(this.rule.wkst);\n          for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {\n            validWeeks[monthIdx] = 1;\n          }\n        }\n\n        for (var weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {\n          var weekno = this.by_data.BYWEEKNO[weekIdx];\n          if (weekno < 52) {\n            valid &= validWeeks[weekIdx];\n          } else {\n            valid = 0;\n          }\n        }\n\n        if (valid) {\n          delete parts.BYMONTH;\n        } else {\n          delete parts.BYWEEKNO;\n        }\n      }\n\n      var partCount = Object.keys(parts).length;\n\n      if (partCount == 0) {\n        var t1 = this.dtstart.clone();\n        t1.year = this.last.year;\n        this.days.push(t1.dayOfYear());\n      } else if (partCount == 1 && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var t2 = this.dtstart.clone();\n          t2.year = aYear;\n          t2.month = this.by_data.BYMONTH[monthkey];\n          t2.isDate = true;\n          this.days.push(t2.dayOfYear());\n        }\n      } else if (partCount == 1 && \"BYMONTHDAY\" in parts) {\n        for (var monthdaykey in this.by_data.BYMONTHDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n            continue;\n          }\n          var t3 = this.dtstart.clone();\n          var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n          if (day_ < 0) {\n            var daysInMonth = ICAL.Time.daysInMonth(t3.month, aYear);\n            day_ = day_ + daysInMonth + 1;\n          }\n          t3.day = day_;\n          t3.year = aYear;\n          t3.isDate = true;\n          this.days.push(t3.dayOfYear());\n        }\n      } else if (partCount == 2 &&\n                 \"BYMONTHDAY\" in parts &&\n                 \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var month_ = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month_, aYear);\n          for (var monthdaykey in this.by_data.BYMONTHDAY) {\n            /* istanbul ignore if */\n            if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n              continue;\n            }\n            var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n            if (day_ < 0) {\n              day_ = day_ + daysInMonth + 1;\n            }\n            t.day = day_;\n            t.month = month_;\n            t.year = aYear;\n            t.isDate = true;\n\n            this.days.push(t.dayOfYear());\n          }\n        }\n      } else if (partCount == 1 && \"BYWEEKNO\" in parts) {\n        // TODO unimplemented in libical\n      } else if (partCount == 2 &&\n                 \"BYWEEKNO\" in parts &&\n                 \"BYMONTHDAY\" in parts) {\n        // TODO unimplemented in libical\n      } else if (partCount == 1 && \"BYDAY\" in parts) {\n        this.days = this.days.concat(this.expand_by_day(aYear));\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var month = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month, aYear);\n\n          t.year = aYear;\n          t.month = this.by_data.BYMONTH[monthkey];\n          t.day = 1;\n          t.isDate = true;\n\n          var first_dow = t.dayOfWeek();\n          var doy_offset = t.dayOfYear() - 1;\n\n          t.day = daysInMonth;\n          var last_dow = t.dayOfWeek();\n\n          if (this.has_by_data(\"BYSETPOS\")) {\n            var set_pos_counter = 0;\n            var by_month_day = [];\n            for (var day = 1; day <= daysInMonth; day++) {\n              t.day = day;\n              if (this.is_day_in_byday(t)) {\n                by_month_day.push(day);\n              }\n            }\n\n            for (var spIndex = 0; spIndex < by_month_day.length; spIndex++) {\n              if (this.check_set_position(spIndex + 1) ||\n                  this.check_set_position(spIndex - by_month_day.length)) {\n                this.days.push(doy_offset + by_month_day[spIndex]);\n              }\n            }\n          } else {\n            for (var daycodedkey in this.by_data.BYDAY) {\n              /* istanbul ignore if */\n              if (!this.by_data.BYDAY.hasOwnProperty(daycodedkey)) {\n                continue;\n              }\n              var coded_day = this.by_data.BYDAY[daycodedkey];\n              var bydayParts = this.ruleDayOfWeek(coded_day);\n              var pos = bydayParts[0];\n              var dow = bydayParts[1];\n              var month_day;\n\n              var first_matching_day = ((dow + 7 - first_dow) % 7) + 1;\n              var last_matching_day = daysInMonth - ((last_dow + 7 - dow) % 7);\n\n              if (pos == 0) {\n                for (var day = first_matching_day; day <= daysInMonth; day += 7) {\n                  this.days.push(doy_offset + day);\n                }\n              } else if (pos > 0) {\n                month_day = first_matching_day + (pos - 1) * 7;\n\n                if (month_day <= daysInMonth) {\n                  this.days.push(doy_offset + month_day);\n                }\n              } else {\n                month_day = last_matching_day + (pos + 1) * 7;\n\n                if (month_day > 0) {\n                  this.days.push(doy_offset + month_day);\n                }\n              }\n            }\n          }\n        }\n        // Return dates in order of occurrence (1,2,3,...) instead\n        // of by groups of weekdays (1,8,15,...,2,9,16,...).\n        this.days.sort(function(a, b) { return a - b; }); // Comparator function allows to sort numbers.\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n          if (this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 &&\n                 \"BYDAY\" in parts &&\n                 \"BYMONTHDAY\" in parts &&\n                 \"BYMONTH\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n\n          if (this.by_data.BYMONTH.indexOf(tt.month) >= 0 &&\n              this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n          var weekno = tt.weekNumber(this.rule.wkst);\n\n          if (this.by_data.BYWEEKNO.indexOf(weekno)) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 &&\n                 \"BYDAY\" in parts &&\n                 \"BYWEEKNO\" in parts &&\n                 \"BYMONTHDAY\" in parts) {\n        // TODO unimplemted in libical\n      } else if (partCount == 1 && \"BYYEARDAY\" in parts) {\n        this.days = this.days.concat(this.by_data.BYYEARDAY);\n      } else {\n        this.days = [];\n      }\n      return 0;\n    },\n\n    expand_by_day: function expand_by_day(aYear) {\n\n      var days_list = [];\n      var tmp = this.last.clone();\n\n      tmp.year = aYear;\n      tmp.month = 1;\n      tmp.day = 1;\n      tmp.isDate = true;\n\n      var start_dow = tmp.dayOfWeek();\n\n      tmp.month = 12;\n      tmp.day = 31;\n      tmp.isDate = true;\n\n      var end_dow = tmp.dayOfWeek();\n      var end_year_day = tmp.dayOfYear();\n\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n\n        if (pos == 0) {\n          var tmp_start_doy = ((dow + 7 - start_dow) % 7) + 1;\n\n          for (var doy = tmp_start_doy; doy <= end_year_day; doy += 7) {\n            days_list.push(doy);\n          }\n\n        } else if (pos > 0) {\n          var first;\n          if (dow >= start_dow) {\n            first = dow - start_dow + 1;\n          } else {\n            first = dow - start_dow + 8;\n          }\n\n          days_list.push(first + (pos - 1) * 7);\n        } else {\n          var last;\n          pos = -pos;\n\n          if (dow <= end_dow) {\n            last = end_year_day - end_dow + dow;\n          } else {\n            last = end_year_day - end_dow + dow - 7;\n          }\n\n          days_list.push(last - (pos - 1) * 7);\n        }\n      }\n      return days_list;\n    },\n\n    is_day_in_byday: function is_day_in_byday(tt) {\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n        var this_dow = tt.dayOfWeek();\n\n        if ((pos == 0 && dow == this_dow) ||\n            (tt.nthWeekDay(dow, pos) == tt.day)) {\n          return 1;\n        }\n      }\n\n      return 0;\n    },\n\n    /**\n     * Checks if given value is in BYSETPOS.\n     *\n     * @private\n     * @param {Numeric} aPos position to check for.\n     * @return {Boolean} false unless BYSETPOS rules exist\n     *                   and the given value is present in rules.\n     */\n    check_set_position: function check_set_position(aPos) {\n      if (this.has_by_data('BYSETPOS')) {\n        var idx = this.by_data.BYSETPOS.indexOf(aPos);\n        // negative numbers are not false-y\n        return idx !== -1;\n      }\n      return false;\n    },\n\n    sort_byday_rules: function icalrecur_sort_byday_rules(aRules) {\n      for (var i = 0; i < aRules.length; i++) {\n        for (var j = 0; j < i; j++) {\n          var one = this.ruleDayOfWeek(aRules[j], this.rule.wkst)[1];\n          var two = this.ruleDayOfWeek(aRules[i], this.rule.wkst)[1];\n\n          if (one > two) {\n            var tmp = aRules[i];\n            aRules[i] = aRules[j];\n            aRules[j] = tmp;\n          }\n        }\n      }\n    },\n\n    check_contract_restriction: function check_contract_restriction(aRuleType, v) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n      var pass = false;\n\n      if (aRuleType in this.by_data &&\n          ruleMapValue == icalrecur_iterator.CONTRACT) {\n\n        var ruleType = this.by_data[aRuleType];\n\n        for (var bydatakey in ruleType) {\n          /* istanbul ignore else */\n          if (ruleType.hasOwnProperty(bydatakey)) {\n            if (ruleType[bydatakey] == v) {\n              pass = true;\n              break;\n            }\n          }\n        }\n      } else {\n        // Not a contracting byrule or has no data, test passes\n        pass = true;\n      }\n      return pass;\n    },\n\n    check_contracting_rules: function check_contracting_rules() {\n      var dow = this.last.dayOfWeek();\n      var weekNo = this.last.weekNumber(this.rule.wkst);\n      var doy = this.last.dayOfYear();\n\n      return (this.check_contract_restriction(\"BYSECOND\", this.last.second) &&\n              this.check_contract_restriction(\"BYMINUTE\", this.last.minute) &&\n              this.check_contract_restriction(\"BYHOUR\", this.last.hour) &&\n              this.check_contract_restriction(\"BYDAY\", ICAL.Recur.numericDayToIcalDay(dow)) &&\n              this.check_contract_restriction(\"BYWEEKNO\", weekNo) &&\n              this.check_contract_restriction(\"BYMONTHDAY\", this.last.day) &&\n              this.check_contract_restriction(\"BYMONTH\", this.last.month) &&\n              this.check_contract_restriction(\"BYYEARDAY\", doy));\n    },\n\n    setup_defaults: function setup_defaults(aRuleType, req, deftime) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n\n      if (ruleMapValue != icalrecur_iterator.CONTRACT) {\n        if (!(aRuleType in this.by_data)) {\n          this.by_data[aRuleType] = [deftime];\n        }\n        if (this.rule.freq != req) {\n          return this.by_data[aRuleType][0];\n        }\n      }\n      return deftime;\n    },\n\n    /**\n     * Convert iterator into a serialize-able object.  Will preserve current\n     * iteration sequence to ensure the seamless continuation of the recurrence\n     * rule.\n     * @return {Object}\n     */\n    toJSON: function() {\n      var result = Object.create(null);\n\n      result.initialized = this.initialized;\n      result.rule = this.rule.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.by_data = this.by_data;\n      result.days = this.days;\n      result.last = this.last.toJSON();\n      result.by_indices = this.by_indices;\n      result.occurrence_number = this.occurrence_number;\n\n      return result;\n    }\n  };\n\n  icalrecur_iterator._indexMap = {\n    \"BYSECOND\": 0,\n    \"BYMINUTE\": 1,\n    \"BYHOUR\": 2,\n    \"BYDAY\": 3,\n    \"BYMONTHDAY\": 4,\n    \"BYYEARDAY\": 5,\n    \"BYWEEKNO\": 6,\n    \"BYMONTH\": 7,\n    \"BYSETPOS\": 8\n  };\n\n  icalrecur_iterator._expandMap = {\n    \"SECONDLY\": [1, 1, 1, 1, 1, 1, 1, 1],\n    \"MINUTELY\": [2, 1, 1, 1, 1, 1, 1, 1],\n    \"HOURLY\": [2, 2, 1, 1, 1, 1, 1, 1],\n    \"DAILY\": [2, 2, 2, 1, 1, 1, 1, 1],\n    \"WEEKLY\": [2, 2, 2, 2, 3, 3, 1, 1],\n    \"MONTHLY\": [2, 2, 2, 2, 2, 3, 3, 1],\n    \"YEARLY\": [2, 2, 2, 2, 2, 2, 2, 2]\n  };\n  icalrecur_iterator.UNKNOWN = 0;\n  icalrecur_iterator.CONTRACT = 1;\n  icalrecur_iterator.EXPAND = 2;\n  icalrecur_iterator.ILLEGAL = 3;\n\n  return icalrecur_iterator;\n\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.RecurExpansion = (function() {\n  function formatTime(item) {\n    return ICAL.helpers.formatClassType(item, ICAL.Time);\n  }\n\n  function compareTime(a, b) {\n    return a.compare(b);\n  }\n\n  function isRecurringComponent(comp) {\n    return comp.hasProperty('rdate') ||\n           comp.hasProperty('rrule') ||\n           comp.hasProperty('recurrence-id');\n  }\n\n  /**\n   * @classdesc\n   * Primary class for expanding recurring rules.  Can take multiple rrules,\n   * rdates, exdate(s) and iterate (in order) over each next occurrence.\n   *\n   * Once initialized this class can also be serialized saved and continue\n   * iteration from the last point.\n   *\n   * NOTE: it is intended that this class is to be used\n   *       with ICAL.Event which handles recurrence exceptions.\n   *\n   * @example\n   * // assuming event is a parsed ical component\n   * var event;\n   *\n   * var expand = new ICAL.RecurExpansion({\n   *   component: event,\n   *   dtstart: event.getFirstPropertyValue('dtstart')\n   * });\n   *\n   * // remember there are infinite rules\n   * // so its a good idea to limit the scope\n   * // of the iterations then resume later on.\n   *\n   * // next is always an ICAL.Time or null\n   * var next;\n   *\n   * while (someCondition && (next = expand.next())) {\n   *   // do something with next\n   * }\n   *\n   * // save instance for later\n   * var json = JSON.stringify(expand);\n   *\n   * //...\n   *\n   * // NOTE: if the component's properties have\n   * //       changed you will need to rebuild the\n   * //       class and start over. This only works\n   * //       when the component's recurrence info is the same.\n   * var expand = new ICAL.RecurExpansion(JSON.parse(json));\n   *\n   * @description\n   * The options object can be filled with the specified initial values. It can\n   * also contain additional members, as a result of serializing a previous\n   * expansion state, as shown in the example.\n   *\n   * @class\n   * @alias ICAL.RecurExpansion\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {ICAL.Time} options.dtstart\n   *        Start time of the event\n   * @param {ICAL.Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n  function RecurExpansion(options) {\n    this.ruleDates = [];\n    this.exDates = [];\n    this.fromData(options);\n  }\n\n  RecurExpansion.prototype = {\n    /**\n     * True when iteration is fully completed.\n     * @type {Boolean}\n     */\n    complete: false,\n\n    /**\n     * Array of rrule iterators.\n     *\n     * @type {ICAL.RecurIterator[]}\n     * @private\n     */\n    ruleIterators: null,\n\n    /**\n     * Array of rdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    ruleDates: null,\n\n    /**\n     * Array of exdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    exDates: null,\n\n    /**\n     * Current position in ruleDates array.\n     * @type {Number}\n     * @private\n     */\n    ruleDateInc: 0,\n\n    /**\n     * Current position in exDates array\n     * @type {Number}\n     * @private\n     */\n    exDateInc: 0,\n\n    /**\n     * Current negative date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    exDate: null,\n\n    /**\n     * Current additional date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    ruleDate: null,\n\n    /**\n     * Start date of recurring rules.\n     *\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * Last expanded time\n     *\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * Initialize the recurrence expansion from the data object. The options\n     * object may also contain additional members, see the\n     * {@link ICAL.RecurExpansion constructor} for more details.\n     *\n     * @param {Object} options\n     *        Recurrence expansion options\n     * @param {ICAL.Time} options.dtstart\n     *        Start time of the event\n     * @param {ICAL.Component=} options.component\n     *        Component for expansion, required if not resuming.\n     */\n    fromData: function(options) {\n      var start = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!start) {\n        throw new Error('.dtstart (ICAL.Time) must be given');\n      } else {\n        this.dtstart = start;\n      }\n\n      if (options.component) {\n        this._init(options.component);\n      } else {\n        this.last = formatTime(options.last) || start.clone();\n\n        if (!options.ruleIterators) {\n          throw new Error('.ruleIterators or .component must be given');\n        }\n\n        this.ruleIterators = options.ruleIterators.map(function(item) {\n          return ICAL.helpers.formatClassType(item, ICAL.RecurIterator);\n        });\n\n        this.ruleDateInc = options.ruleDateInc;\n        this.exDateInc = options.exDateInc;\n\n        if (options.ruleDates) {\n          this.ruleDates = options.ruleDates.map(formatTime);\n          this.ruleDate = this.ruleDates[this.ruleDateInc];\n        }\n\n        if (options.exDates) {\n          this.exDates = options.exDates.map(formatTime);\n          this.exDate = this.exDates[this.exDateInc];\n        }\n\n        if (typeof(options.complete) !== 'undefined') {\n          this.complete = options.complete;\n        }\n      }\n    },\n\n    /**\n     * Retrieve the next occurrence in the series.\n     * @return {ICAL.Time}\n     */\n    next: function() {\n      var iter;\n      var ruleOfDay;\n      var next;\n      var compare;\n\n      var maxTries = 500;\n      var currentTry = 0;\n\n      while (true) {\n        if (currentTry++ > maxTries) {\n          throw new Error(\n            'max tries have occured, rule may be impossible to forfill.'\n          );\n        }\n\n        next = this.ruleDate;\n        iter = this._nextRecurrenceIter(this.last);\n\n        // no more matches\n        // because we increment the rule day or rule\n        // _after_ we choose a value this should be\n        // the only spot where we need to worry about the\n        // end of events.\n        if (!next && !iter) {\n          // there are no more iterators or rdates\n          this.complete = true;\n          break;\n        }\n\n        // no next rule day or recurrence rule is first.\n        if (!next || (iter && next.compare(iter.last) > 0)) {\n          // must be cloned, recur will reuse the time element.\n          next = iter.last.clone();\n          // move to next so we can continue\n          iter.next();\n        }\n\n        // if the ruleDate is still next increment it.\n        if (this.ruleDate === next) {\n          this._nextRuleDay();\n        }\n\n        this.last = next;\n\n        // check the negative rules\n        if (this.exDate) {\n          compare = this.exDate.compare(this.last);\n\n          if (compare < 0) {\n            this._nextExDay();\n          }\n\n          // if the current rule is excluded skip it.\n          if (compare === 0) {\n            this._nextExDay();\n            continue;\n          }\n        }\n\n        //XXX: The spec states that after we resolve the final\n        //     list of dates we execute exdate this seems somewhat counter\n        //     intuitive to what I have seen most servers do so for now\n        //     I exclude based on the original date not the one that may\n        //     have been modified by the exception.\n        return this.last;\n      }\n    },\n\n    /**\n     * Converts object into a serialize-able format. This format can be passed\n     * back into the expansion to resume iteration.\n     * @return {Object}\n     */\n    toJSON: function() {\n      function toJSON(item) {\n        return item.toJSON();\n      }\n\n      var result = Object.create(null);\n      result.ruleIterators = this.ruleIterators.map(toJSON);\n\n      if (this.ruleDates) {\n        result.ruleDates = this.ruleDates.map(toJSON);\n      }\n\n      if (this.exDates) {\n        result.exDates = this.exDates.map(toJSON);\n      }\n\n      result.ruleDateInc = this.ruleDateInc;\n      result.exDateInc = this.exDateInc;\n      result.last = this.last.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.complete = this.complete;\n\n      return result;\n    },\n\n    /**\n     * Extract all dates from the properties in the given component. The\n     * properties will be filtered by the property name.\n     *\n     * @private\n     * @param {ICAL.Component} component        The component to search in\n     * @param {String} propertyName             The property name to search for\n     * @return {ICAL.Time[]}                    The extracted dates.\n     */\n    _extractDates: function(component, propertyName) {\n      function handleProp(prop) {\n        idx = ICAL.helpers.binsearchInsert(\n          result,\n          prop,\n          compareTime\n        );\n\n        // ordered insert\n        result.splice(idx, 0, prop);\n      }\n\n      var result = [];\n      var props = component.getAllProperties(propertyName);\n      var len = props.length;\n      var i = 0;\n      var prop;\n\n      var idx;\n\n      for (; i < len; i++) {\n        props[i].getValues().forEach(handleProp);\n      }\n\n      return result;\n    },\n\n    /**\n     * Initialize the recurrence expansion.\n     *\n     * @private\n     * @param {ICAL.Component} component    The component to initialize from.\n     */\n    _init: function(component) {\n      this.ruleIterators = [];\n\n      this.last = this.dtstart.clone();\n\n      // to provide api consistency non-recurring\n      // events can also use the iterator though it will\n      // only return a single time.\n      if (!isRecurringComponent(component)) {\n        this.ruleDate = this.last.clone();\n        this.complete = true;\n        return;\n      }\n\n      if (component.hasProperty('rdate')) {\n        this.ruleDates = this._extractDates(component, 'rdate');\n\n        // special hack for cases where first rdate is prior\n        // to the start date. We only check for the first rdate.\n        // This is mostly for google's crazy recurring date logic\n        // (contacts birthdays).\n        if ((this.ruleDates[0]) &&\n            (this.ruleDates[0].compare(this.dtstart) < 0)) {\n\n          this.ruleDateInc = 0;\n          this.last = this.ruleDates[0].clone();\n        } else {\n          this.ruleDateInc = ICAL.helpers.binsearchInsert(\n            this.ruleDates,\n            this.last,\n            compareTime\n          );\n        }\n\n        this.ruleDate = this.ruleDates[this.ruleDateInc];\n      }\n\n      if (component.hasProperty('rrule')) {\n        var rules = component.getAllProperties('rrule');\n        var i = 0;\n        var len = rules.length;\n\n        var rule;\n        var iter;\n\n        for (; i < len; i++) {\n          rule = rules[i].getFirstValue();\n          iter = rule.iterator(this.dtstart);\n          this.ruleIterators.push(iter);\n\n          // increment to the next occurrence so future\n          // calls to next return times beyond the initial iteration.\n          // XXX: I find this suspicious might be a bug?\n          iter.next();\n        }\n      }\n\n      if (component.hasProperty('exdate')) {\n        this.exDates = this._extractDates(component, 'exdate');\n        // if we have a .last day we increment the index to beyond it.\n        this.exDateInc = ICAL.helpers.binsearchInsert(\n          this.exDates,\n          this.last,\n          compareTime\n        );\n\n        this.exDate = this.exDates[this.exDateInc];\n      }\n    },\n\n    /**\n     * Advance to the next exdate\n     * @private\n     */\n    _nextExDay: function() {\n      this.exDate = this.exDates[++this.exDateInc];\n    },\n\n    /**\n     * Advance to the next rule date\n     * @private\n     */\n    _nextRuleDay: function() {\n      this.ruleDate = this.ruleDates[++this.ruleDateInc];\n    },\n\n    /**\n     * Find and return the recurrence rule with the most recent event and\n     * return it.\n     *\n     * @private\n     * @return {?ICAL.RecurIterator}    Found iterator.\n     */\n    _nextRecurrenceIter: function() {\n      var iters = this.ruleIterators;\n\n      if (iters.length === 0) {\n        return null;\n      }\n\n      var len = iters.length;\n      var iter;\n      var iterTime;\n      var iterIdx = 0;\n      var chosenIter;\n\n      // loop through each iterator\n      for (; iterIdx < len; iterIdx++) {\n        iter = iters[iterIdx];\n        iterTime = iter.last;\n\n        // if iteration is complete\n        // then we must exclude it from\n        // the search and remove it.\n        if (iter.completed) {\n          len--;\n          if (iterIdx !== 0) {\n            iterIdx--;\n          }\n          iters.splice(iterIdx, 1);\n          continue;\n        }\n\n        // find the most recent possible choice\n        if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {\n          // that iterator is saved\n          chosenIter = iter;\n        }\n      }\n\n      // the chosen iterator is returned but not mutated\n      // this iterator contains the most recent event.\n      return chosenIter;\n    }\n  };\n\n  return RecurExpansion;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Event = (function() {\n\n  /**\n   * @classdesc\n   * ICAL.js is organized into multiple layers. The bottom layer is a raw jCal\n   * object, followed by the component/property layer. The highest level is the\n   * event representation, which this class is part of. See the\n   * {@tutorial layers} guide for more details.\n   *\n   * @class\n   * @alias ICAL.Event\n   * @param {ICAL.Component=} component         The ICAL.Component to base this event on\n   * @param {Object} options                    Options for this event\n   * @param {Boolean} options.strictExceptions\n   *          When true, will verify exceptions are related by their UUID\n   * @param {Array<ICAL.Component|ICAL.Event>} options.exceptions\n   *          Exceptions to this event, either as components or events. If not\n   *            specified exceptions will automatically be set in relation of\n   *            component's parent\n   */\n  function Event(component, options) {\n    if (!(component instanceof ICAL.Component)) {\n      options = component;\n      component = null;\n    }\n\n    if (component) {\n      this.component = component;\n    } else {\n      this.component = new ICAL.Component('vevent');\n    }\n\n    this._rangeExceptionCache = Object.create(null);\n    this.exceptions = Object.create(null);\n    this.rangeExceptions = [];\n\n    if (options && options.strictExceptions) {\n      this.strictExceptions = options.strictExceptions;\n    }\n\n    if (options && options.exceptions) {\n      options.exceptions.forEach(this.relateException, this);\n    } else if (this.component.parent && !this.isRecurrenceException()) {\n      this.component.parent.getAllSubcomponents('vevent').forEach(function(event) {\n        if (event.hasProperty('recurrence-id')) {\n          this.relateException(event);\n        }\n      }, this);\n    }\n  }\n\n  Event.prototype = {\n\n    THISANDFUTURE: 'THISANDFUTURE',\n\n    /**\n     * List of related event exceptions.\n     *\n     * @type {ICAL.Event[]}\n     */\n    exceptions: null,\n\n    /**\n     * When true, will verify exceptions are related by their UUID.\n     *\n     * @type {Boolean}\n     */\n    strictExceptions: false,\n\n    /**\n     * Relates a given event exception to this object.  If the given component\n     * does not share the UID of this event it cannot be related and will throw\n     * an exception.\n     *\n     * If this component is an exception it cannot have other exceptions\n     * related to it.\n     *\n     * @param {ICAL.Component|ICAL.Event} obj       Component or event\n     */\n    relateException: function(obj) {\n      if (this.isRecurrenceException()) {\n        throw new Error('cannot relate exception to exceptions');\n      }\n\n      if (obj instanceof ICAL.Component) {\n        obj = new ICAL.Event(obj);\n      }\n\n      if (this.strictExceptions && obj.uid !== this.uid) {\n        throw new Error('attempted to relate unrelated exception');\n      }\n\n      var id = obj.recurrenceId.toString();\n\n      // we don't sort or manage exceptions directly\n      // here the recurrence expander handles that.\n      this.exceptions[id] = obj;\n\n      // index RANGE=THISANDFUTURE exceptions so we can\n      // look them up later in getOccurrenceDetails.\n      if (obj.modifiesFuture()) {\n        var item = [\n          obj.recurrenceId.toUnixTime(), id\n        ];\n\n        // we keep them sorted so we can find the nearest\n        // value later on...\n        var idx = ICAL.helpers.binsearchInsert(\n          this.rangeExceptions,\n          item,\n          compareRangeException\n        );\n\n        this.rangeExceptions.splice(idx, 0, item);\n      }\n    },\n\n    /**\n     * Checks if this record is an exception and has the RANGE=THISANDFUTURE\n     * value.\n     *\n     * @return {Boolean}        True, when exception is within range\n     */\n    modifiesFuture: function() {\n      if (!this.component.hasProperty('recurrence-id')) {\n        return false;\n      }\n\n      var range = this.component.getFirstProperty('recurrence-id').getParameter('range');\n      return range === this.THISANDFUTURE;\n    },\n\n    /**\n     * Finds the range exception nearest to the given date.\n     *\n     * @param {ICAL.Time} time usually an occurrence time of an event\n     * @return {?ICAL.Event} the related event/exception or null\n     */\n    findRangeException: function(time) {\n      if (!this.rangeExceptions.length) {\n        return null;\n      }\n\n      var utc = time.toUnixTime();\n      var idx = ICAL.helpers.binsearchInsert(\n        this.rangeExceptions,\n        [utc],\n        compareRangeException\n      );\n\n      idx -= 1;\n\n      // occurs before\n      if (idx < 0) {\n        return null;\n      }\n\n      var rangeItem = this.rangeExceptions[idx];\n\n      /* istanbul ignore next: sanity check only */\n      if (utc < rangeItem[0]) {\n        return null;\n      }\n\n      return rangeItem[1];\n    },\n\n    /**\n     * This object is returned by {@link ICAL.Event#getOccurrenceDetails getOccurrenceDetails}\n     *\n     * @typedef {Object} occurrenceDetails\n     * @memberof ICAL.Event\n     * @property {ICAL.Time} recurrenceId       The passed in recurrence id\n     * @property {ICAL.Event} item              The occurrence\n     * @property {ICAL.Time} startDate          The start of the occurrence\n     * @property {ICAL.Time} endDate            The end of the occurrence\n     */\n\n    /**\n     * Returns the occurrence details based on its start time.  If the\n     * occurrence has an exception will return the details for that exception.\n     *\n     * NOTE: this method is intend to be used in conjunction\n     *       with the {@link ICAL.Event#iterator iterator} method.\n     *\n     * @param {ICAL.Time} occurrence time occurrence\n     * @return {ICAL.Event.occurrenceDetails} Information about the occurrence\n     */\n    getOccurrenceDetails: function(occurrence) {\n      var id = occurrence.toString();\n      var utcId = occurrence.convertToZone(ICAL.Timezone.utcTimezone).toString();\n      var item;\n      var result = {\n        //XXX: Clone?\n        recurrenceId: occurrence\n      };\n\n      if (id in this.exceptions) {\n        item = result.item = this.exceptions[id];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else if (utcId in this.exceptions) {\n        item = this.exceptions[utcId];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else {\n        // range exceptions (RANGE=THISANDFUTURE) have a\n        // lower priority then direct exceptions but\n        // must be accounted for first. Their item is\n        // always the first exception with the range prop.\n        var rangeExceptionId = this.findRangeException(\n          occurrence\n        );\n        var end;\n\n        if (rangeExceptionId) {\n          var exception = this.exceptions[rangeExceptionId];\n\n          // range exception must modify standard time\n          // by the difference (if any) in start/end times.\n          result.item = exception;\n\n          var startDiff = this._rangeExceptionCache[rangeExceptionId];\n\n          if (!startDiff) {\n            var original = exception.recurrenceId.clone();\n            var newStart = exception.startDate.clone();\n\n            // zones must be same otherwise subtract may be incorrect.\n            original.zone = newStart.zone;\n            startDiff = newStart.subtractDate(original);\n\n            this._rangeExceptionCache[rangeExceptionId] = startDiff;\n          }\n\n          var start = occurrence.clone();\n          start.zone = exception.startDate.zone;\n          start.addDuration(startDiff);\n\n          end = start.clone();\n          end.addDuration(exception.duration);\n\n          result.startDate = start;\n          result.endDate = end;\n        } else {\n          // no range exception standard expansion\n          end = occurrence.clone();\n          end.addDuration(this.duration);\n\n          result.endDate = end;\n          result.startDate = occurrence;\n          result.item = this;\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Builds a recur expansion instance for a specific point in time (defaults\n     * to startDate).\n     *\n     * @param {ICAL.Time} startTime     Starting point for expansion\n     * @return {ICAL.RecurExpansion}    Expansion object\n     */\n    iterator: function(startTime) {\n      return new ICAL.RecurExpansion({\n        component: this.component,\n        dtstart: startTime || this.startDate\n      });\n    },\n\n    /**\n     * Checks if the event is recurring\n     *\n     * @return {Boolean}        True, if event is recurring\n     */\n    isRecurring: function() {\n      var comp = this.component;\n      return comp.hasProperty('rrule') || comp.hasProperty('rdate');\n    },\n\n    /**\n     * Checks if the event describes a recurrence exception. See\n     * {@tutorial terminology} for details.\n     *\n     * @return {Boolean}    True, if the even describes a recurrence exception\n     */\n    isRecurrenceException: function() {\n      return this.component.hasProperty('recurrence-id');\n    },\n\n    /**\n     * Returns the types of recurrences this event may have.\n     *\n     * Returned as an object with the following possible keys:\n     *\n     *    - YEARLY\n     *    - MONTHLY\n     *    - WEEKLY\n     *    - DAILY\n     *    - MINUTELY\n     *    - SECONDLY\n     *\n     * @return {Object.<ICAL.Recur.frequencyValues, Boolean>}\n     *          Object of recurrence flags\n     */\n    getRecurrenceTypes: function() {\n      var rules = this.component.getAllProperties('rrule');\n      var i = 0;\n      var len = rules.length;\n      var result = Object.create(null);\n\n      for (; i < len; i++) {\n        var value = rules[i].getFirstValue();\n        result[value.freq] = true;\n      }\n\n      return result;\n    },\n\n    /**\n     * The uid of this event\n     * @type {String}\n     */\n    get uid() {\n      return this._firstProp('uid');\n    },\n\n    set uid(value) {\n      this._setProp('uid', value);\n    },\n\n    /**\n     * The start date\n     * @type {ICAL.Time}\n     */\n    get startDate() {\n      return this._firstProp('dtstart');\n    },\n\n    set startDate(value) {\n      this._setTime('dtstart', value);\n    },\n\n    /**\n     * The end date. This can be the result directly from the property, or the\n     * end date calculated from start date and duration. Setting the property\n     * will remove any duration properties.\n     * @type {ICAL.Time}\n     */\n    get endDate() {\n      var endDate = this._firstProp('dtend');\n      if (!endDate) {\n          var duration = this._firstProp('duration');\n          endDate = this.startDate.clone();\n          if (duration) {\n              endDate.addDuration(duration);\n          } else if (endDate.isDate) {\n              endDate.day += 1;\n          }\n      }\n      return endDate;\n    },\n\n    set endDate(value) {\n      if (this.component.hasProperty('duration')) {\n        this.component.removeProperty('duration');\n      }\n      this._setTime('dtend', value);\n    },\n\n    /**\n     * The duration. This can be the result directly from the property, or the\n     * duration calculated from start date and end date. Setting the property\n     * will remove any `dtend` properties.\n     * @type {ICAL.Duration}\n     */\n    get duration() {\n      var duration = this._firstProp('duration');\n      if (!duration) {\n        return this.endDate.subtractDateTz(this.startDate);\n      }\n      return duration;\n    },\n\n    set duration(value) {\n      if (this.component.hasProperty('dtend')) {\n        this.component.removeProperty('dtend');\n      }\n\n      this._setProp('duration', value);\n    },\n\n    /**\n     * The location of the event.\n     * @type {String}\n     */\n    get location() {\n      return this._firstProp('location');\n    },\n\n    set location(value) {\n      return this._setProp('location', value);\n    },\n\n    /**\n     * The attendees in the event\n     * @type {ICAL.Property[]}\n     * @readonly\n     */\n    get attendees() {\n      //XXX: This is way lame we should have a better\n      //     data structure for this later.\n      return this.component.getAllProperties('attendee');\n    },\n\n\n    /**\n     * The event summary\n     * @type {String}\n     */\n    get summary() {\n      return this._firstProp('summary');\n    },\n\n    set summary(value) {\n      this._setProp('summary', value);\n    },\n\n    /**\n     * The event description.\n     * @type {String}\n     */\n    get description() {\n      return this._firstProp('description');\n    },\n\n    set description(value) {\n      this._setProp('description', value);\n    },\n\n    /**\n     * The organizer value as an uri. In most cases this is a mailto: uri, but\n     * it can also be something else, like urn:uuid:...\n     * @type {String}\n     */\n    get organizer() {\n      return this._firstProp('organizer');\n    },\n\n    set organizer(value) {\n      this._setProp('organizer', value);\n    },\n\n    /**\n     * The sequence value for this event. Used for scheduling\n     * see {@tutorial terminology}.\n     * @type {Number}\n     */\n    get sequence() {\n      return this._firstProp('sequence');\n    },\n\n    set sequence(value) {\n      this._setProp('sequence', value);\n    },\n\n    /**\n     * The recurrence id for this event. See {@tutorial terminology} for details.\n     * @type {ICAL.Time}\n     */\n    get recurrenceId() {\n      return this._firstProp('recurrence-id');\n    },\n\n    set recurrenceId(value) {\n      this._setTime('recurrence-id', value);\n    },\n\n    /**\n     * Set/update a time property's value.\n     * This will also update the TZID of the property.\n     *\n     * TODO: this method handles the case where we are switching\n     * from a known timezone to an implied timezone (one without TZID).\n     * This does _not_ handle the case of moving between a known\n     *  (by TimezoneService) timezone to an unknown timezone...\n     *\n     * We will not add/remove/update the VTIMEZONE subcomponents\n     *  leading to invalid ICAL data...\n     * @private\n     * @param {String} propName     The property name\n     * @param {ICAL.Time} time      The time to set\n     */\n    _setTime: function(propName, time) {\n      var prop = this.component.getFirstProperty(propName);\n\n      if (!prop) {\n        prop = new ICAL.Property(propName);\n        this.component.addProperty(prop);\n      }\n\n      // utc and local don't get a tzid\n      if (\n        time.zone === ICAL.Timezone.localTimezone ||\n        time.zone === ICAL.Timezone.utcTimezone\n      ) {\n        // remove the tzid\n        prop.removeParameter('tzid');\n      } else {\n        prop.setParameter('tzid', time.zone.tzid);\n      }\n\n      prop.setValue(time);\n    },\n\n    _setProp: function(name, value) {\n      this.component.updatePropertyWithValue(name, value);\n    },\n\n    _firstProp: function(name) {\n      return this.component.getFirstPropertyValue(name);\n    },\n\n    /**\n     * The string representation of this event.\n     * @return {String}\n     */\n    toString: function() {\n      return this.component.toString();\n    }\n\n  };\n\n  function compareRangeException(a, b) {\n    if (a[0] > b[0]) return 1;\n    if (b[0] > a[0]) return -1;\n    return 0;\n  }\n\n  return Event;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.ComponentParser = (function() {\n  /**\n   * @classdesc\n   * The ComponentParser is used to process a String or jCal Object,\n   * firing callbacks for various found components, as well as completion.\n   *\n   * @example\n   * var options = {\n   *   // when false no events will be emitted for type\n   *   parseEvent: true,\n   *   parseTimezone: true\n   * };\n   *\n   * var parser = new ICAL.ComponentParser(options);\n   *\n   * parser.onevent(eventComponent) {\n   *   //...\n   * }\n   *\n   * // ontimezone, etc...\n   *\n   * parser.oncomplete = function() {\n   *\n   * };\n   *\n   * parser.process(stringOrComponent);\n   *\n   * @class\n   * @alias ICAL.ComponentParser\n   * @param {Object=} options        Component parser options\n   * @param {Boolean} options.parseEvent        Whether events should be parsed\n   * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed\n   */\n  function ComponentParser(options) {\n    if (typeof(options) === 'undefined') {\n      options = {};\n    }\n\n    var key;\n    for (key in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(key)) {\n        this[key] = options[key];\n      }\n    }\n  }\n\n  ComponentParser.prototype = {\n\n    /**\n     * When true, parse events\n     *\n     * @type {Boolean}\n     */\n    parseEvent: true,\n\n    /**\n     * When true, parse timezones\n     *\n     * @type {Boolean}\n     */\n    parseTimezone: true,\n\n\n    /* SAX like events here for reference */\n\n    /**\n     * Fired when parsing is complete\n     * @callback\n     */\n    oncomplete: /* istanbul ignore next */ function() {},\n\n    /**\n     * Fired if an error occurs during parsing.\n     *\n     * @callback\n     * @param {Error} err details of error\n     */\n    onerror: /* istanbul ignore next */ function(err) {},\n\n    /**\n     * Fired when a top level component (VTIMEZONE) is found\n     *\n     * @callback\n     * @param {ICAL.Timezone} component     Timezone object\n     */\n    ontimezone: /* istanbul ignore next */ function(component) {},\n\n    /**\n     * Fired when a top level component (VEVENT) is found.\n     *\n     * @callback\n     * @param {ICAL.Event} component    Top level component\n     */\n    onevent: /* istanbul ignore next */ function(component) {},\n\n    /**\n     * Process a string or parse ical object.  This function itself will return\n     * nothing but will start the parsing process.\n     *\n     * Events must be registered prior to calling this method.\n     *\n     * @param {ICAL.Component|String|Object} ical      The component to process,\n     *        either in its final form, as a jCal Object, or string representation\n     */\n    process: function(ical) {\n      //TODO: this is sync now in the future we will have a incremental parser.\n      if (typeof(ical) === 'string') {\n        ical = ICAL.parse(ical);\n      }\n\n      if (!(ical instanceof ICAL.Component)) {\n        ical = new ICAL.Component(ical);\n      }\n\n      var components = ical.getAllSubcomponents();\n      var i = 0;\n      var len = components.length;\n      var component;\n\n      for (; i < len; i++) {\n        component = components[i];\n\n        switch (component.name) {\n          case 'vtimezone':\n            if (this.parseTimezone) {\n              var tzid = component.getFirstPropertyValue('tzid');\n              if (tzid) {\n                this.ontimezone(new ICAL.Timezone({\n                  tzid: tzid,\n                  component: component\n                }));\n              }\n            }\n            break;\n          case 'vevent':\n            if (this.parseEvent) {\n              this.onevent(new ICAL.Event(component));\n            }\n            break;\n          default:\n            continue;\n        }\n      }\n\n      //XXX: ideally we should do a \"nextTick\" here\n      //     so in all cases this is actually async.\n      this.oncomplete();\n    }\n  };\n\n  return ComponentParser;\n}());\n"]}