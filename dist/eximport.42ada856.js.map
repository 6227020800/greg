{"version":3,"sources":["assets/js/eximport.js"],"names":["eximport","export_ical","parse_ics","data","callback","saveOnDevice","subscription","split","join","jcalData","ICAL","parse","vcalendar","Component","last_uid","last_date","isoDateTimeEnd","getAllSubcomponents","forEach","index","getFirstPropertyValue","DTend","dateEnd","timeEnd","design","icalendar","value","toICAL","Date","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","replace","DTstart","dateStart","timeStart","isoDateTimeStart","multidayevent","getTime","g","parse_rrule","imp","BEGIN","UID","SUMMARY","LOCATION","DESCRIPTION","ATTACH","RRULE","feedback","toString","CLASS","DTSTAMP","DTSTART","DTEND","END","time_start","time_end","notification","alarm","isSubscription","rrule_","freq","parse_rrule2","date","events","push","without_subscription","filter","localforage","setItem","then","helper","side_toaster","catch","err","console","log","filename","event_data","navigator","getDeviceStorage","sdcard","delete","onsuccess","setTimeout","result","e","key","Object","keys","length","file","Blob","type","request","addNamed","onerror","toaster","list_ics","file_list","list_files","fn","document","querySelector","insertAdjacentHTML","loadICS","get","reader","FileReader","event","abort","onloadend","target","readAsText","warn","error","share","url","name","activity","MozActivity","number","blobs","filenames","fetch_ics","cb","xhttp","XMLHttpRequest","mozSystem","open","timeout","onload","readyState","DONE","status","response","send"],"mappings":"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","file":"eximport.42ada856.js","sourceRoot":"../application","sourcesContent":["const eximport = (() => {\n  let export_ical = function (filename, event_data) {\n    if (!navigator.getDeviceStorage) return false;\n\n    var sdcard = navigator.getDeviceStorage(\"sdcard\");\n\n    var request_del = sdcard.delete(filename);\n    request_del.onsuccess = function () {};\n    setTimeout(function () {\n      // convert\n      let data = event_data;\n      let result = \"\";\n\n      result += \"BEGIN:VCALENDAR\" + \"\\r\\n\";\n      result += \"VERSION:2.0\" + \"\\r\\n\";\n      result += \"PRODID:GREG\" + \"\\r\\n\";\n      result += \"METHOD:PUBLISHED\" + \"\\r\\n\";\n\n      data.forEach((e) => {\n        let index = -1;\n        for (let key in e) {\n          index++;\n          if (index == 0) result += \"BEGIN:VEVENT\" + \"\\r\\n\";\n\n          if (\n            key != \"BEGIN\" &&\n            key != \"END\" &&\n            key != \"date\" &&\n            key != \"time_start\" &&\n            key != \"time_end\" &&\n            key != \"dateStart\" &&\n            key != \"dateEnd\" &&\n            key != \"notification\" &&\n            key != \"alarm\" &&\n            key != \"isSubscription\" &&\n            key != \"multidayevent\" &&\n            key != \"alarmTrigger\" &&\n            key != \"rrule_\"\n          ) {\n            result += `${key}:${e[key]}` + \"\\r\\n\";\n          }\n          if (index == Object.keys(e).length - 1)\n            result += \"END:VEVENT\" + \"\\r\\n\";\n        }\n      });\n\n      result += \"END:VCALENDAR\" + \"\\r\\n\";\n      var file = new Blob([result], { type: \"text/calendar\" });\n      var request = sdcard.addNamed(file, filename);\n      request.onsuccess = function () {\n        helper.side_toaster(\"<img src='assets/image/E25C.svg'>\", 2500);\n      };\n\n      request.onerror = function () {\n        helper.toaster(\"Unable to write the file\", 2000);\n      };\n    }, 2000);\n  };\n\n  // //////////\n\n  // /LIST ICS\n\n  // ////////////\n\n  let list_ics = function () {\n    let file_list = [];\n    let cb = function (result) {\n      file_list.push(result);\n\n      let fn = result.split(\"/\");\n      fn = fn[fn.length - 1];\n      if (fn == \"greg.ics\") return false;\n\n      document\n        .querySelector(\"div#options div#import-text\")\n        .insertAdjacentHTML(\n          \"afterend\",\n          '<button class=\"item dynamic\" data-function=\"import\" data-filename=\"' +\n            result +\n            '\">' +\n            fn +\n            \"</button>\"\n        );\n    };\n\n    helper.list_files(\"ics\", cb);\n  };\n\n  // /////////////\n  // /PARSE ICS\n  // /////////////\n\n  let parse_ics = function (data, callback, saveOnDevice, subscription) {\n    var data = data.split(/\\r\\n|\\n/);\n    data = data.join(\"\\r\\n\");\n    // parse iCal data\n    var jcalData = ICAL.parse(data);\n    var vcalendar = new ICAL.Component(jcalData);\n    let last_uid = \"\";\n    let last_date = \"\";\n    let isoDateTimeEnd = \"\";\n\n\n\n    vcalendar.getAllSubcomponents(\"vevent\").forEach(function (index) {\n      if (\n        index.getFirstPropertyValue(\"dtstart\") == \"\" &&\n        index.getFirstPropertyValue(\"summary\") == \"\"\n      )\n        return false;\n\n      let DTend = null;\n      let dateEnd = null;\n      let timeEnd = null;\n      if (index.getFirstPropertyValue(\"dtend\") != null) {\n        DTend = ICAL.design.icalendar.value[\"date-time\"].toICAL(\n          index.getFirstPropertyValue(\"dtend\")\n        );\n\n        DTend = new Date(index.getFirstPropertyValue(\"dtend\"));\n\n\n\n\n\n        dateEnd =\n          DTend.getFullYear() +\n          \"-\" +\n          `0${DTend.getMonth() + 1}`.slice(-2) +\n          \"-\" +\n          `0${DTend.getDate()}`.slice(-2);\n\n        timeEnd =\n          `0${DTend.getHours()}`.slice(-2) +\n          \":\" +\n          `0${DTend.getMinutes()}`.slice(-2) +\n          \":\" +\n          `0${DTend.getSeconds()}`.slice(-2);\n\n        isoDateTimeEnd = dateEnd + \"T\" + timeEnd;\n        isoDateTimeEnd = isoDateTimeEnd.replace(/-/g, \"\");\n        isoDateTimeEnd = isoDateTimeEnd.replace(/:/g, \"\");\n      }\n\n      let DTstart = null;\n      let dateStart = null;\n      let timeStart = null;\n      let isoDateTimeStart = null;\n      if (index.getFirstPropertyValue(\"dtstart\") != null) {\n        DTstart = ICAL.design.icalendar.value[\"date-time\"].toICAL(\n          index.getFirstPropertyValue(\"dtstart\")\n        );\n\n        DTstart = new Date(index.getFirstPropertyValue(\"dtstart\"));\n\n        dateStart =\n          DTstart.getFullYear() +\n          \"-\" +\n          `0${DTstart.getMonth() + 1}`.slice(-2) +\n          \"-\" +\n          `0${DTstart.getDate()}`.slice(-2);\n\n        timeStart =\n          `0${DTstart.getHours()}`.slice(-2) +\n          \":\" +\n          `0${DTstart.getMinutes()}`.slice(-2) +\n          \":\" +\n          `0${DTstart.getSeconds()}`.slice(-2);\n\n        isoDateTimeStart = dateStart + \"T\" + timeStart;\n        isoDateTimeStart = isoDateTimeStart.replace(/-/g, \"\");\n        isoDateTimeStart = isoDateTimeStart.replace(/:/g, \"\");\n      }\n\n      // check multi day events\n      multidayevent = false;\n      if (new Date(dateEnd).getTime() > new Date(dateStart).getTime()) {\n        multidayevent = true;\n      }\n\n      // last modified\n      let g = new Date(index.getFirstPropertyValue(\"last-modified\")).getTime();\n\n      if (timeStart == timeEnd) {\n        timeStart = \"\";\n        timeEnd = \"\";\n      }\n\n\n\n\n      last_uid = \"\";\n      last_date = \"\";\n      let parse_rrule = function () {\n        let feedback = \"\";\n        if (index.getFirstPropertyValue(\"rrule\") != null) {\n          let a = index.getFirstPropertyValue(\"rrule\");\n          feedback = a.toString();\n        }\n\n        return feedback;\n      };\n\n      let parse_rrule2 = function () {\n        let feedback = \"none\";\n        if (index.getFirstPropertyValue(\"rrule\") != null) {\n          let a = index.getFirstPropertyValue(\"rrule\");\n          feedback = a.freq;\n        }\n\n        return feedback;\n      };\n\n\n\n\n      let imp = {\n        BEGIN: \"VEVENT\",\n        UID: index.getFirstPropertyValue(\"uid\"),\n        SUMMARY: index.getFirstPropertyValue(\"summary\"),\n        LOCATION: index.getFirstPropertyValue(\"location\"),\n        DESCRIPTION: index.getFirstPropertyValue(\"description\"),\n        ATTACH: index.getFirstPropertyValue(\"attach\"),\n        RRULE: parse_rrule(),\n        \"LAST-MODIFIED\": g,\n        CLASS: \"PRIVATE\",\n        DTSTAMP: isoDateTimeStart,\n        DTSTART: isoDateTimeStart,\n        DTEND: isoDateTimeEnd,\n        END: \"VEVENT\",\n        dateStart: dateStart,\n        dateEnd: dateEnd,\n        time_start: timeStart,\n        time_end: timeEnd,\n        notification: \" \",\n        alarm: \"none\",\n        isSubscription: subscription,\n        multidayevent: multidayevent,\n        rrule_: parse_rrule2(),\n      };\n\n\n      last_uid = imp.UID;\n      last_date = imp.date;\n      events.push(imp);\n\n    });\n\n\n\n\n    if (saveOnDevice) {\n      let without_subscription = events.filter(\n        (events) => events.isSubscription === false\n      );\n      \n\n      localforage\n        .setItem(\"events\", without_subscription)\n        .then(function (value) {\n          // events = value;\n          helper.side_toaster(\"<img src='assets/image/E25C.svg'>\", 2500);\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n    }\n    \n\n        \n\n    callback(last_uid, last_date);\n\nconsole.log(\"done\")\n  };\n\n  // ///////////\n  // /FETCH ICS\n  // /////////\n\n  let fetch_ics = function (url, cb) {\n    let xhttp = new XMLHttpRequest({ mozSystem: true });\n\n    xhttp.open(\"GET\", url + \"?time=\" + new Date().getTime(), true);\n    xhttp.timeout = 25000;\n    xhttp.onload = function () {\n      if (xhttp.readyState === xhttp.DONE && xhttp.status === 200) {\n        let data = xhttp.response;\n        parse_ics(data, cb, false, true);\n      }\n    };\n\n    xhttp.onerror = function () {\n      helper.toaster(\"subscription could not be loaded\", 2000);\n    };\n\n    xhttp.send(null);\n  };\n\n  function share(url, name) {\n    var activity = new MozActivity({\n      name: \"share\",\n      data: {\n        type: \"text/calendar\",\n        number: 1,\n        blobs: [url],\n        filenames: [name],\n      },\n    });\n\n    activity.onsuccess = function () {};\n\n    activity.onerror = function () {};\n  }\n\n  // ///////////////////////\n  // ///Load ICS///////////\n  // /////////////////////\n\n  function loadICS(filename, callback) {\n    var sdcard = navigator.getDeviceStorage(\"sdcard\");\n\n    var request = sdcard.get(filename);\n\n    request.onsuccess = function () {\n      var file = this.result;\n\n      let reader = new FileReader();\n\n      reader.onerror = function (event) {\n        helper.toaster(\"can't read file\", 3000);\n        reader.abort();\n      };\n\n      reader.onloadend = function (event) {\n        parse_ics(event.target.result, callback, true, false);\n      };\n\n      reader.readAsText(file);\n    };\n\n    request.onerror = function () {\n      console.warn(\"Unable to get the file: \" + this.error);\n    };\n\n \n  }\n\n  return {\n    export_ical,\n    list_ics,\n    loadICS,\n    share,\n    fetch_ics,\n  };\n})();\n"]}