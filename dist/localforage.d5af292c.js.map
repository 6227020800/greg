{"version":3,"sources":["assets/js/localforage.js"],"names":["f","exports","module","define","amd","window","global","self","localforage","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","_dereq_","Mutation","scheduleDrain","draining","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","push","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","result","tryCatch","tryToUnwrap","status","out","prototype","constructor","error","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","Symbol","iterator","idb","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","createBlob","parts","properties","Blob","name","Builder","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_checkBlobSupport","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","undefined","tx","_tryReconnect","forage","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isIndexedDBValid","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","iterate","store","req","openCursor","iterationNumber","cursor","getItem","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","readAsBinaryString","_encodeBlob","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","encoded1","encoded2","encoded3","encoded4","p","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","webSQLStorage","_initStorage$1","dbInfoPromise","description","size","serializer","iterate$1","item","getItem$1","setItem$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","removeItem$1","clear$1","length$1","c","key$1","keys$1","dropInstance$1","storeNames","getAllStoreNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","checkIfLocalStorageThrows","localStorage","localStorageWrapper","_initStorage$2","isLocalStorageValid","iterate$2","keyPrefixLength","getItem$2","setItem$2","removeItem$2","clear$2","length$2","key$2","keys$2","itemKey","dropInstance$2","includes","array","searchElement","x","y","sameValue","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","localforage_js","driverTypeKey","_classCallCheck","instance","Constructor","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","initDriver","currentDriverIndex","driverPromiseLoop","supports","libraryMethodsAndProperties","createInstance"],"mappings":"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","file":"localforage.d5af292c.js","sourceRoot":"../application","sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"]}