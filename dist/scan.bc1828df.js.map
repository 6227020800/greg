{"version":3,"sources":["assets/js/scan.js"],"names":["qr","_","video","intv","start_scan","callback","status","view","document","getElementById","style","display","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","width","height","stream","querySelector","srcObject","onloadedmetadata","e","play","barcodeCanvas","createElement","setInterval","videoWidth","videoHeight","barcodeContext","getContext","imageWidth","Math","max","floor","imageHeight","drawImage","imageData","getImageData","idd","data","code","jsQR","console","log","stop_scan","clearInterval","err","name","tracks","getTracks","forEach","track","stop","views","helper","bottom_bar"],"mappings":"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","file":"scan.bc1828df.js","sourceRoot":"../application","sourcesContent":["const qr = ((_) => {\n  let video;\n  let intv;\n  let start_scan = function (callback) {\n    status.view = \"scan\";\n    //helper.bottom_bar(\"\", \"\", \"\");\n\n    document.getElementById(\"qr-screen\").style.display = \"block\";\n\n    navigator.getUserMedia =\n      navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia;\n\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia(\n        {\n          audio: false,\n          video: {\n            width: 200,\n            height: 200,\n          },\n        },\n        function (stream) {\n          video = document.querySelector(\"video\");\n          video.srcObject = stream;\n\n          video.onloadedmetadata = function (e) {\n            video.play();\n\n            var barcodeCanvas = document.createElement(\"canvas\");\n            intv = setInterval(() => {\n              barcodeCanvas.width = video.videoWidth;\n              barcodeCanvas.height = video.videoHeight;\n              var barcodeContext = barcodeCanvas.getContext(\"2d\");\n              var imageWidth = Math.max(1, Math.floor(video.videoWidth)),\n                imageHeight = Math.max(1, Math.floor(video.videoHeight));\n\n              barcodeContext.drawImage(video, 0, 0, imageWidth, imageHeight);\n\n              var imageData = barcodeContext.getImageData(\n                0,\n                0,\n                imageWidth,\n                imageHeight\n              );\n              var idd = imageData.data;\n\n              let code = jsQR(idd, imageWidth, imageHeight);\n              console.log(code);\n\n              if (code) {\n                stop_scan();\n                callback(code.data);\n                status.view = \"subscription\";\n                clearInterval(intv);\n              }\n            }, 1000);\n          };\n        },\n        function (err) {\n          console.log(\"The following error occurred: \" + err.name);\n        }\n      );\n    } else {\n      console.log(\"getUserMedia not supported\");\n    }\n  };\n\n  let stop_scan = function () {\n    const stream = video.srcObject;\n    const tracks = stream.getTracks();\n\n    tracks.forEach(function (track) {\n      track.stop();\n      document.getElementById(\"qr-screen\").style.display = \"none\";\n    });\n\n    video.srcObject = null;\n    status.views = \"subscription\";\n\n    helper.bottom_bar(\"QR\", \"save\", \"chancel\");\n  };\n\n  return {\n    start_scan,\n    stop_scan,\n  };\n})();\n"]}