{"version":3,"sources":["assets/js/jsQR.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","value","BitMatrix","data","width","height","length","createEmpty","Uint8ClampedArray","x","y","set","v","setRegion","left","top","GenericGFPoly_1","addOrSubtractGF","a","b","GenericGF","primitive","size","genBase","generatorBase","expTable","Array","logTable","zero","default","from","one","multiply","inverse","Error","buildMonomial","degree","coefficient","coefficients","log","exp","GenericGF_1","GenericGFPoly","field","coefficientsLength","firstNonZero","isZero","getCoefficient","addOrSubtract","other","_a","smallerCoefficients","largerCoefficients","sumDiff","lengthDiff","scalar","product","multiplyPoly","aCoefficients","aLength","bCoefficients","bLength","aCoeff","j","multiplyByMonomial","evaluateAt","result","forEach","binarizer_1","decoder_1","extractor_1","locator_1","scan","matrix","locations","locate","_i","locations_1","location_1","extracted","extract","decoded","decode","binaryData","bytes","text","chunks","location","topRightCorner","mappingFunction","dimension","topLeftCorner","bottomRightCorner","bottomLeftCorner","topRightFinderPattern","topRight","topLeftFinderPattern","topLeft","bottomLeftFinderPattern","bottomLeft","bottomRightAlignmentPattern","alignmentPattern","defaultOptions","inversionAttempts","jsQR","providedOptions","options","keys","opt","shouldInvert","tryInvertedFirst","binarize","binarized","inverted","BitMatrix_1","REGION_SIZE","MIN_DYNAMIC_RANGE","numBetween","min","max","Matrix","returnInverted","greyscalePixels","r","g","horizontalRegionCount","Math","ceil","verticalRegionCount","blackPoints","verticalRegion","hortizontalRegion","sum","Infinity","pixelLumosity","average","pow","averageNeighborBlackPoint","top_1","xRegion","yRegion","threshold","lum","decodeData_1","reedsolomon_1","version_1","numBitsDiffering","z","bitCount","pushBit","bit","byte","FORMAT_INFO_TABLE","bits","formatInfo","errorCorrectionLevel","dataMask","DATA_MASKS","floor","buildFunctionPatternMask","version","versionNumber","alignmentPatternCenters","_b","_c","readCodewords","functionPatternMask","codewords","currentByte","bitsRead","readingUp","columnIndex","columnOffset","push","readVersion","provisionalVersion","VERSIONS","topRightVersionBits","bottomLeftVersionBits","bestDifference","bestVersion","VERSIONS_1","infoBits","difference","readFormatInformation","topLeftFormatInfoBits","topRightBottomRightFormatInfoBits","bestFormatInfo","FORMAT_INFO_TABLE_1","getDataBlocks","ecLevel","ecInfo","errorCorrectionLevels","dataBlocks","totalCodewords","ecBlocks","block","numBlocks","numDataCodewords","dataCodewordsPerBlock","ecCodewordsPerBlock","slice","shortBlockSize","dataBlocks_1","dataBlock","shift","smallBlockCount","largeBlockCount","dataBlocks_2","decodeMatrix","totalBytes","reduce","resultBytes","resultIndex","dataBlocks_3","correctedBytes","BitStream_1","shiftJISTable_1","Mode","ModeByte","decodeNumeric","stream","characterCountSize","readBits","num","toString","AlphanumericCharacterCodes","decodeAlphanumeric","charCodeAt","decodeByte","decodeURIComponent","map","substr","join","decodeKanji","k","String","fromCharCode","shiftJISTable","_d","BitStream","available","mode","Terminator","ECI","type","assignmentNumber","Numeric","numericResult","apply","Alphanumeric","alphanumericResult","Byte","byteResult","Kanji","kanjiResult","byteOffset","bitOffset","numBits","bitsLeft","toRead","bitsToNotRead","mask","runEuclideanAlgorithm","R","rLast","tLast","t","rLastLast","tLastLast","q","denominatorLeadingTerm","dltInverse","degreeDiff","scale","sigmaTildeAtZero","findErrorLocations","errorLocator","numErrors","errorCount","findErrorMagnitudes","errorEvaluator","errorLocations","xiInverse","denominator","twoS","outputBytes","poly","syndromeCoefficients","error","evaluation","syndrome","sigmaOmega","errorMagnitudes","position","squareToQuadrilateral","p1","p2","p3","p4","dx3","dy3","a11","a12","a13","a21","a22","a23","a31","a32","a33","dx1","dx2","dy1","dy2","quadrilateralToSquare","sToQ","times","image","qToS","transform","xValue","yValue","sourcePixel","MAX_FINDERPATTERNS_TO_SEARCH","MIN_QUAD_RATIO","MAX_QUAD_RATIO","distance","sqrt","values","reorderFinderPatterns","pattern1","pattern2","pattern3","oneTwoDistance","twoThreeDistance","oneThreeDistance","computeDimension","moduleSize","countBlackWhiteRun","topDimension","round","sideDimension","countBlackWhiteRunTowardsPoint","origin","end","switchPoints","steep","abs","fromX","fromY","toX","toY","dx","dy","xStep","yStep","currentPixel","realX","realY","distances","rise","run","towardsEnd","awayFromEnd","middleValue","concat","scoreBlackWhiteRun","sequence","ratios","averageSize","ratio","scorePattern","point","horizontalRun","verticalRun","topLeftPoint","topLeftBottomRightRun","bottomLeftPoint","bottomLeftTopRightRun","horzError","vertError","diagDownError","diagUpError","ratioError","avgSize","sizeError","recenterLocation","leftX","rightX","topY","bottomY","finderPatternQuads","activeFinderPatternQuads","alignmentPatternQuads","activeAlignmentPatternQuads","_loop_1","length_1","lastBit","scans","_loop_2","averageFinderPatternBlocksize","validFinderPattern","averageAlignmentPatternBlocksize","validAlignmentPattern","endX_1","startX_1","line","startX","endX","matchingQuads","filter","bottom","endX_2","startX_2","finderPatternGroups","lengths","score","sort","finderPatterns","otherPoints","ii","points","alignment","findAlignmentPattern","midTopRight","midTopLeft","midBottomLeft","centeredAlignment","e","bottomRightFinderPattern","modulesBetweenFinderPatterns","correctionToTopLeft","expectedAlignmentPattern","alignmentPatterns","sizeScore"],"mappings":"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","file":"jsQR.fb2b6c72.js","sourceRoot":"../application","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === \"object\" && typeof module === \"object\")\n    module.exports = factory();\n  else if (typeof define === \"function\" && define.amd) define([], factory);\n  else if (typeof exports === \"object\") exports[\"jsQR\"] = factory();\n  else root[\"jsQR\"] = factory();\n})(typeof self !== \"undefined\" ? self : this, function () {\n  return /******/ (function (modules) {\n    // webpackBootstrap\n    /******/ // The module cache\n    /******/ var installedModules = {}; // The require function\n    /******/\n    /******/ /******/ function __webpack_require__(moduleId) {\n      /******/\n      /******/ // Check if module is in cache\n      /******/ if (installedModules[moduleId]) {\n        /******/ return installedModules[moduleId].exports;\n        /******/\n      } // Create a new module (and put it into the cache)\n      /******/ /******/ var module = (installedModules[moduleId] = {\n        /******/ i: moduleId,\n        /******/ l: false,\n        /******/ exports: {},\n        /******/\n      }); // Execute the module function\n      /******/\n      /******/ /******/ modules[moduleId].call(\n        module.exports,\n        module,\n        module.exports,\n        __webpack_require__\n      ); // Flag the module as loaded\n      /******/\n      /******/ /******/ module.l = true; // Return the exports of the module\n      /******/\n      /******/ /******/ return module.exports;\n      /******/\n    } // expose the modules object (__webpack_modules__)\n    /******/\n    /******/\n    /******/ /******/ __webpack_require__.m = modules; // expose the module cache\n    /******/\n    /******/ /******/ __webpack_require__.c = installedModules; // define getter function for harmony exports\n    /******/\n    /******/ /******/ __webpack_require__.d = function (exports, name, getter) {\n      /******/ if (!__webpack_require__.o(exports, name)) {\n        /******/ Object.defineProperty(exports, name, {\n          /******/ configurable: false,\n          /******/ enumerable: true,\n          /******/ get: getter,\n          /******/\n        });\n        /******/\n      }\n      /******/\n    }; // getDefaultExport function for compatibility with non-harmony modules\n    /******/\n    /******/ /******/ __webpack_require__.n = function (module) {\n      /******/ var getter =\n        module && module.__esModule\n          ? /******/ function getDefault() {\n              return module[\"default\"];\n            }\n          : /******/ function getModuleExports() {\n              return module;\n            };\n      /******/ __webpack_require__.d(getter, \"a\", getter);\n      /******/ return getter;\n      /******/\n    }; // Object.prototype.hasOwnProperty.call\n    /******/\n    /******/ /******/ __webpack_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    }; // __webpack_public_path__\n    /******/\n    /******/ /******/ __webpack_require__.p = \"\"; // Load entry module and return exports\n    /******/\n    /******/ /******/ return __webpack_require__((__webpack_require__.s = 3));\n    /******/\n  })(\n    /************************************************************************/\n    /******/ [\n      /* 0 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        var BitMatrix = /** @class */ (function () {\n          function BitMatrix(data, width) {\n            this.width = width;\n            this.height = data.length / width;\n            this.data = data;\n          }\n          BitMatrix.createEmpty = function (width, height) {\n            return new BitMatrix(new Uint8ClampedArray(width * height), width);\n          };\n          BitMatrix.prototype.get = function (x, y) {\n            if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n              return false;\n            }\n            return !!this.data[y * this.width + x];\n          };\n          BitMatrix.prototype.set = function (x, y, v) {\n            this.data[y * this.width + x] = v ? 1 : 0;\n          };\n          BitMatrix.prototype.setRegion = function (\n            left,\n            top,\n            width,\n            height,\n            v\n          ) {\n            for (var y = top; y < top + height; y++) {\n              for (var x = left; x < left + width; x++) {\n                this.set(x, y, !!v);\n              }\n            }\n          };\n          return BitMatrix;\n        })();\n        exports.BitMatrix = BitMatrix;\n\n        /***/\n      },\n      /* 1 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        var GenericGFPoly_1 = __webpack_require__(2);\n        function addOrSubtractGF(a, b) {\n          return a ^ b; // tslint:disable-line:no-bitwise\n        }\n        exports.addOrSubtractGF = addOrSubtractGF;\n        var GenericGF = /** @class */ (function () {\n          function GenericGF(primitive, size, genBase) {\n            this.primitive = primitive;\n            this.size = size;\n            this.generatorBase = genBase;\n            this.expTable = new Array(this.size);\n            this.logTable = new Array(this.size);\n            var x = 1;\n            for (var i = 0; i < this.size; i++) {\n              this.expTable[i] = x;\n              x = x * 2;\n              if (x >= this.size) {\n                x = (x ^ this.primitive) & (this.size - 1); // tslint:disable-line:no-bitwise\n              }\n            }\n            for (var i = 0; i < this.size - 1; i++) {\n              this.logTable[this.expTable[i]] = i;\n            }\n            this.zero = new GenericGFPoly_1.default(\n              this,\n              Uint8ClampedArray.from([0])\n            );\n            this.one = new GenericGFPoly_1.default(\n              this,\n              Uint8ClampedArray.from([1])\n            );\n          }\n          GenericGF.prototype.multiply = function (a, b) {\n            if (a === 0 || b === 0) {\n              return 0;\n            }\n            return this.expTable[\n              (this.logTable[a] + this.logTable[b]) % (this.size - 1)\n            ];\n          };\n          GenericGF.prototype.inverse = function (a) {\n            if (a === 0) {\n              throw new Error(\"Can't invert 0\");\n            }\n            return this.expTable[this.size - this.logTable[a] - 1];\n          };\n          GenericGF.prototype.buildMonomial = function (degree, coefficient) {\n            if (degree < 0) {\n              throw new Error(\"Invalid monomial degree less than 0\");\n            }\n            if (coefficient === 0) {\n              return this.zero;\n            }\n            var coefficients = new Uint8ClampedArray(degree + 1);\n            coefficients[0] = coefficient;\n            return new GenericGFPoly_1.default(this, coefficients);\n          };\n          GenericGF.prototype.log = function (a) {\n            if (a === 0) {\n              throw new Error(\"Can't take log(0)\");\n            }\n            return this.logTable[a];\n          };\n          GenericGF.prototype.exp = function (a) {\n            return this.expTable[a];\n          };\n          return GenericGF;\n        })();\n        exports.default = GenericGF;\n\n        /***/\n      },\n      /* 2 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        var GenericGF_1 = __webpack_require__(1);\n        var GenericGFPoly = /** @class */ (function () {\n          function GenericGFPoly(field, coefficients) {\n            if (coefficients.length === 0) {\n              throw new Error(\"No coefficients.\");\n            }\n            this.field = field;\n            var coefficientsLength = coefficients.length;\n            if (coefficientsLength > 1 && coefficients[0] === 0) {\n              // Leading term must be non-zero for anything except the constant polynomial \"0\"\n              var firstNonZero = 1;\n              while (\n                firstNonZero < coefficientsLength &&\n                coefficients[firstNonZero] === 0\n              ) {\n                firstNonZero++;\n              }\n              if (firstNonZero === coefficientsLength) {\n                this.coefficients = field.zero.coefficients;\n              } else {\n                this.coefficients = new Uint8ClampedArray(\n                  coefficientsLength - firstNonZero\n                );\n                for (var i = 0; i < this.coefficients.length; i++) {\n                  this.coefficients[i] = coefficients[firstNonZero + i];\n                }\n              }\n            } else {\n              this.coefficients = coefficients;\n            }\n          }\n          GenericGFPoly.prototype.degree = function () {\n            return this.coefficients.length - 1;\n          };\n          GenericGFPoly.prototype.isZero = function () {\n            return this.coefficients[0] === 0;\n          };\n          GenericGFPoly.prototype.getCoefficient = function (degree) {\n            return this.coefficients[this.coefficients.length - 1 - degree];\n          };\n          GenericGFPoly.prototype.addOrSubtract = function (other) {\n            var _a;\n            if (this.isZero()) {\n              return other;\n            }\n            if (other.isZero()) {\n              return this;\n            }\n            var smallerCoefficients = this.coefficients;\n            var largerCoefficients = other.coefficients;\n            if (smallerCoefficients.length > largerCoefficients.length) {\n              (_a = [largerCoefficients, smallerCoefficients]),\n                (smallerCoefficients = _a[0]),\n                (largerCoefficients = _a[1]);\n            }\n            var sumDiff = new Uint8ClampedArray(largerCoefficients.length);\n            var lengthDiff =\n              largerCoefficients.length - smallerCoefficients.length;\n            for (var i = 0; i < lengthDiff; i++) {\n              sumDiff[i] = largerCoefficients[i];\n            }\n            for (var i = lengthDiff; i < largerCoefficients.length; i++) {\n              sumDiff[i] = GenericGF_1.addOrSubtractGF(\n                smallerCoefficients[i - lengthDiff],\n                largerCoefficients[i]\n              );\n            }\n            return new GenericGFPoly(this.field, sumDiff);\n          };\n          GenericGFPoly.prototype.multiply = function (scalar) {\n            if (scalar === 0) {\n              return this.field.zero;\n            }\n            if (scalar === 1) {\n              return this;\n            }\n            var size = this.coefficients.length;\n            var product = new Uint8ClampedArray(size);\n            for (var i = 0; i < size; i++) {\n              product[i] = this.field.multiply(this.coefficients[i], scalar);\n            }\n            return new GenericGFPoly(this.field, product);\n          };\n          GenericGFPoly.prototype.multiplyPoly = function (other) {\n            if (this.isZero() || other.isZero()) {\n              return this.field.zero;\n            }\n            var aCoefficients = this.coefficients;\n            var aLength = aCoefficients.length;\n            var bCoefficients = other.coefficients;\n            var bLength = bCoefficients.length;\n            var product = new Uint8ClampedArray(aLength + bLength - 1);\n            for (var i = 0; i < aLength; i++) {\n              var aCoeff = aCoefficients[i];\n              for (var j = 0; j < bLength; j++) {\n                product[i + j] = GenericGF_1.addOrSubtractGF(\n                  product[i + j],\n                  this.field.multiply(aCoeff, bCoefficients[j])\n                );\n              }\n            }\n            return new GenericGFPoly(this.field, product);\n          };\n          GenericGFPoly.prototype.multiplyByMonomial = function (\n            degree,\n            coefficient\n          ) {\n            if (degree < 0) {\n              throw new Error(\"Invalid degree less than 0\");\n            }\n            if (coefficient === 0) {\n              return this.field.zero;\n            }\n            var size = this.coefficients.length;\n            var product = new Uint8ClampedArray(size + degree);\n            for (var i = 0; i < size; i++) {\n              product[i] = this.field.multiply(\n                this.coefficients[i],\n                coefficient\n              );\n            }\n            return new GenericGFPoly(this.field, product);\n          };\n          GenericGFPoly.prototype.evaluateAt = function (a) {\n            var result = 0;\n            if (a === 0) {\n              // Just return the x^0 coefficient\n              return this.getCoefficient(0);\n            }\n            var size = this.coefficients.length;\n            if (a === 1) {\n              // Just the sum of the coefficients\n              this.coefficients.forEach(function (coefficient) {\n                result = GenericGF_1.addOrSubtractGF(result, coefficient);\n              });\n              return result;\n            }\n            result = this.coefficients[0];\n            for (var i = 1; i < size; i++) {\n              result = GenericGF_1.addOrSubtractGF(\n                this.field.multiply(a, result),\n                this.coefficients[i]\n              );\n            }\n            return result;\n          };\n          return GenericGFPoly;\n        })();\n        exports.default = GenericGFPoly;\n\n        /***/\n      },\n      /* 3 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        var binarizer_1 = __webpack_require__(4);\n        var decoder_1 = __webpack_require__(5);\n        var extractor_1 = __webpack_require__(11);\n        var locator_1 = __webpack_require__(12);\n        function scan(matrix) {\n          var locations = locator_1.locate(matrix);\n          if (!locations) {\n            return null;\n          }\n          for (\n            var _i = 0, locations_1 = locations;\n            _i < locations_1.length;\n            _i++\n          ) {\n            var location_1 = locations_1[_i];\n            var extracted = extractor_1.extract(matrix, location_1);\n            var decoded = decoder_1.decode(extracted.matrix);\n            if (decoded) {\n              return {\n                binaryData: decoded.bytes,\n                data: decoded.text,\n                chunks: decoded.chunks,\n                location: {\n                  topRightCorner: extracted.mappingFunction(\n                    location_1.dimension,\n                    0\n                  ),\n                  topLeftCorner: extracted.mappingFunction(0, 0),\n                  bottomRightCorner: extracted.mappingFunction(\n                    location_1.dimension,\n                    location_1.dimension\n                  ),\n                  bottomLeftCorner: extracted.mappingFunction(\n                    0,\n                    location_1.dimension\n                  ),\n                  topRightFinderPattern: location_1.topRight,\n                  topLeftFinderPattern: location_1.topLeft,\n                  bottomLeftFinderPattern: location_1.bottomLeft,\n                  bottomRightAlignmentPattern: location_1.alignmentPattern,\n                },\n              };\n            }\n          }\n          return null;\n        }\n        var defaultOptions = {\n          inversionAttempts: \"attemptBoth\",\n        };\n        function jsQR(data, width, height, providedOptions) {\n          if (providedOptions === void 0) {\n            providedOptions = {};\n          }\n          var options = defaultOptions;\n          Object.keys(options || {}).forEach(function (opt) {\n            options[opt] = providedOptions[opt] || options[opt];\n          });\n          var shouldInvert =\n            options.inversionAttempts === \"attemptBoth\" ||\n            options.inversionAttempts === \"invertFirst\";\n          var tryInvertedFirst =\n            options.inversionAttempts === \"onlyInvert\" ||\n            options.inversionAttempts === \"invertFirst\";\n          var _a = binarizer_1.binarize(data, width, height, shouldInvert),\n            binarized = _a.binarized,\n            inverted = _a.inverted;\n          var result = scan(tryInvertedFirst ? inverted : binarized);\n          if (\n            !result &&\n            (options.inversionAttempts === \"attemptBoth\" ||\n              options.inversionAttempts === \"invertFirst\")\n          ) {\n            result = scan(tryInvertedFirst ? binarized : inverted);\n          }\n          return result;\n        }\n        jsQR.default = jsQR;\n        exports.default = jsQR;\n\n        /***/\n      },\n      /* 4 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        var BitMatrix_1 = __webpack_require__(0);\n        var REGION_SIZE = 8;\n        var MIN_DYNAMIC_RANGE = 24;\n        function numBetween(value, min, max) {\n          return value < min ? min : value > max ? max : value;\n        }\n        // Like BitMatrix but accepts arbitry Uint8 values\n        var Matrix = /** @class */ (function () {\n          function Matrix(width, height) {\n            this.width = width;\n            this.data = new Uint8ClampedArray(width * height);\n          }\n          Matrix.prototype.get = function (x, y) {\n            return this.data[y * this.width + x];\n          };\n          Matrix.prototype.set = function (x, y, value) {\n            this.data[y * this.width + x] = value;\n          };\n          return Matrix;\n        })();\n        function binarize(data, width, height, returnInverted) {\n          if (data.length !== width * height * 4) {\n            throw new Error(\"Malformed data passed to binarizer.\");\n          }\n          // Convert image to greyscale\n          var greyscalePixels = new Matrix(width, height);\n          for (var x = 0; x < width; x++) {\n            for (var y = 0; y < height; y++) {\n              var r = data[(y * width + x) * 4 + 0];\n              var g = data[(y * width + x) * 4 + 1];\n              var b = data[(y * width + x) * 4 + 2];\n              greyscalePixels.set(x, y, 0.2126 * r + 0.7152 * g + 0.0722 * b);\n            }\n          }\n          var horizontalRegionCount = Math.ceil(width / REGION_SIZE);\n          var verticalRegionCount = Math.ceil(height / REGION_SIZE);\n          var blackPoints = new Matrix(\n            horizontalRegionCount,\n            verticalRegionCount\n          );\n          for (\n            var verticalRegion = 0;\n            verticalRegion < verticalRegionCount;\n            verticalRegion++\n          ) {\n            for (\n              var hortizontalRegion = 0;\n              hortizontalRegion < horizontalRegionCount;\n              hortizontalRegion++\n            ) {\n              var sum = 0;\n              var min = Infinity;\n              var max = 0;\n              for (var y = 0; y < REGION_SIZE; y++) {\n                for (var x = 0; x < REGION_SIZE; x++) {\n                  var pixelLumosity = greyscalePixels.get(\n                    hortizontalRegion * REGION_SIZE + x,\n                    verticalRegion * REGION_SIZE + y\n                  );\n                  sum += pixelLumosity;\n                  min = Math.min(min, pixelLumosity);\n                  max = Math.max(max, pixelLumosity);\n                }\n              }\n              var average = sum / Math.pow(REGION_SIZE, 2);\n              if (max - min <= MIN_DYNAMIC_RANGE) {\n                // If variation within the block is low, assume this is a block with only light or only\n                // dark pixels. In that case we do not want to use the average, as it would divide this\n                // low contrast area into black and white pixels, essentially creating data out of noise.\n                //\n                // Default the blackpoint for these blocks to be half the min - effectively white them out\n                average = min / 2;\n                if (verticalRegion > 0 && hortizontalRegion > 0) {\n                  // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n                  // the pixels in this block to the previously calculated black points. This is based on\n                  // the fact that dark barcode symbology is always surrounded by some amount of light\n                  // background for which reasonable black point estimates were made. The bp estimated at\n                  // the boundaries is used for the interior.\n                  // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n                  var averageNeighborBlackPoint =\n                    (blackPoints.get(hortizontalRegion, verticalRegion - 1) +\n                      2 *\n                        blackPoints.get(hortizontalRegion - 1, verticalRegion) +\n                      blackPoints.get(\n                        hortizontalRegion - 1,\n                        verticalRegion - 1\n                      )) /\n                    4;\n                  if (min < averageNeighborBlackPoint) {\n                    average = averageNeighborBlackPoint;\n                  }\n                }\n              }\n              blackPoints.set(hortizontalRegion, verticalRegion, average);\n            }\n          }\n          var binarized = BitMatrix_1.BitMatrix.createEmpty(width, height);\n          var inverted = null;\n          if (returnInverted) {\n            inverted = BitMatrix_1.BitMatrix.createEmpty(width, height);\n          }\n          for (\n            var verticalRegion = 0;\n            verticalRegion < verticalRegionCount;\n            verticalRegion++\n          ) {\n            for (\n              var hortizontalRegion = 0;\n              hortizontalRegion < horizontalRegionCount;\n              hortizontalRegion++\n            ) {\n              var left = numBetween(\n                hortizontalRegion,\n                2,\n                horizontalRegionCount - 3\n              );\n              var top_1 = numBetween(\n                verticalRegion,\n                2,\n                verticalRegionCount - 3\n              );\n              var sum = 0;\n              for (var xRegion = -2; xRegion <= 2; xRegion++) {\n                for (var yRegion = -2; yRegion <= 2; yRegion++) {\n                  sum += blackPoints.get(left + xRegion, top_1 + yRegion);\n                }\n              }\n              var threshold = sum / 25;\n              for (var xRegion = 0; xRegion < REGION_SIZE; xRegion++) {\n                for (var yRegion = 0; yRegion < REGION_SIZE; yRegion++) {\n                  var x = hortizontalRegion * REGION_SIZE + xRegion;\n                  var y = verticalRegion * REGION_SIZE + yRegion;\n                  var lum = greyscalePixels.get(x, y);\n                  binarized.set(x, y, lum <= threshold);\n                  if (returnInverted) {\n                    inverted.set(x, y, !(lum <= threshold));\n                  }\n                }\n              }\n            }\n          }\n          if (returnInverted) {\n            return { binarized: binarized, inverted: inverted };\n          }\n          return { binarized: binarized };\n        }\n        exports.binarize = binarize;\n\n        /***/\n      },\n      /* 5 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        var BitMatrix_1 = __webpack_require__(0);\n        var decodeData_1 = __webpack_require__(6);\n        var reedsolomon_1 = __webpack_require__(9);\n        var version_1 = __webpack_require__(10);\n        // tslint:disable:no-bitwise\n        function numBitsDiffering(x, y) {\n          var z = x ^ y;\n          var bitCount = 0;\n          while (z) {\n            bitCount++;\n            z &= z - 1;\n          }\n          return bitCount;\n        }\n        function pushBit(bit, byte) {\n          return (byte << 1) | bit;\n        }\n        // tslint:enable:no-bitwise\n        var FORMAT_INFO_TABLE = [\n          {\n            bits: 0x5412,\n            formatInfo: { errorCorrectionLevel: 1, dataMask: 0 },\n          },\n          {\n            bits: 0x5125,\n            formatInfo: { errorCorrectionLevel: 1, dataMask: 1 },\n          },\n          {\n            bits: 0x5e7c,\n            formatInfo: { errorCorrectionLevel: 1, dataMask: 2 },\n          },\n          {\n            bits: 0x5b4b,\n            formatInfo: { errorCorrectionLevel: 1, dataMask: 3 },\n          },\n          {\n            bits: 0x45f9,\n            formatInfo: { errorCorrectionLevel: 1, dataMask: 4 },\n          },\n          {\n            bits: 0x40ce,\n            formatInfo: { errorCorrectionLevel: 1, dataMask: 5 },\n          },\n          {\n            bits: 0x4f97,\n            formatInfo: { errorCorrectionLevel: 1, dataMask: 6 },\n          },\n          {\n            bits: 0x4aa0,\n            formatInfo: { errorCorrectionLevel: 1, dataMask: 7 },\n          },\n          {\n            bits: 0x77c4,\n            formatInfo: { errorCorrectionLevel: 0, dataMask: 0 },\n          },\n          {\n            bits: 0x72f3,\n            formatInfo: { errorCorrectionLevel: 0, dataMask: 1 },\n          },\n          {\n            bits: 0x7daa,\n            formatInfo: { errorCorrectionLevel: 0, dataMask: 2 },\n          },\n          {\n            bits: 0x789d,\n            formatInfo: { errorCorrectionLevel: 0, dataMask: 3 },\n          },\n          {\n            bits: 0x662f,\n            formatInfo: { errorCorrectionLevel: 0, dataMask: 4 },\n          },\n          {\n            bits: 0x6318,\n            formatInfo: { errorCorrectionLevel: 0, dataMask: 5 },\n          },\n          {\n            bits: 0x6c41,\n            formatInfo: { errorCorrectionLevel: 0, dataMask: 6 },\n          },\n          {\n            bits: 0x6976,\n            formatInfo: { errorCorrectionLevel: 0, dataMask: 7 },\n          },\n          {\n            bits: 0x1689,\n            formatInfo: { errorCorrectionLevel: 3, dataMask: 0 },\n          },\n          {\n            bits: 0x13be,\n            formatInfo: { errorCorrectionLevel: 3, dataMask: 1 },\n          },\n          {\n            bits: 0x1ce7,\n            formatInfo: { errorCorrectionLevel: 3, dataMask: 2 },\n          },\n          {\n            bits: 0x19d0,\n            formatInfo: { errorCorrectionLevel: 3, dataMask: 3 },\n          },\n          {\n            bits: 0x0762,\n            formatInfo: { errorCorrectionLevel: 3, dataMask: 4 },\n          },\n          {\n            bits: 0x0255,\n            formatInfo: { errorCorrectionLevel: 3, dataMask: 5 },\n          },\n          {\n            bits: 0x0d0c,\n            formatInfo: { errorCorrectionLevel: 3, dataMask: 6 },\n          },\n          {\n            bits: 0x083b,\n            formatInfo: { errorCorrectionLevel: 3, dataMask: 7 },\n          },\n          {\n            bits: 0x355f,\n            formatInfo: { errorCorrectionLevel: 2, dataMask: 0 },\n          },\n          {\n            bits: 0x3068,\n            formatInfo: { errorCorrectionLevel: 2, dataMask: 1 },\n          },\n          {\n            bits: 0x3f31,\n            formatInfo: { errorCorrectionLevel: 2, dataMask: 2 },\n          },\n          {\n            bits: 0x3a06,\n            formatInfo: { errorCorrectionLevel: 2, dataMask: 3 },\n          },\n          {\n            bits: 0x24b4,\n            formatInfo: { errorCorrectionLevel: 2, dataMask: 4 },\n          },\n          {\n            bits: 0x2183,\n            formatInfo: { errorCorrectionLevel: 2, dataMask: 5 },\n          },\n          {\n            bits: 0x2eda,\n            formatInfo: { errorCorrectionLevel: 2, dataMask: 6 },\n          },\n          {\n            bits: 0x2bed,\n            formatInfo: { errorCorrectionLevel: 2, dataMask: 7 },\n          },\n        ];\n        var DATA_MASKS = [\n          function (p) {\n            return (p.y + p.x) % 2 === 0;\n          },\n          function (p) {\n            return p.y % 2 === 0;\n          },\n          function (p) {\n            return p.x % 3 === 0;\n          },\n          function (p) {\n            return (p.y + p.x) % 3 === 0;\n          },\n          function (p) {\n            return (Math.floor(p.y / 2) + Math.floor(p.x / 3)) % 2 === 0;\n          },\n          function (p) {\n            return ((p.x * p.y) % 2) + ((p.x * p.y) % 3) === 0;\n          },\n          function (p) {\n            return (((p.y * p.x) % 2) + ((p.y * p.x) % 3)) % 2 === 0;\n          },\n          function (p) {\n            return (((p.y + p.x) % 2) + ((p.y * p.x) % 3)) % 2 === 0;\n          },\n        ];\n        function buildFunctionPatternMask(version) {\n          var dimension = 17 + 4 * version.versionNumber;\n          var matrix = BitMatrix_1.BitMatrix.createEmpty(dimension, dimension);\n          matrix.setRegion(0, 0, 9, 9, true); // Top left finder pattern + separator + format\n          matrix.setRegion(dimension - 8, 0, 8, 9, true); // Top right finder pattern + separator + format\n          matrix.setRegion(0, dimension - 8, 9, 8, true); // Bottom left finder pattern + separator + format\n          // Alignment patterns\n          for (\n            var _i = 0, _a = version.alignmentPatternCenters;\n            _i < _a.length;\n            _i++\n          ) {\n            var x = _a[_i];\n            for (\n              var _b = 0, _c = version.alignmentPatternCenters;\n              _b < _c.length;\n              _b++\n            ) {\n              var y = _c[_b];\n              if (\n                !(\n                  (x === 6 && y === 6) ||\n                  (x === 6 && y === dimension - 7) ||\n                  (x === dimension - 7 && y === 6)\n                )\n              ) {\n                matrix.setRegion(x - 2, y - 2, 5, 5, true);\n              }\n            }\n          }\n          matrix.setRegion(6, 9, 1, dimension - 17, true); // Vertical timing pattern\n          matrix.setRegion(9, 6, dimension - 17, 1, true); // Horizontal timing pattern\n          if (version.versionNumber > 6) {\n            matrix.setRegion(dimension - 11, 0, 3, 6, true); // Version info, top right\n            matrix.setRegion(0, dimension - 11, 6, 3, true); // Version info, bottom left\n          }\n          return matrix;\n        }\n        function readCodewords(matrix, version, formatInfo) {\n          var dataMask = DATA_MASKS[formatInfo.dataMask];\n          var dimension = matrix.height;\n          var functionPatternMask = buildFunctionPatternMask(version);\n          var codewords = [];\n          var currentByte = 0;\n          var bitsRead = 0;\n          // Read columns in pairs, from right to left\n          var readingUp = true;\n          for (\n            var columnIndex = dimension - 1;\n            columnIndex > 0;\n            columnIndex -= 2\n          ) {\n            if (columnIndex === 6) {\n              // Skip whole column with vertical alignment pattern;\n              columnIndex--;\n            }\n            for (var i = 0; i < dimension; i++) {\n              var y = readingUp ? dimension - 1 - i : i;\n              for (var columnOffset = 0; columnOffset < 2; columnOffset++) {\n                var x = columnIndex - columnOffset;\n                if (!functionPatternMask.get(x, y)) {\n                  bitsRead++;\n                  var bit = matrix.get(x, y);\n                  if (dataMask({ y: y, x: x })) {\n                    bit = !bit;\n                  }\n                  currentByte = pushBit(bit, currentByte);\n                  if (bitsRead === 8) {\n                    // Whole bytes\n                    codewords.push(currentByte);\n                    bitsRead = 0;\n                    currentByte = 0;\n                  }\n                }\n              }\n            }\n            readingUp = !readingUp;\n          }\n          return codewords;\n        }\n        function readVersion(matrix) {\n          var dimension = matrix.height;\n          var provisionalVersion = Math.floor((dimension - 17) / 4);\n          if (provisionalVersion <= 6) {\n            // 6 and under dont have version info in the QR code\n            return version_1.VERSIONS[provisionalVersion - 1];\n          }\n          var topRightVersionBits = 0;\n          for (var y = 5; y >= 0; y--) {\n            for (var x = dimension - 9; x >= dimension - 11; x--) {\n              topRightVersionBits = pushBit(\n                matrix.get(x, y),\n                topRightVersionBits\n              );\n            }\n          }\n          var bottomLeftVersionBits = 0;\n          for (var x = 5; x >= 0; x--) {\n            for (var y = dimension - 9; y >= dimension - 11; y--) {\n              bottomLeftVersionBits = pushBit(\n                matrix.get(x, y),\n                bottomLeftVersionBits\n              );\n            }\n          }\n          var bestDifference = Infinity;\n          var bestVersion;\n          for (\n            var _i = 0, VERSIONS_1 = version_1.VERSIONS;\n            _i < VERSIONS_1.length;\n            _i++\n          ) {\n            var version = VERSIONS_1[_i];\n            if (\n              version.infoBits === topRightVersionBits ||\n              version.infoBits === bottomLeftVersionBits\n            ) {\n              return version;\n            }\n            var difference = numBitsDiffering(\n              topRightVersionBits,\n              version.infoBits\n            );\n            if (difference < bestDifference) {\n              bestVersion = version;\n              bestDifference = difference;\n            }\n            difference = numBitsDiffering(\n              bottomLeftVersionBits,\n              version.infoBits\n            );\n            if (difference < bestDifference) {\n              bestVersion = version;\n              bestDifference = difference;\n            }\n          }\n          // We can tolerate up to 3 bits of error since no two version info codewords will\n          // differ in less than 8 bits.\n          if (bestDifference <= 3) {\n            return bestVersion;\n          }\n        }\n        function readFormatInformation(matrix) {\n          var topLeftFormatInfoBits = 0;\n          for (var x = 0; x <= 8; x++) {\n            if (x !== 6) {\n              // Skip timing pattern bit\n              topLeftFormatInfoBits = pushBit(\n                matrix.get(x, 8),\n                topLeftFormatInfoBits\n              );\n            }\n          }\n          for (var y = 7; y >= 0; y--) {\n            if (y !== 6) {\n              // Skip timing pattern bit\n              topLeftFormatInfoBits = pushBit(\n                matrix.get(8, y),\n                topLeftFormatInfoBits\n              );\n            }\n          }\n          var dimension = matrix.height;\n          var topRightBottomRightFormatInfoBits = 0;\n          for (var y = dimension - 1; y >= dimension - 7; y--) {\n            // bottom left\n            topRightBottomRightFormatInfoBits = pushBit(\n              matrix.get(8, y),\n              topRightBottomRightFormatInfoBits\n            );\n          }\n          for (var x = dimension - 8; x < dimension; x++) {\n            // top right\n            topRightBottomRightFormatInfoBits = pushBit(\n              matrix.get(x, 8),\n              topRightBottomRightFormatInfoBits\n            );\n          }\n          var bestDifference = Infinity;\n          var bestFormatInfo = null;\n          for (\n            var _i = 0, FORMAT_INFO_TABLE_1 = FORMAT_INFO_TABLE;\n            _i < FORMAT_INFO_TABLE_1.length;\n            _i++\n          ) {\n            var _a = FORMAT_INFO_TABLE_1[_i],\n              bits = _a.bits,\n              formatInfo = _a.formatInfo;\n            if (\n              bits === topLeftFormatInfoBits ||\n              bits === topRightBottomRightFormatInfoBits\n            ) {\n              return formatInfo;\n            }\n            var difference = numBitsDiffering(topLeftFormatInfoBits, bits);\n            if (difference < bestDifference) {\n              bestFormatInfo = formatInfo;\n              bestDifference = difference;\n            }\n            if (topLeftFormatInfoBits !== topRightBottomRightFormatInfoBits) {\n              // also try the other option\n              difference = numBitsDiffering(\n                topRightBottomRightFormatInfoBits,\n                bits\n              );\n              if (difference < bestDifference) {\n                bestFormatInfo = formatInfo;\n                bestDifference = difference;\n              }\n            }\n          }\n          // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits differing means we found a match\n          if (bestDifference <= 3) {\n            return bestFormatInfo;\n          }\n          return null;\n        }\n        function getDataBlocks(codewords, version, ecLevel) {\n          var ecInfo = version.errorCorrectionLevels[ecLevel];\n          var dataBlocks = [];\n          var totalCodewords = 0;\n          ecInfo.ecBlocks.forEach(function (block) {\n            for (var i = 0; i < block.numBlocks; i++) {\n              dataBlocks.push({\n                numDataCodewords: block.dataCodewordsPerBlock,\n                codewords: [],\n              });\n              totalCodewords +=\n                block.dataCodewordsPerBlock + ecInfo.ecCodewordsPerBlock;\n            }\n          });\n          // In some cases the QR code will be malformed enough that we pull off more or less than we should.\n          // If we pull off less there's nothing we can do.\n          // If we pull off more we can safely truncate\n          if (codewords.length < totalCodewords) {\n            return null;\n          }\n          codewords = codewords.slice(0, totalCodewords);\n          var shortBlockSize = ecInfo.ecBlocks[0].dataCodewordsPerBlock;\n          // Pull codewords to fill the blocks up to the minimum size\n          for (var i = 0; i < shortBlockSize; i++) {\n            for (\n              var _i = 0, dataBlocks_1 = dataBlocks;\n              _i < dataBlocks_1.length;\n              _i++\n            ) {\n              var dataBlock = dataBlocks_1[_i];\n              dataBlock.codewords.push(codewords.shift());\n            }\n          }\n          // If there are any large blocks, pull codewords to fill the last element of those\n          if (ecInfo.ecBlocks.length > 1) {\n            var smallBlockCount = ecInfo.ecBlocks[0].numBlocks;\n            var largeBlockCount = ecInfo.ecBlocks[1].numBlocks;\n            for (var i = 0; i < largeBlockCount; i++) {\n              dataBlocks[smallBlockCount + i].codewords.push(codewords.shift());\n            }\n          }\n          // Add the rest of the codewords to the blocks. These are the error correction codewords.\n          while (codewords.length > 0) {\n            for (\n              var _a = 0, dataBlocks_2 = dataBlocks;\n              _a < dataBlocks_2.length;\n              _a++\n            ) {\n              var dataBlock = dataBlocks_2[_a];\n              dataBlock.codewords.push(codewords.shift());\n            }\n          }\n          return dataBlocks;\n        }\n        function decodeMatrix(matrix) {\n          var version = readVersion(matrix);\n          if (!version) {\n            return null;\n          }\n          var formatInfo = readFormatInformation(matrix);\n          if (!formatInfo) {\n            return null;\n          }\n          var codewords = readCodewords(matrix, version, formatInfo);\n          var dataBlocks = getDataBlocks(\n            codewords,\n            version,\n            formatInfo.errorCorrectionLevel\n          );\n          if (!dataBlocks) {\n            return null;\n          }\n          // Count total number of data bytes\n          var totalBytes = dataBlocks.reduce(function (a, b) {\n            return a + b.numDataCodewords;\n          }, 0);\n          var resultBytes = new Uint8ClampedArray(totalBytes);\n          var resultIndex = 0;\n          for (\n            var _i = 0, dataBlocks_3 = dataBlocks;\n            _i < dataBlocks_3.length;\n            _i++\n          ) {\n            var dataBlock = dataBlocks_3[_i];\n            var correctedBytes = reedsolomon_1.decode(\n              dataBlock.codewords,\n              dataBlock.codewords.length - dataBlock.numDataCodewords\n            );\n            if (!correctedBytes) {\n              return null;\n            }\n            for (var i = 0; i < dataBlock.numDataCodewords; i++) {\n              resultBytes[resultIndex++] = correctedBytes[i];\n            }\n          }\n          try {\n            return decodeData_1.decode(resultBytes, version.versionNumber);\n          } catch (_a) {\n            return null;\n          }\n        }\n        function decode(matrix) {\n          if (matrix == null) {\n            return null;\n          }\n          var result = decodeMatrix(matrix);\n          if (result) {\n            return result;\n          }\n          // Decoding didn't work, try mirroring the QR across the topLeft -> bottomRight line.\n          for (var x = 0; x < matrix.width; x++) {\n            for (var y = x + 1; y < matrix.height; y++) {\n              if (matrix.get(x, y) !== matrix.get(y, x)) {\n                matrix.set(x, y, !matrix.get(x, y));\n                matrix.set(y, x, !matrix.get(y, x));\n              }\n            }\n          }\n          return decodeMatrix(matrix);\n        }\n        exports.decode = decode;\n\n        /***/\n      },\n      /* 6 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        // tslint:disable:no-bitwise\n        var BitStream_1 = __webpack_require__(7);\n        var shiftJISTable_1 = __webpack_require__(8);\n        var Mode;\n        (function (Mode) {\n          Mode[\"Numeric\"] = \"numeric\";\n          Mode[\"Alphanumeric\"] = \"alphanumeric\";\n          Mode[\"Byte\"] = \"byte\";\n          Mode[\"Kanji\"] = \"kanji\";\n          Mode[\"ECI\"] = \"eci\";\n        })((Mode = exports.Mode || (exports.Mode = {})));\n        var ModeByte;\n        (function (ModeByte) {\n          ModeByte[(ModeByte[\"Terminator\"] = 0)] = \"Terminator\";\n          ModeByte[(ModeByte[\"Numeric\"] = 1)] = \"Numeric\";\n          ModeByte[(ModeByte[\"Alphanumeric\"] = 2)] = \"Alphanumeric\";\n          ModeByte[(ModeByte[\"Byte\"] = 4)] = \"Byte\";\n          ModeByte[(ModeByte[\"Kanji\"] = 8)] = \"Kanji\";\n          ModeByte[(ModeByte[\"ECI\"] = 7)] = \"ECI\";\n          // StructuredAppend = 0x3,\n          // FNC1FirstPosition = 0x5,\n          // FNC1SecondPosition = 0x9,\n        })(ModeByte || (ModeByte = {}));\n        function decodeNumeric(stream, size) {\n          var bytes = [];\n          var text = \"\";\n          var characterCountSize = [10, 12, 14][size];\n          var length = stream.readBits(characterCountSize);\n          // Read digits in groups of 3\n          while (length >= 3) {\n            var num = stream.readBits(10);\n            if (num >= 1000) {\n              throw new Error(\"Invalid numeric value above 999\");\n            }\n            var a = Math.floor(num / 100);\n            var b = Math.floor(num / 10) % 10;\n            var c = num % 10;\n            bytes.push(48 + a, 48 + b, 48 + c);\n            text += a.toString() + b.toString() + c.toString();\n            length -= 3;\n          }\n          // If the number of digits aren't a multiple of 3, the remaining digits are special cased.\n          if (length === 2) {\n            var num = stream.readBits(7);\n            if (num >= 100) {\n              throw new Error(\"Invalid numeric value above 99\");\n            }\n            var a = Math.floor(num / 10);\n            var b = num % 10;\n            bytes.push(48 + a, 48 + b);\n            text += a.toString() + b.toString();\n          } else if (length === 1) {\n            var num = stream.readBits(4);\n            if (num >= 10) {\n              throw new Error(\"Invalid numeric value above 9\");\n            }\n            bytes.push(48 + num);\n            text += num.toString();\n          }\n          return { bytes: bytes, text: text };\n        }\n        var AlphanumericCharacterCodes = [\n          \"0\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\",\n          \"5\",\n          \"6\",\n          \"7\",\n          \"8\",\n          \"9\",\n          \"A\",\n          \"B\",\n          \"C\",\n          \"D\",\n          \"E\",\n          \"F\",\n          \"G\",\n          \"H\",\n          \"I\",\n          \"J\",\n          \"K\",\n          \"L\",\n          \"M\",\n          \"N\",\n          \"O\",\n          \"P\",\n          \"Q\",\n          \"R\",\n          \"S\",\n          \"T\",\n          \"U\",\n          \"V\",\n          \"W\",\n          \"X\",\n          \"Y\",\n          \"Z\",\n          \" \",\n          \"$\",\n          \"%\",\n          \"*\",\n          \"+\",\n          \"-\",\n          \".\",\n          \"/\",\n          \":\",\n        ];\n        function decodeAlphanumeric(stream, size) {\n          var bytes = [];\n          var text = \"\";\n          var characterCountSize = [9, 11, 13][size];\n          var length = stream.readBits(characterCountSize);\n          while (length >= 2) {\n            var v = stream.readBits(11);\n            var a = Math.floor(v / 45);\n            var b = v % 45;\n            bytes.push(\n              AlphanumericCharacterCodes[a].charCodeAt(0),\n              AlphanumericCharacterCodes[b].charCodeAt(0)\n            );\n            text +=\n              AlphanumericCharacterCodes[a] + AlphanumericCharacterCodes[b];\n            length -= 2;\n          }\n          if (length === 1) {\n            var a = stream.readBits(6);\n            bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0));\n            text += AlphanumericCharacterCodes[a];\n          }\n          return { bytes: bytes, text: text };\n        }\n        function decodeByte(stream, size) {\n          var bytes = [];\n          var text = \"\";\n          var characterCountSize = [8, 16, 16][size];\n          var length = stream.readBits(characterCountSize);\n          for (var i = 0; i < length; i++) {\n            var b = stream.readBits(8);\n            bytes.push(b);\n          }\n          try {\n            text += decodeURIComponent(\n              bytes\n                .map(function (b) {\n                  return \"%\" + (\"0\" + b.toString(16)).substr(-2);\n                })\n                .join(\"\")\n            );\n          } catch (_a) {\n            // failed to decode\n          }\n          return { bytes: bytes, text: text };\n        }\n        function decodeKanji(stream, size) {\n          var bytes = [];\n          var text = \"\";\n          var characterCountSize = [8, 10, 12][size];\n          var length = stream.readBits(characterCountSize);\n          for (var i = 0; i < length; i++) {\n            var k = stream.readBits(13);\n            var c = (Math.floor(k / 0xc0) << 8) | k % 0xc0;\n            if (c < 0x1f00) {\n              c += 0x8140;\n            } else {\n              c += 0xc140;\n            }\n            bytes.push(c >> 8, c & 0xff);\n            text += String.fromCharCode(shiftJISTable_1.shiftJISTable[c]);\n          }\n          return { bytes: bytes, text: text };\n        }\n        function decode(data, version) {\n          var _a, _b, _c, _d;\n          var stream = new BitStream_1.BitStream(data);\n          // There are 3 'sizes' based on the version. 1-9 is small (0), 10-26 is medium (1) and 27-40 is large (2).\n          var size = version <= 9 ? 0 : version <= 26 ? 1 : 2;\n          var result = {\n            text: \"\",\n            bytes: [],\n            chunks: [],\n          };\n          while (stream.available() >= 4) {\n            var mode = stream.readBits(4);\n            if (mode === ModeByte.Terminator) {\n              return result;\n            } else if (mode === ModeByte.ECI) {\n              if (stream.readBits(1) === 0) {\n                result.chunks.push({\n                  type: Mode.ECI,\n                  assignmentNumber: stream.readBits(7),\n                });\n              } else if (stream.readBits(1) === 0) {\n                result.chunks.push({\n                  type: Mode.ECI,\n                  assignmentNumber: stream.readBits(14),\n                });\n              } else if (stream.readBits(1) === 0) {\n                result.chunks.push({\n                  type: Mode.ECI,\n                  assignmentNumber: stream.readBits(21),\n                });\n              } else {\n                // ECI data seems corrupted\n                result.chunks.push({\n                  type: Mode.ECI,\n                  assignmentNumber: -1,\n                });\n              }\n            } else if (mode === ModeByte.Numeric) {\n              var numericResult = decodeNumeric(stream, size);\n              result.text += numericResult.text;\n              (_a = result.bytes).push.apply(_a, numericResult.bytes);\n              result.chunks.push({\n                type: Mode.Numeric,\n                text: numericResult.text,\n              });\n            } else if (mode === ModeByte.Alphanumeric) {\n              var alphanumericResult = decodeAlphanumeric(stream, size);\n              result.text += alphanumericResult.text;\n              (_b = result.bytes).push.apply(_b, alphanumericResult.bytes);\n              result.chunks.push({\n                type: Mode.Alphanumeric,\n                text: alphanumericResult.text,\n              });\n            } else if (mode === ModeByte.Byte) {\n              var byteResult = decodeByte(stream, size);\n              result.text += byteResult.text;\n              (_c = result.bytes).push.apply(_c, byteResult.bytes);\n              result.chunks.push({\n                type: Mode.Byte,\n                bytes: byteResult.bytes,\n                text: byteResult.text,\n              });\n            } else if (mode === ModeByte.Kanji) {\n              var kanjiResult = decodeKanji(stream, size);\n              result.text += kanjiResult.text;\n              (_d = result.bytes).push.apply(_d, kanjiResult.bytes);\n              result.chunks.push({\n                type: Mode.Kanji,\n                bytes: kanjiResult.bytes,\n                text: kanjiResult.text,\n              });\n            }\n          }\n          // If there is no data left, or the remaining bits are all 0, then that counts as a termination marker\n          if (\n            stream.available() === 0 ||\n            stream.readBits(stream.available()) === 0\n          ) {\n            return result;\n          }\n        }\n        exports.decode = decode;\n\n        /***/\n      },\n      /* 7 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        // tslint:disable:no-bitwise\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        var BitStream = /** @class */ (function () {\n          function BitStream(bytes) {\n            this.byteOffset = 0;\n            this.bitOffset = 0;\n            this.bytes = bytes;\n          }\n          BitStream.prototype.readBits = function (numBits) {\n            if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n              throw new Error(\"Cannot read \" + numBits.toString() + \" bits\");\n            }\n            var result = 0;\n            // First, read remainder from current byte\n            if (this.bitOffset > 0) {\n              var bitsLeft = 8 - this.bitOffset;\n              var toRead = numBits < bitsLeft ? numBits : bitsLeft;\n              var bitsToNotRead = bitsLeft - toRead;\n              var mask = (0xff >> (8 - toRead)) << bitsToNotRead;\n              result = (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\n              numBits -= toRead;\n              this.bitOffset += toRead;\n              if (this.bitOffset === 8) {\n                this.bitOffset = 0;\n                this.byteOffset++;\n              }\n            }\n            // Next read whole bytes\n            if (numBits > 0) {\n              while (numBits >= 8) {\n                result = (result << 8) | (this.bytes[this.byteOffset] & 0xff);\n                this.byteOffset++;\n                numBits -= 8;\n              }\n              // Finally read a partial byte\n              if (numBits > 0) {\n                var bitsToNotRead = 8 - numBits;\n                var mask = (0xff >> bitsToNotRead) << bitsToNotRead;\n                result =\n                  (result << numBits) |\n                  ((this.bytes[this.byteOffset] & mask) >> bitsToNotRead);\n                this.bitOffset += numBits;\n              }\n            }\n            return result;\n          };\n          BitStream.prototype.available = function () {\n            return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n          };\n          return BitStream;\n        })();\n        exports.BitStream = BitStream;\n\n        /***/\n      },\n      /* 8 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        exports.shiftJISTable = {\n          0x20: 0x0020,\n          0x21: 0x0021,\n          0x22: 0x0022,\n          0x23: 0x0023,\n          0x24: 0x0024,\n          0x25: 0x0025,\n          0x26: 0x0026,\n          0x27: 0x0027,\n          0x28: 0x0028,\n          0x29: 0x0029,\n          0x2a: 0x002a,\n          0x2b: 0x002b,\n          0x2c: 0x002c,\n          0x2d: 0x002d,\n          0x2e: 0x002e,\n          0x2f: 0x002f,\n          0x30: 0x0030,\n          0x31: 0x0031,\n          0x32: 0x0032,\n          0x33: 0x0033,\n          0x34: 0x0034,\n          0x35: 0x0035,\n          0x36: 0x0036,\n          0x37: 0x0037,\n          0x38: 0x0038,\n          0x39: 0x0039,\n          0x3a: 0x003a,\n          0x3b: 0x003b,\n          0x3c: 0x003c,\n          0x3d: 0x003d,\n          0x3e: 0x003e,\n          0x3f: 0x003f,\n          0x40: 0x0040,\n          0x41: 0x0041,\n          0x42: 0x0042,\n          0x43: 0x0043,\n          0x44: 0x0044,\n          0x45: 0x0045,\n          0x46: 0x0046,\n          0x47: 0x0047,\n          0x48: 0x0048,\n          0x49: 0x0049,\n          0x4a: 0x004a,\n          0x4b: 0x004b,\n          0x4c: 0x004c,\n          0x4d: 0x004d,\n          0x4e: 0x004e,\n          0x4f: 0x004f,\n          0x50: 0x0050,\n          0x51: 0x0051,\n          0x52: 0x0052,\n          0x53: 0x0053,\n          0x54: 0x0054,\n          0x55: 0x0055,\n          0x56: 0x0056,\n          0x57: 0x0057,\n          0x58: 0x0058,\n          0x59: 0x0059,\n          0x5a: 0x005a,\n          0x5b: 0x005b,\n          0x5c: 0x00a5,\n          0x5d: 0x005d,\n          0x5e: 0x005e,\n          0x5f: 0x005f,\n          0x60: 0x0060,\n          0x61: 0x0061,\n          0x62: 0x0062,\n          0x63: 0x0063,\n          0x64: 0x0064,\n          0x65: 0x0065,\n          0x66: 0x0066,\n          0x67: 0x0067,\n          0x68: 0x0068,\n          0x69: 0x0069,\n          0x6a: 0x006a,\n          0x6b: 0x006b,\n          0x6c: 0x006c,\n          0x6d: 0x006d,\n          0x6e: 0x006e,\n          0x6f: 0x006f,\n          0x70: 0x0070,\n          0x71: 0x0071,\n          0x72: 0x0072,\n          0x73: 0x0073,\n          0x74: 0x0074,\n          0x75: 0x0075,\n          0x76: 0x0076,\n          0x77: 0x0077,\n          0x78: 0x0078,\n          0x79: 0x0079,\n          0x7a: 0x007a,\n          0x7b: 0x007b,\n          0x7c: 0x007c,\n          0x7d: 0x007d,\n          0x7e: 0x203e,\n          0x8140: 0x3000,\n          0x8141: 0x3001,\n          0x8142: 0x3002,\n          0x8143: 0xff0c,\n          0x8144: 0xff0e,\n          0x8145: 0x30fb,\n          0x8146: 0xff1a,\n          0x8147: 0xff1b,\n          0x8148: 0xff1f,\n          0x8149: 0xff01,\n          0x814a: 0x309b,\n          0x814b: 0x309c,\n          0x814c: 0x00b4,\n          0x814d: 0xff40,\n          0x814e: 0x00a8,\n          0x814f: 0xff3e,\n          0x8150: 0xffe3,\n          0x8151: 0xff3f,\n          0x8152: 0x30fd,\n          0x8153: 0x30fe,\n          0x8154: 0x309d,\n          0x8155: 0x309e,\n          0x8156: 0x3003,\n          0x8157: 0x4edd,\n          0x8158: 0x3005,\n          0x8159: 0x3006,\n          0x815a: 0x3007,\n          0x815b: 0x30fc,\n          0x815c: 0x2015,\n          0x815d: 0x2010,\n          0x815e: 0xff0f,\n          0x815f: 0x005c,\n          0x8160: 0x301c,\n          0x8161: 0x2016,\n          0x8162: 0xff5c,\n          0x8163: 0x2026,\n          0x8164: 0x2025,\n          0x8165: 0x2018,\n          0x8166: 0x2019,\n          0x8167: 0x201c,\n          0x8168: 0x201d,\n          0x8169: 0xff08,\n          0x816a: 0xff09,\n          0x816b: 0x3014,\n          0x816c: 0x3015,\n          0x816d: 0xff3b,\n          0x816e: 0xff3d,\n          0x816f: 0xff5b,\n          0x8170: 0xff5d,\n          0x8171: 0x3008,\n          0x8172: 0x3009,\n          0x8173: 0x300a,\n          0x8174: 0x300b,\n          0x8175: 0x300c,\n          0x8176: 0x300d,\n          0x8177: 0x300e,\n          0x8178: 0x300f,\n          0x8179: 0x3010,\n          0x817a: 0x3011,\n          0x817b: 0xff0b,\n          0x817c: 0x2212,\n          0x817d: 0x00b1,\n          0x817e: 0x00d7,\n          0x8180: 0x00f7,\n          0x8181: 0xff1d,\n          0x8182: 0x2260,\n          0x8183: 0xff1c,\n          0x8184: 0xff1e,\n          0x8185: 0x2266,\n          0x8186: 0x2267,\n          0x8187: 0x221e,\n          0x8188: 0x2234,\n          0x8189: 0x2642,\n          0x818a: 0x2640,\n          0x818b: 0x00b0,\n          0x818c: 0x2032,\n          0x818d: 0x2033,\n          0x818e: 0x2103,\n          0x818f: 0xffe5,\n          0x8190: 0xff04,\n          0x8191: 0x00a2,\n          0x8192: 0x00a3,\n          0x8193: 0xff05,\n          0x8194: 0xff03,\n          0x8195: 0xff06,\n          0x8196: 0xff0a,\n          0x8197: 0xff20,\n          0x8198: 0x00a7,\n          0x8199: 0x2606,\n          0x819a: 0x2605,\n          0x819b: 0x25cb,\n          0x819c: 0x25cf,\n          0x819d: 0x25ce,\n          0x819e: 0x25c7,\n          0x819f: 0x25c6,\n          0x81a0: 0x25a1,\n          0x81a1: 0x25a0,\n          0x81a2: 0x25b3,\n          0x81a3: 0x25b2,\n          0x81a4: 0x25bd,\n          0x81a5: 0x25bc,\n          0x81a6: 0x203b,\n          0x81a7: 0x3012,\n          0x81a8: 0x2192,\n          0x81a9: 0x2190,\n          0x81aa: 0x2191,\n          0x81ab: 0x2193,\n          0x81ac: 0x3013,\n          0x81b8: 0x2208,\n          0x81b9: 0x220b,\n          0x81ba: 0x2286,\n          0x81bb: 0x2287,\n          0x81bc: 0x2282,\n          0x81bd: 0x2283,\n          0x81be: 0x222a,\n          0x81bf: 0x2229,\n          0x81c8: 0x2227,\n          0x81c9: 0x2228,\n          0x81ca: 0x00ac,\n          0x81cb: 0x21d2,\n          0x81cc: 0x21d4,\n          0x81cd: 0x2200,\n          0x81ce: 0x2203,\n          0x81da: 0x2220,\n          0x81db: 0x22a5,\n          0x81dc: 0x2312,\n          0x81dd: 0x2202,\n          0x81de: 0x2207,\n          0x81df: 0x2261,\n          0x81e0: 0x2252,\n          0x81e1: 0x226a,\n          0x81e2: 0x226b,\n          0x81e3: 0x221a,\n          0x81e4: 0x223d,\n          0x81e5: 0x221d,\n          0x81e6: 0x2235,\n          0x81e7: 0x222b,\n          0x81e8: 0x222c,\n          0x81f0: 0x212b,\n          0x81f1: 0x2030,\n          0x81f2: 0x266f,\n          0x81f3: 0x266d,\n          0x81f4: 0x266a,\n          0x81f5: 0x2020,\n          0x81f6: 0x2021,\n          0x81f7: 0x00b6,\n          0x81fc: 0x25ef,\n          0x824f: 0xff10,\n          0x8250: 0xff11,\n          0x8251: 0xff12,\n          0x8252: 0xff13,\n          0x8253: 0xff14,\n          0x8254: 0xff15,\n          0x8255: 0xff16,\n          0x8256: 0xff17,\n          0x8257: 0xff18,\n          0x8258: 0xff19,\n          0x8260: 0xff21,\n          0x8261: 0xff22,\n          0x8262: 0xff23,\n          0x8263: 0xff24,\n          0x8264: 0xff25,\n          0x8265: 0xff26,\n          0x8266: 0xff27,\n          0x8267: 0xff28,\n          0x8268: 0xff29,\n          0x8269: 0xff2a,\n          0x826a: 0xff2b,\n          0x826b: 0xff2c,\n          0x826c: 0xff2d,\n          0x826d: 0xff2e,\n          0x826e: 0xff2f,\n          0x826f: 0xff30,\n          0x8270: 0xff31,\n          0x8271: 0xff32,\n          0x8272: 0xff33,\n          0x8273: 0xff34,\n          0x8274: 0xff35,\n          0x8275: 0xff36,\n          0x8276: 0xff37,\n          0x8277: 0xff38,\n          0x8278: 0xff39,\n          0x8279: 0xff3a,\n          0x8281: 0xff41,\n          0x8282: 0xff42,\n          0x8283: 0xff43,\n          0x8284: 0xff44,\n          0x8285: 0xff45,\n          0x8286: 0xff46,\n          0x8287: 0xff47,\n          0x8288: 0xff48,\n          0x8289: 0xff49,\n          0x828a: 0xff4a,\n          0x828b: 0xff4b,\n          0x828c: 0xff4c,\n          0x828d: 0xff4d,\n          0x828e: 0xff4e,\n          0x828f: 0xff4f,\n          0x8290: 0xff50,\n          0x8291: 0xff51,\n          0x8292: 0xff52,\n          0x8293: 0xff53,\n          0x8294: 0xff54,\n          0x8295: 0xff55,\n          0x8296: 0xff56,\n          0x8297: 0xff57,\n          0x8298: 0xff58,\n          0x8299: 0xff59,\n          0x829a: 0xff5a,\n          0x829f: 0x3041,\n          0x82a0: 0x3042,\n          0x82a1: 0x3043,\n          0x82a2: 0x3044,\n          0x82a3: 0x3045,\n          0x82a4: 0x3046,\n          0x82a5: 0x3047,\n          0x82a6: 0x3048,\n          0x82a7: 0x3049,\n          0x82a8: 0x304a,\n          0x82a9: 0x304b,\n          0x82aa: 0x304c,\n          0x82ab: 0x304d,\n          0x82ac: 0x304e,\n          0x82ad: 0x304f,\n          0x82ae: 0x3050,\n          0x82af: 0x3051,\n          0x82b0: 0x3052,\n          0x82b1: 0x3053,\n          0x82b2: 0x3054,\n          0x82b3: 0x3055,\n          0x82b4: 0x3056,\n          0x82b5: 0x3057,\n          0x82b6: 0x3058,\n          0x82b7: 0x3059,\n          0x82b8: 0x305a,\n          0x82b9: 0x305b,\n          0x82ba: 0x305c,\n          0x82bb: 0x305d,\n          0x82bc: 0x305e,\n          0x82bd: 0x305f,\n          0x82be: 0x3060,\n          0x82bf: 0x3061,\n          0x82c0: 0x3062,\n          0x82c1: 0x3063,\n          0x82c2: 0x3064,\n          0x82c3: 0x3065,\n          0x82c4: 0x3066,\n          0x82c5: 0x3067,\n          0x82c6: 0x3068,\n          0x82c7: 0x3069,\n          0x82c8: 0x306a,\n          0x82c9: 0x306b,\n          0x82ca: 0x306c,\n          0x82cb: 0x306d,\n          0x82cc: 0x306e,\n          0x82cd: 0x306f,\n          0x82ce: 0x3070,\n          0x82cf: 0x3071,\n          0x82d0: 0x3072,\n          0x82d1: 0x3073,\n          0x82d2: 0x3074,\n          0x82d3: 0x3075,\n          0x82d4: 0x3076,\n          0x82d5: 0x3077,\n          0x82d6: 0x3078,\n          0x82d7: 0x3079,\n          0x82d8: 0x307a,\n          0x82d9: 0x307b,\n          0x82da: 0x307c,\n          0x82db: 0x307d,\n          0x82dc: 0x307e,\n          0x82dd: 0x307f,\n          0x82de: 0x3080,\n          0x82df: 0x3081,\n          0x82e0: 0x3082,\n          0x82e1: 0x3083,\n          0x82e2: 0x3084,\n          0x82e3: 0x3085,\n          0x82e4: 0x3086,\n          0x82e5: 0x3087,\n          0x82e6: 0x3088,\n          0x82e7: 0x3089,\n          0x82e8: 0x308a,\n          0x82e9: 0x308b,\n          0x82ea: 0x308c,\n          0x82eb: 0x308d,\n          0x82ec: 0x308e,\n          0x82ed: 0x308f,\n          0x82ee: 0x3090,\n          0x82ef: 0x3091,\n          0x82f0: 0x3092,\n          0x82f1: 0x3093,\n          0x8340: 0x30a1,\n          0x8341: 0x30a2,\n          0x8342: 0x30a3,\n          0x8343: 0x30a4,\n          0x8344: 0x30a5,\n          0x8345: 0x30a6,\n          0x8346: 0x30a7,\n          0x8347: 0x30a8,\n          0x8348: 0x30a9,\n          0x8349: 0x30aa,\n          0x834a: 0x30ab,\n          0x834b: 0x30ac,\n          0x834c: 0x30ad,\n          0x834d: 0x30ae,\n          0x834e: 0x30af,\n          0x834f: 0x30b0,\n          0x8350: 0x30b1,\n          0x8351: 0x30b2,\n          0x8352: 0x30b3,\n          0x8353: 0x30b4,\n          0x8354: 0x30b5,\n          0x8355: 0x30b6,\n          0x8356: 0x30b7,\n          0x8357: 0x30b8,\n          0x8358: 0x30b9,\n          0x8359: 0x30ba,\n          0x835a: 0x30bb,\n          0x835b: 0x30bc,\n          0x835c: 0x30bd,\n          0x835d: 0x30be,\n          0x835e: 0x30bf,\n          0x835f: 0x30c0,\n          0x8360: 0x30c1,\n          0x8361: 0x30c2,\n          0x8362: 0x30c3,\n          0x8363: 0x30c4,\n          0x8364: 0x30c5,\n          0x8365: 0x30c6,\n          0x8366: 0x30c7,\n          0x8367: 0x30c8,\n          0x8368: 0x30c9,\n          0x8369: 0x30ca,\n          0x836a: 0x30cb,\n          0x836b: 0x30cc,\n          0x836c: 0x30cd,\n          0x836d: 0x30ce,\n          0x836e: 0x30cf,\n          0x836f: 0x30d0,\n          0x8370: 0x30d1,\n          0x8371: 0x30d2,\n          0x8372: 0x30d3,\n          0x8373: 0x30d4,\n          0x8374: 0x30d5,\n          0x8375: 0x30d6,\n          0x8376: 0x30d7,\n          0x8377: 0x30d8,\n          0x8378: 0x30d9,\n          0x8379: 0x30da,\n          0x837a: 0x30db,\n          0x837b: 0x30dc,\n          0x837c: 0x30dd,\n          0x837d: 0x30de,\n          0x837e: 0x30df,\n          0x8380: 0x30e0,\n          0x8381: 0x30e1,\n          0x8382: 0x30e2,\n          0x8383: 0x30e3,\n          0x8384: 0x30e4,\n          0x8385: 0x30e5,\n          0x8386: 0x30e6,\n          0x8387: 0x30e7,\n          0x8388: 0x30e8,\n          0x8389: 0x30e9,\n          0x838a: 0x30ea,\n          0x838b: 0x30eb,\n          0x838c: 0x30ec,\n          0x838d: 0x30ed,\n          0x838e: 0x30ee,\n          0x838f: 0x30ef,\n          0x8390: 0x30f0,\n          0x8391: 0x30f1,\n          0x8392: 0x30f2,\n          0x8393: 0x30f3,\n          0x8394: 0x30f4,\n          0x8395: 0x30f5,\n          0x8396: 0x30f6,\n          0x839f: 0x0391,\n          0x83a0: 0x0392,\n          0x83a1: 0x0393,\n          0x83a2: 0x0394,\n          0x83a3: 0x0395,\n          0x83a4: 0x0396,\n          0x83a5: 0x0397,\n          0x83a6: 0x0398,\n          0x83a7: 0x0399,\n          0x83a8: 0x039a,\n          0x83a9: 0x039b,\n          0x83aa: 0x039c,\n          0x83ab: 0x039d,\n          0x83ac: 0x039e,\n          0x83ad: 0x039f,\n          0x83ae: 0x03a0,\n          0x83af: 0x03a1,\n          0x83b0: 0x03a3,\n          0x83b1: 0x03a4,\n          0x83b2: 0x03a5,\n          0x83b3: 0x03a6,\n          0x83b4: 0x03a7,\n          0x83b5: 0x03a8,\n          0x83b6: 0x03a9,\n          0x83bf: 0x03b1,\n          0x83c0: 0x03b2,\n          0x83c1: 0x03b3,\n          0x83c2: 0x03b4,\n          0x83c3: 0x03b5,\n          0x83c4: 0x03b6,\n          0x83c5: 0x03b7,\n          0x83c6: 0x03b8,\n          0x83c7: 0x03b9,\n          0x83c8: 0x03ba,\n          0x83c9: 0x03bb,\n          0x83ca: 0x03bc,\n          0x83cb: 0x03bd,\n          0x83cc: 0x03be,\n          0x83cd: 0x03bf,\n          0x83ce: 0x03c0,\n          0x83cf: 0x03c1,\n          0x83d0: 0x03c3,\n          0x83d1: 0x03c4,\n          0x83d2: 0x03c5,\n          0x83d3: 0x03c6,\n          0x83d4: 0x03c7,\n          0x83d5: 0x03c8,\n          0x83d6: 0x03c9,\n          0x8440: 0x0410,\n          0x8441: 0x0411,\n          0x8442: 0x0412,\n          0x8443: 0x0413,\n          0x8444: 0x0414,\n          0x8445: 0x0415,\n          0x8446: 0x0401,\n          0x8447: 0x0416,\n          0x8448: 0x0417,\n          0x8449: 0x0418,\n          0x844a: 0x0419,\n          0x844b: 0x041a,\n          0x844c: 0x041b,\n          0x844d: 0x041c,\n          0x844e: 0x041d,\n          0x844f: 0x041e,\n          0x8450: 0x041f,\n          0x8451: 0x0420,\n          0x8452: 0x0421,\n          0x8453: 0x0422,\n          0x8454: 0x0423,\n          0x8455: 0x0424,\n          0x8456: 0x0425,\n          0x8457: 0x0426,\n          0x8458: 0x0427,\n          0x8459: 0x0428,\n          0x845a: 0x0429,\n          0x845b: 0x042a,\n          0x845c: 0x042b,\n          0x845d: 0x042c,\n          0x845e: 0x042d,\n          0x845f: 0x042e,\n          0x8460: 0x042f,\n          0x8470: 0x0430,\n          0x8471: 0x0431,\n          0x8472: 0x0432,\n          0x8473: 0x0433,\n          0x8474: 0x0434,\n          0x8475: 0x0435,\n          0x8476: 0x0451,\n          0x8477: 0x0436,\n          0x8478: 0x0437,\n          0x8479: 0x0438,\n          0x847a: 0x0439,\n          0x847b: 0x043a,\n          0x847c: 0x043b,\n          0x847d: 0x043c,\n          0x847e: 0x043d,\n          0x8480: 0x043e,\n          0x8481: 0x043f,\n          0x8482: 0x0440,\n          0x8483: 0x0441,\n          0x8484: 0x0442,\n          0x8485: 0x0443,\n          0x8486: 0x0444,\n          0x8487: 0x0445,\n          0x8488: 0x0446,\n          0x8489: 0x0447,\n          0x848a: 0x0448,\n          0x848b: 0x0449,\n          0x848c: 0x044a,\n          0x848d: 0x044b,\n          0x848e: 0x044c,\n          0x848f: 0x044d,\n          0x8490: 0x044e,\n          0x8491: 0x044f,\n          0x849f: 0x2500,\n          0x84a0: 0x2502,\n          0x84a1: 0x250c,\n          0x84a2: 0x2510,\n          0x84a3: 0x2518,\n          0x84a4: 0x2514,\n          0x84a5: 0x251c,\n          0x84a6: 0x252c,\n          0x84a7: 0x2524,\n          0x84a8: 0x2534,\n          0x84a9: 0x253c,\n          0x84aa: 0x2501,\n          0x84ab: 0x2503,\n          0x84ac: 0x250f,\n          0x84ad: 0x2513,\n          0x84ae: 0x251b,\n          0x84af: 0x2517,\n          0x84b0: 0x2523,\n          0x84b1: 0x2533,\n          0x84b2: 0x252b,\n          0x84b3: 0x253b,\n          0x84b4: 0x254b,\n          0x84b5: 0x2520,\n          0x84b6: 0x252f,\n          0x84b7: 0x2528,\n          0x84b8: 0x2537,\n          0x84b9: 0x253f,\n          0x84ba: 0x251d,\n          0x84bb: 0x2530,\n          0x84bc: 0x2525,\n          0x84bd: 0x2538,\n          0x84be: 0x2542,\n          0x889f: 0x4e9c,\n          0x88a0: 0x5516,\n          0x88a1: 0x5a03,\n          0x88a2: 0x963f,\n          0x88a3: 0x54c0,\n          0x88a4: 0x611b,\n          0x88a5: 0x6328,\n          0x88a6: 0x59f6,\n          0x88a7: 0x9022,\n          0x88a8: 0x8475,\n          0x88a9: 0x831c,\n          0x88aa: 0x7a50,\n          0x88ab: 0x60aa,\n          0x88ac: 0x63e1,\n          0x88ad: 0x6e25,\n          0x88ae: 0x65ed,\n          0x88af: 0x8466,\n          0x88b0: 0x82a6,\n          0x88b1: 0x9bf5,\n          0x88b2: 0x6893,\n          0x88b3: 0x5727,\n          0x88b4: 0x65a1,\n          0x88b5: 0x6271,\n          0x88b6: 0x5b9b,\n          0x88b7: 0x59d0,\n          0x88b8: 0x867b,\n          0x88b9: 0x98f4,\n          0x88ba: 0x7d62,\n          0x88bb: 0x7dbe,\n          0x88bc: 0x9b8e,\n          0x88bd: 0x6216,\n          0x88be: 0x7c9f,\n          0x88bf: 0x88b7,\n          0x88c0: 0x5b89,\n          0x88c1: 0x5eb5,\n          0x88c2: 0x6309,\n          0x88c3: 0x6697,\n          0x88c4: 0x6848,\n          0x88c5: 0x95c7,\n          0x88c6: 0x978d,\n          0x88c7: 0x674f,\n          0x88c8: 0x4ee5,\n          0x88c9: 0x4f0a,\n          0x88ca: 0x4f4d,\n          0x88cb: 0x4f9d,\n          0x88cc: 0x5049,\n          0x88cd: 0x56f2,\n          0x88ce: 0x5937,\n          0x88cf: 0x59d4,\n          0x88d0: 0x5a01,\n          0x88d1: 0x5c09,\n          0x88d2: 0x60df,\n          0x88d3: 0x610f,\n          0x88d4: 0x6170,\n          0x88d5: 0x6613,\n          0x88d6: 0x6905,\n          0x88d7: 0x70ba,\n          0x88d8: 0x754f,\n          0x88d9: 0x7570,\n          0x88da: 0x79fb,\n          0x88db: 0x7dad,\n          0x88dc: 0x7def,\n          0x88dd: 0x80c3,\n          0x88de: 0x840e,\n          0x88df: 0x8863,\n          0x88e0: 0x8b02,\n          0x88e1: 0x9055,\n          0x88e2: 0x907a,\n          0x88e3: 0x533b,\n          0x88e4: 0x4e95,\n          0x88e5: 0x4ea5,\n          0x88e6: 0x57df,\n          0x88e7: 0x80b2,\n          0x88e8: 0x90c1,\n          0x88e9: 0x78ef,\n          0x88ea: 0x4e00,\n          0x88eb: 0x58f1,\n          0x88ec: 0x6ea2,\n          0x88ed: 0x9038,\n          0x88ee: 0x7a32,\n          0x88ef: 0x8328,\n          0x88f0: 0x828b,\n          0x88f1: 0x9c2f,\n          0x88f2: 0x5141,\n          0x88f3: 0x5370,\n          0x88f4: 0x54bd,\n          0x88f5: 0x54e1,\n          0x88f6: 0x56e0,\n          0x88f7: 0x59fb,\n          0x88f8: 0x5f15,\n          0x88f9: 0x98f2,\n          0x88fa: 0x6deb,\n          0x88fb: 0x80e4,\n          0x88fc: 0x852d,\n          0x8940: 0x9662,\n          0x8941: 0x9670,\n          0x8942: 0x96a0,\n          0x8943: 0x97fb,\n          0x8944: 0x540b,\n          0x8945: 0x53f3,\n          0x8946: 0x5b87,\n          0x8947: 0x70cf,\n          0x8948: 0x7fbd,\n          0x8949: 0x8fc2,\n          0x894a: 0x96e8,\n          0x894b: 0x536f,\n          0x894c: 0x9d5c,\n          0x894d: 0x7aba,\n          0x894e: 0x4e11,\n          0x894f: 0x7893,\n          0x8950: 0x81fc,\n          0x8951: 0x6e26,\n          0x8952: 0x5618,\n          0x8953: 0x5504,\n          0x8954: 0x6b1d,\n          0x8955: 0x851a,\n          0x8956: 0x9c3b,\n          0x8957: 0x59e5,\n          0x8958: 0x53a9,\n          0x8959: 0x6d66,\n          0x895a: 0x74dc,\n          0x895b: 0x958f,\n          0x895c: 0x5642,\n          0x895d: 0x4e91,\n          0x895e: 0x904b,\n          0x895f: 0x96f2,\n          0x8960: 0x834f,\n          0x8961: 0x990c,\n          0x8962: 0x53e1,\n          0x8963: 0x55b6,\n          0x8964: 0x5b30,\n          0x8965: 0x5f71,\n          0x8966: 0x6620,\n          0x8967: 0x66f3,\n          0x8968: 0x6804,\n          0x8969: 0x6c38,\n          0x896a: 0x6cf3,\n          0x896b: 0x6d29,\n          0x896c: 0x745b,\n          0x896d: 0x76c8,\n          0x896e: 0x7a4e,\n          0x896f: 0x9834,\n          0x8970: 0x82f1,\n          0x8971: 0x885b,\n          0x8972: 0x8a60,\n          0x8973: 0x92ed,\n          0x8974: 0x6db2,\n          0x8975: 0x75ab,\n          0x8976: 0x76ca,\n          0x8977: 0x99c5,\n          0x8978: 0x60a6,\n          0x8979: 0x8b01,\n          0x897a: 0x8d8a,\n          0x897b: 0x95b2,\n          0x897c: 0x698e,\n          0x897d: 0x53ad,\n          0x897e: 0x5186,\n          0x8980: 0x5712,\n          0x8981: 0x5830,\n          0x8982: 0x5944,\n          0x8983: 0x5bb4,\n          0x8984: 0x5ef6,\n          0x8985: 0x6028,\n          0x8986: 0x63a9,\n          0x8987: 0x63f4,\n          0x8988: 0x6cbf,\n          0x8989: 0x6f14,\n          0x898a: 0x708e,\n          0x898b: 0x7114,\n          0x898c: 0x7159,\n          0x898d: 0x71d5,\n          0x898e: 0x733f,\n          0x898f: 0x7e01,\n          0x8990: 0x8276,\n          0x8991: 0x82d1,\n          0x8992: 0x8597,\n          0x8993: 0x9060,\n          0x8994: 0x925b,\n          0x8995: 0x9d1b,\n          0x8996: 0x5869,\n          0x8997: 0x65bc,\n          0x8998: 0x6c5a,\n          0x8999: 0x7525,\n          0x899a: 0x51f9,\n          0x899b: 0x592e,\n          0x899c: 0x5965,\n          0x899d: 0x5f80,\n          0x899e: 0x5fdc,\n          0x899f: 0x62bc,\n          0x89a0: 0x65fa,\n          0x89a1: 0x6a2a,\n          0x89a2: 0x6b27,\n          0x89a3: 0x6bb4,\n          0x89a4: 0x738b,\n          0x89a5: 0x7fc1,\n          0x89a6: 0x8956,\n          0x89a7: 0x9d2c,\n          0x89a8: 0x9d0e,\n          0x89a9: 0x9ec4,\n          0x89aa: 0x5ca1,\n          0x89ab: 0x6c96,\n          0x89ac: 0x837b,\n          0x89ad: 0x5104,\n          0x89ae: 0x5c4b,\n          0x89af: 0x61b6,\n          0x89b0: 0x81c6,\n          0x89b1: 0x6876,\n          0x89b2: 0x7261,\n          0x89b3: 0x4e59,\n          0x89b4: 0x4ffa,\n          0x89b5: 0x5378,\n          0x89b6: 0x6069,\n          0x89b7: 0x6e29,\n          0x89b8: 0x7a4f,\n          0x89b9: 0x97f3,\n          0x89ba: 0x4e0b,\n          0x89bb: 0x5316,\n          0x89bc: 0x4eee,\n          0x89bd: 0x4f55,\n          0x89be: 0x4f3d,\n          0x89bf: 0x4fa1,\n          0x89c0: 0x4f73,\n          0x89c1: 0x52a0,\n          0x89c2: 0x53ef,\n          0x89c3: 0x5609,\n          0x89c4: 0x590f,\n          0x89c5: 0x5ac1,\n          0x89c6: 0x5bb6,\n          0x89c7: 0x5be1,\n          0x89c8: 0x79d1,\n          0x89c9: 0x6687,\n          0x89ca: 0x679c,\n          0x89cb: 0x67b6,\n          0x89cc: 0x6b4c,\n          0x89cd: 0x6cb3,\n          0x89ce: 0x706b,\n          0x89cf: 0x73c2,\n          0x89d0: 0x798d,\n          0x89d1: 0x79be,\n          0x89d2: 0x7a3c,\n          0x89d3: 0x7b87,\n          0x89d4: 0x82b1,\n          0x89d5: 0x82db,\n          0x89d6: 0x8304,\n          0x89d7: 0x8377,\n          0x89d8: 0x83ef,\n          0x89d9: 0x83d3,\n          0x89da: 0x8766,\n          0x89db: 0x8ab2,\n          0x89dc: 0x5629,\n          0x89dd: 0x8ca8,\n          0x89de: 0x8fe6,\n          0x89df: 0x904e,\n          0x89e0: 0x971e,\n          0x89e1: 0x868a,\n          0x89e2: 0x4fc4,\n          0x89e3: 0x5ce8,\n          0x89e4: 0x6211,\n          0x89e5: 0x7259,\n          0x89e6: 0x753b,\n          0x89e7: 0x81e5,\n          0x89e8: 0x82bd,\n          0x89e9: 0x86fe,\n          0x89ea: 0x8cc0,\n          0x89eb: 0x96c5,\n          0x89ec: 0x9913,\n          0x89ed: 0x99d5,\n          0x89ee: 0x4ecb,\n          0x89ef: 0x4f1a,\n          0x89f0: 0x89e3,\n          0x89f1: 0x56de,\n          0x89f2: 0x584a,\n          0x89f3: 0x58ca,\n          0x89f4: 0x5efb,\n          0x89f5: 0x5feb,\n          0x89f6: 0x602a,\n          0x89f7: 0x6094,\n          0x89f8: 0x6062,\n          0x89f9: 0x61d0,\n          0x89fa: 0x6212,\n          0x89fb: 0x62d0,\n          0x89fc: 0x6539,\n          0x8a40: 0x9b41,\n          0x8a41: 0x6666,\n          0x8a42: 0x68b0,\n          0x8a43: 0x6d77,\n          0x8a44: 0x7070,\n          0x8a45: 0x754c,\n          0x8a46: 0x7686,\n          0x8a47: 0x7d75,\n          0x8a48: 0x82a5,\n          0x8a49: 0x87f9,\n          0x8a4a: 0x958b,\n          0x8a4b: 0x968e,\n          0x8a4c: 0x8c9d,\n          0x8a4d: 0x51f1,\n          0x8a4e: 0x52be,\n          0x8a4f: 0x5916,\n          0x8a50: 0x54b3,\n          0x8a51: 0x5bb3,\n          0x8a52: 0x5d16,\n          0x8a53: 0x6168,\n          0x8a54: 0x6982,\n          0x8a55: 0x6daf,\n          0x8a56: 0x788d,\n          0x8a57: 0x84cb,\n          0x8a58: 0x8857,\n          0x8a59: 0x8a72,\n          0x8a5a: 0x93a7,\n          0x8a5b: 0x9ab8,\n          0x8a5c: 0x6d6c,\n          0x8a5d: 0x99a8,\n          0x8a5e: 0x86d9,\n          0x8a5f: 0x57a3,\n          0x8a60: 0x67ff,\n          0x8a61: 0x86ce,\n          0x8a62: 0x920e,\n          0x8a63: 0x5283,\n          0x8a64: 0x5687,\n          0x8a65: 0x5404,\n          0x8a66: 0x5ed3,\n          0x8a67: 0x62e1,\n          0x8a68: 0x64b9,\n          0x8a69: 0x683c,\n          0x8a6a: 0x6838,\n          0x8a6b: 0x6bbb,\n          0x8a6c: 0x7372,\n          0x8a6d: 0x78ba,\n          0x8a6e: 0x7a6b,\n          0x8a6f: 0x899a,\n          0x8a70: 0x89d2,\n          0x8a71: 0x8d6b,\n          0x8a72: 0x8f03,\n          0x8a73: 0x90ed,\n          0x8a74: 0x95a3,\n          0x8a75: 0x9694,\n          0x8a76: 0x9769,\n          0x8a77: 0x5b66,\n          0x8a78: 0x5cb3,\n          0x8a79: 0x697d,\n          0x8a7a: 0x984d,\n          0x8a7b: 0x984e,\n          0x8a7c: 0x639b,\n          0x8a7d: 0x7b20,\n          0x8a7e: 0x6a2b,\n          0x8a80: 0x6a7f,\n          0x8a81: 0x68b6,\n          0x8a82: 0x9c0d,\n          0x8a83: 0x6f5f,\n          0x8a84: 0x5272,\n          0x8a85: 0x559d,\n          0x8a86: 0x6070,\n          0x8a87: 0x62ec,\n          0x8a88: 0x6d3b,\n          0x8a89: 0x6e07,\n          0x8a8a: 0x6ed1,\n          0x8a8b: 0x845b,\n          0x8a8c: 0x8910,\n          0x8a8d: 0x8f44,\n          0x8a8e: 0x4e14,\n          0x8a8f: 0x9c39,\n          0x8a90: 0x53f6,\n          0x8a91: 0x691b,\n          0x8a92: 0x6a3a,\n          0x8a93: 0x9784,\n          0x8a94: 0x682a,\n          0x8a95: 0x515c,\n          0x8a96: 0x7ac3,\n          0x8a97: 0x84b2,\n          0x8a98: 0x91dc,\n          0x8a99: 0x938c,\n          0x8a9a: 0x565b,\n          0x8a9b: 0x9d28,\n          0x8a9c: 0x6822,\n          0x8a9d: 0x8305,\n          0x8a9e: 0x8431,\n          0x8a9f: 0x7ca5,\n          0x8aa0: 0x5208,\n          0x8aa1: 0x82c5,\n          0x8aa2: 0x74e6,\n          0x8aa3: 0x4e7e,\n          0x8aa4: 0x4f83,\n          0x8aa5: 0x51a0,\n          0x8aa6: 0x5bd2,\n          0x8aa7: 0x520a,\n          0x8aa8: 0x52d8,\n          0x8aa9: 0x52e7,\n          0x8aaa: 0x5dfb,\n          0x8aab: 0x559a,\n          0x8aac: 0x582a,\n          0x8aad: 0x59e6,\n          0x8aae: 0x5b8c,\n          0x8aaf: 0x5b98,\n          0x8ab0: 0x5bdb,\n          0x8ab1: 0x5e72,\n          0x8ab2: 0x5e79,\n          0x8ab3: 0x60a3,\n          0x8ab4: 0x611f,\n          0x8ab5: 0x6163,\n          0x8ab6: 0x61be,\n          0x8ab7: 0x63db,\n          0x8ab8: 0x6562,\n          0x8ab9: 0x67d1,\n          0x8aba: 0x6853,\n          0x8abb: 0x68fa,\n          0x8abc: 0x6b3e,\n          0x8abd: 0x6b53,\n          0x8abe: 0x6c57,\n          0x8abf: 0x6f22,\n          0x8ac0: 0x6f97,\n          0x8ac1: 0x6f45,\n          0x8ac2: 0x74b0,\n          0x8ac3: 0x7518,\n          0x8ac4: 0x76e3,\n          0x8ac5: 0x770b,\n          0x8ac6: 0x7aff,\n          0x8ac7: 0x7ba1,\n          0x8ac8: 0x7c21,\n          0x8ac9: 0x7de9,\n          0x8aca: 0x7f36,\n          0x8acb: 0x7ff0,\n          0x8acc: 0x809d,\n          0x8acd: 0x8266,\n          0x8ace: 0x839e,\n          0x8acf: 0x89b3,\n          0x8ad0: 0x8acc,\n          0x8ad1: 0x8cab,\n          0x8ad2: 0x9084,\n          0x8ad3: 0x9451,\n          0x8ad4: 0x9593,\n          0x8ad5: 0x9591,\n          0x8ad6: 0x95a2,\n          0x8ad7: 0x9665,\n          0x8ad8: 0x97d3,\n          0x8ad9: 0x9928,\n          0x8ada: 0x8218,\n          0x8adb: 0x4e38,\n          0x8adc: 0x542b,\n          0x8add: 0x5cb8,\n          0x8ade: 0x5dcc,\n          0x8adf: 0x73a9,\n          0x8ae0: 0x764c,\n          0x8ae1: 0x773c,\n          0x8ae2: 0x5ca9,\n          0x8ae3: 0x7feb,\n          0x8ae4: 0x8d0b,\n          0x8ae5: 0x96c1,\n          0x8ae6: 0x9811,\n          0x8ae7: 0x9854,\n          0x8ae8: 0x9858,\n          0x8ae9: 0x4f01,\n          0x8aea: 0x4f0e,\n          0x8aeb: 0x5371,\n          0x8aec: 0x559c,\n          0x8aed: 0x5668,\n          0x8aee: 0x57fa,\n          0x8aef: 0x5947,\n          0x8af0: 0x5b09,\n          0x8af1: 0x5bc4,\n          0x8af2: 0x5c90,\n          0x8af3: 0x5e0c,\n          0x8af4: 0x5e7e,\n          0x8af5: 0x5fcc,\n          0x8af6: 0x63ee,\n          0x8af7: 0x673a,\n          0x8af8: 0x65d7,\n          0x8af9: 0x65e2,\n          0x8afa: 0x671f,\n          0x8afb: 0x68cb,\n          0x8afc: 0x68c4,\n          0x8b40: 0x6a5f,\n          0x8b41: 0x5e30,\n          0x8b42: 0x6bc5,\n          0x8b43: 0x6c17,\n          0x8b44: 0x6c7d,\n          0x8b45: 0x757f,\n          0x8b46: 0x7948,\n          0x8b47: 0x5b63,\n          0x8b48: 0x7a00,\n          0x8b49: 0x7d00,\n          0x8b4a: 0x5fbd,\n          0x8b4b: 0x898f,\n          0x8b4c: 0x8a18,\n          0x8b4d: 0x8cb4,\n          0x8b4e: 0x8d77,\n          0x8b4f: 0x8ecc,\n          0x8b50: 0x8f1d,\n          0x8b51: 0x98e2,\n          0x8b52: 0x9a0e,\n          0x8b53: 0x9b3c,\n          0x8b54: 0x4e80,\n          0x8b55: 0x507d,\n          0x8b56: 0x5100,\n          0x8b57: 0x5993,\n          0x8b58: 0x5b9c,\n          0x8b59: 0x622f,\n          0x8b5a: 0x6280,\n          0x8b5b: 0x64ec,\n          0x8b5c: 0x6b3a,\n          0x8b5d: 0x72a0,\n          0x8b5e: 0x7591,\n          0x8b5f: 0x7947,\n          0x8b60: 0x7fa9,\n          0x8b61: 0x87fb,\n          0x8b62: 0x8abc,\n          0x8b63: 0x8b70,\n          0x8b64: 0x63ac,\n          0x8b65: 0x83ca,\n          0x8b66: 0x97a0,\n          0x8b67: 0x5409,\n          0x8b68: 0x5403,\n          0x8b69: 0x55ab,\n          0x8b6a: 0x6854,\n          0x8b6b: 0x6a58,\n          0x8b6c: 0x8a70,\n          0x8b6d: 0x7827,\n          0x8b6e: 0x6775,\n          0x8b6f: 0x9ecd,\n          0x8b70: 0x5374,\n          0x8b71: 0x5ba2,\n          0x8b72: 0x811a,\n          0x8b73: 0x8650,\n          0x8b74: 0x9006,\n          0x8b75: 0x4e18,\n          0x8b76: 0x4e45,\n          0x8b77: 0x4ec7,\n          0x8b78: 0x4f11,\n          0x8b79: 0x53ca,\n          0x8b7a: 0x5438,\n          0x8b7b: 0x5bae,\n          0x8b7c: 0x5f13,\n          0x8b7d: 0x6025,\n          0x8b7e: 0x6551,\n          0x8b80: 0x673d,\n          0x8b81: 0x6c42,\n          0x8b82: 0x6c72,\n          0x8b83: 0x6ce3,\n          0x8b84: 0x7078,\n          0x8b85: 0x7403,\n          0x8b86: 0x7a76,\n          0x8b87: 0x7aae,\n          0x8b88: 0x7b08,\n          0x8b89: 0x7d1a,\n          0x8b8a: 0x7cfe,\n          0x8b8b: 0x7d66,\n          0x8b8c: 0x65e7,\n          0x8b8d: 0x725b,\n          0x8b8e: 0x53bb,\n          0x8b8f: 0x5c45,\n          0x8b90: 0x5de8,\n          0x8b91: 0x62d2,\n          0x8b92: 0x62e0,\n          0x8b93: 0x6319,\n          0x8b94: 0x6e20,\n          0x8b95: 0x865a,\n          0x8b96: 0x8a31,\n          0x8b97: 0x8ddd,\n          0x8b98: 0x92f8,\n          0x8b99: 0x6f01,\n          0x8b9a: 0x79a6,\n          0x8b9b: 0x9b5a,\n          0x8b9c: 0x4ea8,\n          0x8b9d: 0x4eab,\n          0x8b9e: 0x4eac,\n          0x8b9f: 0x4f9b,\n          0x8ba0: 0x4fa0,\n          0x8ba1: 0x50d1,\n          0x8ba2: 0x5147,\n          0x8ba3: 0x7af6,\n          0x8ba4: 0x5171,\n          0x8ba5: 0x51f6,\n          0x8ba6: 0x5354,\n          0x8ba7: 0x5321,\n          0x8ba8: 0x537f,\n          0x8ba9: 0x53eb,\n          0x8baa: 0x55ac,\n          0x8bab: 0x5883,\n          0x8bac: 0x5ce1,\n          0x8bad: 0x5f37,\n          0x8bae: 0x5f4a,\n          0x8baf: 0x602f,\n          0x8bb0: 0x6050,\n          0x8bb1: 0x606d,\n          0x8bb2: 0x631f,\n          0x8bb3: 0x6559,\n          0x8bb4: 0x6a4b,\n          0x8bb5: 0x6cc1,\n          0x8bb6: 0x72c2,\n          0x8bb7: 0x72ed,\n          0x8bb8: 0x77ef,\n          0x8bb9: 0x80f8,\n          0x8bba: 0x8105,\n          0x8bbb: 0x8208,\n          0x8bbc: 0x854e,\n          0x8bbd: 0x90f7,\n          0x8bbe: 0x93e1,\n          0x8bbf: 0x97ff,\n          0x8bc0: 0x9957,\n          0x8bc1: 0x9a5a,\n          0x8bc2: 0x4ef0,\n          0x8bc3: 0x51dd,\n          0x8bc4: 0x5c2d,\n          0x8bc5: 0x6681,\n          0x8bc6: 0x696d,\n          0x8bc7: 0x5c40,\n          0x8bc8: 0x66f2,\n          0x8bc9: 0x6975,\n          0x8bca: 0x7389,\n          0x8bcb: 0x6850,\n          0x8bcc: 0x7c81,\n          0x8bcd: 0x50c5,\n          0x8bce: 0x52e4,\n          0x8bcf: 0x5747,\n          0x8bd0: 0x5dfe,\n          0x8bd1: 0x9326,\n          0x8bd2: 0x65a4,\n          0x8bd3: 0x6b23,\n          0x8bd4: 0x6b3d,\n          0x8bd5: 0x7434,\n          0x8bd6: 0x7981,\n          0x8bd7: 0x79bd,\n          0x8bd8: 0x7b4b,\n          0x8bd9: 0x7dca,\n          0x8bda: 0x82b9,\n          0x8bdb: 0x83cc,\n          0x8bdc: 0x887f,\n          0x8bdd: 0x895f,\n          0x8bde: 0x8b39,\n          0x8bdf: 0x8fd1,\n          0x8be0: 0x91d1,\n          0x8be1: 0x541f,\n          0x8be2: 0x9280,\n          0x8be3: 0x4e5d,\n          0x8be4: 0x5036,\n          0x8be5: 0x53e5,\n          0x8be6: 0x533a,\n          0x8be7: 0x72d7,\n          0x8be8: 0x7396,\n          0x8be9: 0x77e9,\n          0x8bea: 0x82e6,\n          0x8beb: 0x8eaf,\n          0x8bec: 0x99c6,\n          0x8bed: 0x99c8,\n          0x8bee: 0x99d2,\n          0x8bef: 0x5177,\n          0x8bf0: 0x611a,\n          0x8bf1: 0x865e,\n          0x8bf2: 0x55b0,\n          0x8bf3: 0x7a7a,\n          0x8bf4: 0x5076,\n          0x8bf5: 0x5bd3,\n          0x8bf6: 0x9047,\n          0x8bf7: 0x9685,\n          0x8bf8: 0x4e32,\n          0x8bf9: 0x6adb,\n          0x8bfa: 0x91e7,\n          0x8bfb: 0x5c51,\n          0x8bfc: 0x5c48,\n          0x8c40: 0x6398,\n          0x8c41: 0x7a9f,\n          0x8c42: 0x6c93,\n          0x8c43: 0x9774,\n          0x8c44: 0x8f61,\n          0x8c45: 0x7aaa,\n          0x8c46: 0x718a,\n          0x8c47: 0x9688,\n          0x8c48: 0x7c82,\n          0x8c49: 0x6817,\n          0x8c4a: 0x7e70,\n          0x8c4b: 0x6851,\n          0x8c4c: 0x936c,\n          0x8c4d: 0x52f2,\n          0x8c4e: 0x541b,\n          0x8c4f: 0x85ab,\n          0x8c50: 0x8a13,\n          0x8c51: 0x7fa4,\n          0x8c52: 0x8ecd,\n          0x8c53: 0x90e1,\n          0x8c54: 0x5366,\n          0x8c55: 0x8888,\n          0x8c56: 0x7941,\n          0x8c57: 0x4fc2,\n          0x8c58: 0x50be,\n          0x8c59: 0x5211,\n          0x8c5a: 0x5144,\n          0x8c5b: 0x5553,\n          0x8c5c: 0x572d,\n          0x8c5d: 0x73ea,\n          0x8c5e: 0x578b,\n          0x8c5f: 0x5951,\n          0x8c60: 0x5f62,\n          0x8c61: 0x5f84,\n          0x8c62: 0x6075,\n          0x8c63: 0x6176,\n          0x8c64: 0x6167,\n          0x8c65: 0x61a9,\n          0x8c66: 0x63b2,\n          0x8c67: 0x643a,\n          0x8c68: 0x656c,\n          0x8c69: 0x666f,\n          0x8c6a: 0x6842,\n          0x8c6b: 0x6e13,\n          0x8c6c: 0x7566,\n          0x8c6d: 0x7a3d,\n          0x8c6e: 0x7cfb,\n          0x8c6f: 0x7d4c,\n          0x8c70: 0x7d99,\n          0x8c71: 0x7e4b,\n          0x8c72: 0x7f6b,\n          0x8c73: 0x830e,\n          0x8c74: 0x834a,\n          0x8c75: 0x86cd,\n          0x8c76: 0x8a08,\n          0x8c77: 0x8a63,\n          0x8c78: 0x8b66,\n          0x8c79: 0x8efd,\n          0x8c7a: 0x981a,\n          0x8c7b: 0x9d8f,\n          0x8c7c: 0x82b8,\n          0x8c7d: 0x8fce,\n          0x8c7e: 0x9be8,\n          0x8c80: 0x5287,\n          0x8c81: 0x621f,\n          0x8c82: 0x6483,\n          0x8c83: 0x6fc0,\n          0x8c84: 0x9699,\n          0x8c85: 0x6841,\n          0x8c86: 0x5091,\n          0x8c87: 0x6b20,\n          0x8c88: 0x6c7a,\n          0x8c89: 0x6f54,\n          0x8c8a: 0x7a74,\n          0x8c8b: 0x7d50,\n          0x8c8c: 0x8840,\n          0x8c8d: 0x8a23,\n          0x8c8e: 0x6708,\n          0x8c8f: 0x4ef6,\n          0x8c90: 0x5039,\n          0x8c91: 0x5026,\n          0x8c92: 0x5065,\n          0x8c93: 0x517c,\n          0x8c94: 0x5238,\n          0x8c95: 0x5263,\n          0x8c96: 0x55a7,\n          0x8c97: 0x570f,\n          0x8c98: 0x5805,\n          0x8c99: 0x5acc,\n          0x8c9a: 0x5efa,\n          0x8c9b: 0x61b2,\n          0x8c9c: 0x61f8,\n          0x8c9d: 0x62f3,\n          0x8c9e: 0x6372,\n          0x8c9f: 0x691c,\n          0x8ca0: 0x6a29,\n          0x8ca1: 0x727d,\n          0x8ca2: 0x72ac,\n          0x8ca3: 0x732e,\n          0x8ca4: 0x7814,\n          0x8ca5: 0x786f,\n          0x8ca6: 0x7d79,\n          0x8ca7: 0x770c,\n          0x8ca8: 0x80a9,\n          0x8ca9: 0x898b,\n          0x8caa: 0x8b19,\n          0x8cab: 0x8ce2,\n          0x8cac: 0x8ed2,\n          0x8cad: 0x9063,\n          0x8cae: 0x9375,\n          0x8caf: 0x967a,\n          0x8cb0: 0x9855,\n          0x8cb1: 0x9a13,\n          0x8cb2: 0x9e78,\n          0x8cb3: 0x5143,\n          0x8cb4: 0x539f,\n          0x8cb5: 0x53b3,\n          0x8cb6: 0x5e7b,\n          0x8cb7: 0x5f26,\n          0x8cb8: 0x6e1b,\n          0x8cb9: 0x6e90,\n          0x8cba: 0x7384,\n          0x8cbb: 0x73fe,\n          0x8cbc: 0x7d43,\n          0x8cbd: 0x8237,\n          0x8cbe: 0x8a00,\n          0x8cbf: 0x8afa,\n          0x8cc0: 0x9650,\n          0x8cc1: 0x4e4e,\n          0x8cc2: 0x500b,\n          0x8cc3: 0x53e4,\n          0x8cc4: 0x547c,\n          0x8cc5: 0x56fa,\n          0x8cc6: 0x59d1,\n          0x8cc7: 0x5b64,\n          0x8cc8: 0x5df1,\n          0x8cc9: 0x5eab,\n          0x8cca: 0x5f27,\n          0x8ccb: 0x6238,\n          0x8ccc: 0x6545,\n          0x8ccd: 0x67af,\n          0x8cce: 0x6e56,\n          0x8ccf: 0x72d0,\n          0x8cd0: 0x7cca,\n          0x8cd1: 0x88b4,\n          0x8cd2: 0x80a1,\n          0x8cd3: 0x80e1,\n          0x8cd4: 0x83f0,\n          0x8cd5: 0x864e,\n          0x8cd6: 0x8a87,\n          0x8cd7: 0x8de8,\n          0x8cd8: 0x9237,\n          0x8cd9: 0x96c7,\n          0x8cda: 0x9867,\n          0x8cdb: 0x9f13,\n          0x8cdc: 0x4e94,\n          0x8cdd: 0x4e92,\n          0x8cde: 0x4f0d,\n          0x8cdf: 0x5348,\n          0x8ce0: 0x5449,\n          0x8ce1: 0x543e,\n          0x8ce2: 0x5a2f,\n          0x8ce3: 0x5f8c,\n          0x8ce4: 0x5fa1,\n          0x8ce5: 0x609f,\n          0x8ce6: 0x68a7,\n          0x8ce7: 0x6a8e,\n          0x8ce8: 0x745a,\n          0x8ce9: 0x7881,\n          0x8cea: 0x8a9e,\n          0x8ceb: 0x8aa4,\n          0x8cec: 0x8b77,\n          0x8ced: 0x9190,\n          0x8cee: 0x4e5e,\n          0x8cef: 0x9bc9,\n          0x8cf0: 0x4ea4,\n          0x8cf1: 0x4f7c,\n          0x8cf2: 0x4faf,\n          0x8cf3: 0x5019,\n          0x8cf4: 0x5016,\n          0x8cf5: 0x5149,\n          0x8cf6: 0x516c,\n          0x8cf7: 0x529f,\n          0x8cf8: 0x52b9,\n          0x8cf9: 0x52fe,\n          0x8cfa: 0x539a,\n          0x8cfb: 0x53e3,\n          0x8cfc: 0x5411,\n          0x8d40: 0x540e,\n          0x8d41: 0x5589,\n          0x8d42: 0x5751,\n          0x8d43: 0x57a2,\n          0x8d44: 0x597d,\n          0x8d45: 0x5b54,\n          0x8d46: 0x5b5d,\n          0x8d47: 0x5b8f,\n          0x8d48: 0x5de5,\n          0x8d49: 0x5de7,\n          0x8d4a: 0x5df7,\n          0x8d4b: 0x5e78,\n          0x8d4c: 0x5e83,\n          0x8d4d: 0x5e9a,\n          0x8d4e: 0x5eb7,\n          0x8d4f: 0x5f18,\n          0x8d50: 0x6052,\n          0x8d51: 0x614c,\n          0x8d52: 0x6297,\n          0x8d53: 0x62d8,\n          0x8d54: 0x63a7,\n          0x8d55: 0x653b,\n          0x8d56: 0x6602,\n          0x8d57: 0x6643,\n          0x8d58: 0x66f4,\n          0x8d59: 0x676d,\n          0x8d5a: 0x6821,\n          0x8d5b: 0x6897,\n          0x8d5c: 0x69cb,\n          0x8d5d: 0x6c5f,\n          0x8d5e: 0x6d2a,\n          0x8d5f: 0x6d69,\n          0x8d60: 0x6e2f,\n          0x8d61: 0x6e9d,\n          0x8d62: 0x7532,\n          0x8d63: 0x7687,\n          0x8d64: 0x786c,\n          0x8d65: 0x7a3f,\n          0x8d66: 0x7ce0,\n          0x8d67: 0x7d05,\n          0x8d68: 0x7d18,\n          0x8d69: 0x7d5e,\n          0x8d6a: 0x7db1,\n          0x8d6b: 0x8015,\n          0x8d6c: 0x8003,\n          0x8d6d: 0x80af,\n          0x8d6e: 0x80b1,\n          0x8d6f: 0x8154,\n          0x8d70: 0x818f,\n          0x8d71: 0x822a,\n          0x8d72: 0x8352,\n          0x8d73: 0x884c,\n          0x8d74: 0x8861,\n          0x8d75: 0x8b1b,\n          0x8d76: 0x8ca2,\n          0x8d77: 0x8cfc,\n          0x8d78: 0x90ca,\n          0x8d79: 0x9175,\n          0x8d7a: 0x9271,\n          0x8d7b: 0x783f,\n          0x8d7c: 0x92fc,\n          0x8d7d: 0x95a4,\n          0x8d7e: 0x964d,\n          0x8d80: 0x9805,\n          0x8d81: 0x9999,\n          0x8d82: 0x9ad8,\n          0x8d83: 0x9d3b,\n          0x8d84: 0x525b,\n          0x8d85: 0x52ab,\n          0x8d86: 0x53f7,\n          0x8d87: 0x5408,\n          0x8d88: 0x58d5,\n          0x8d89: 0x62f7,\n          0x8d8a: 0x6fe0,\n          0x8d8b: 0x8c6a,\n          0x8d8c: 0x8f5f,\n          0x8d8d: 0x9eb9,\n          0x8d8e: 0x514b,\n          0x8d8f: 0x523b,\n          0x8d90: 0x544a,\n          0x8d91: 0x56fd,\n          0x8d92: 0x7a40,\n          0x8d93: 0x9177,\n          0x8d94: 0x9d60,\n          0x8d95: 0x9ed2,\n          0x8d96: 0x7344,\n          0x8d97: 0x6f09,\n          0x8d98: 0x8170,\n          0x8d99: 0x7511,\n          0x8d9a: 0x5ffd,\n          0x8d9b: 0x60da,\n          0x8d9c: 0x9aa8,\n          0x8d9d: 0x72db,\n          0x8d9e: 0x8fbc,\n          0x8d9f: 0x6b64,\n          0x8da0: 0x9803,\n          0x8da1: 0x4eca,\n          0x8da2: 0x56f0,\n          0x8da3: 0x5764,\n          0x8da4: 0x58be,\n          0x8da5: 0x5a5a,\n          0x8da6: 0x6068,\n          0x8da7: 0x61c7,\n          0x8da8: 0x660f,\n          0x8da9: 0x6606,\n          0x8daa: 0x6839,\n          0x8dab: 0x68b1,\n          0x8dac: 0x6df7,\n          0x8dad: 0x75d5,\n          0x8dae: 0x7d3a,\n          0x8daf: 0x826e,\n          0x8db0: 0x9b42,\n          0x8db1: 0x4e9b,\n          0x8db2: 0x4f50,\n          0x8db3: 0x53c9,\n          0x8db4: 0x5506,\n          0x8db5: 0x5d6f,\n          0x8db6: 0x5de6,\n          0x8db7: 0x5dee,\n          0x8db8: 0x67fb,\n          0x8db9: 0x6c99,\n          0x8dba: 0x7473,\n          0x8dbb: 0x7802,\n          0x8dbc: 0x8a50,\n          0x8dbd: 0x9396,\n          0x8dbe: 0x88df,\n          0x8dbf: 0x5750,\n          0x8dc0: 0x5ea7,\n          0x8dc1: 0x632b,\n          0x8dc2: 0x50b5,\n          0x8dc3: 0x50ac,\n          0x8dc4: 0x518d,\n          0x8dc5: 0x6700,\n          0x8dc6: 0x54c9,\n          0x8dc7: 0x585e,\n          0x8dc8: 0x59bb,\n          0x8dc9: 0x5bb0,\n          0x8dca: 0x5f69,\n          0x8dcb: 0x624d,\n          0x8dcc: 0x63a1,\n          0x8dcd: 0x683d,\n          0x8dce: 0x6b73,\n          0x8dcf: 0x6e08,\n          0x8dd0: 0x707d,\n          0x8dd1: 0x91c7,\n          0x8dd2: 0x7280,\n          0x8dd3: 0x7815,\n          0x8dd4: 0x7826,\n          0x8dd5: 0x796d,\n          0x8dd6: 0x658e,\n          0x8dd7: 0x7d30,\n          0x8dd8: 0x83dc,\n          0x8dd9: 0x88c1,\n          0x8dda: 0x8f09,\n          0x8ddb: 0x969b,\n          0x8ddc: 0x5264,\n          0x8ddd: 0x5728,\n          0x8dde: 0x6750,\n          0x8ddf: 0x7f6a,\n          0x8de0: 0x8ca1,\n          0x8de1: 0x51b4,\n          0x8de2: 0x5742,\n          0x8de3: 0x962a,\n          0x8de4: 0x583a,\n          0x8de5: 0x698a,\n          0x8de6: 0x80b4,\n          0x8de7: 0x54b2,\n          0x8de8: 0x5d0e,\n          0x8de9: 0x57fc,\n          0x8dea: 0x7895,\n          0x8deb: 0x9dfa,\n          0x8dec: 0x4f5c,\n          0x8ded: 0x524a,\n          0x8dee: 0x548b,\n          0x8def: 0x643e,\n          0x8df0: 0x6628,\n          0x8df1: 0x6714,\n          0x8df2: 0x67f5,\n          0x8df3: 0x7a84,\n          0x8df4: 0x7b56,\n          0x8df5: 0x7d22,\n          0x8df6: 0x932f,\n          0x8df7: 0x685c,\n          0x8df8: 0x9bad,\n          0x8df9: 0x7b39,\n          0x8dfa: 0x5319,\n          0x8dfb: 0x518a,\n          0x8dfc: 0x5237,\n          0x8e40: 0x5bdf,\n          0x8e41: 0x62f6,\n          0x8e42: 0x64ae,\n          0x8e43: 0x64e6,\n          0x8e44: 0x672d,\n          0x8e45: 0x6bba,\n          0x8e46: 0x85a9,\n          0x8e47: 0x96d1,\n          0x8e48: 0x7690,\n          0x8e49: 0x9bd6,\n          0x8e4a: 0x634c,\n          0x8e4b: 0x9306,\n          0x8e4c: 0x9bab,\n          0x8e4d: 0x76bf,\n          0x8e4e: 0x6652,\n          0x8e4f: 0x4e09,\n          0x8e50: 0x5098,\n          0x8e51: 0x53c2,\n          0x8e52: 0x5c71,\n          0x8e53: 0x60e8,\n          0x8e54: 0x6492,\n          0x8e55: 0x6563,\n          0x8e56: 0x685f,\n          0x8e57: 0x71e6,\n          0x8e58: 0x73ca,\n          0x8e59: 0x7523,\n          0x8e5a: 0x7b97,\n          0x8e5b: 0x7e82,\n          0x8e5c: 0x8695,\n          0x8e5d: 0x8b83,\n          0x8e5e: 0x8cdb,\n          0x8e5f: 0x9178,\n          0x8e60: 0x9910,\n          0x8e61: 0x65ac,\n          0x8e62: 0x66ab,\n          0x8e63: 0x6b8b,\n          0x8e64: 0x4ed5,\n          0x8e65: 0x4ed4,\n          0x8e66: 0x4f3a,\n          0x8e67: 0x4f7f,\n          0x8e68: 0x523a,\n          0x8e69: 0x53f8,\n          0x8e6a: 0x53f2,\n          0x8e6b: 0x55e3,\n          0x8e6c: 0x56db,\n          0x8e6d: 0x58eb,\n          0x8e6e: 0x59cb,\n          0x8e6f: 0x59c9,\n          0x8e70: 0x59ff,\n          0x8e71: 0x5b50,\n          0x8e72: 0x5c4d,\n          0x8e73: 0x5e02,\n          0x8e74: 0x5e2b,\n          0x8e75: 0x5fd7,\n          0x8e76: 0x601d,\n          0x8e77: 0x6307,\n          0x8e78: 0x652f,\n          0x8e79: 0x5b5c,\n          0x8e7a: 0x65af,\n          0x8e7b: 0x65bd,\n          0x8e7c: 0x65e8,\n          0x8e7d: 0x679d,\n          0x8e7e: 0x6b62,\n          0x8e80: 0x6b7b,\n          0x8e81: 0x6c0f,\n          0x8e82: 0x7345,\n          0x8e83: 0x7949,\n          0x8e84: 0x79c1,\n          0x8e85: 0x7cf8,\n          0x8e86: 0x7d19,\n          0x8e87: 0x7d2b,\n          0x8e88: 0x80a2,\n          0x8e89: 0x8102,\n          0x8e8a: 0x81f3,\n          0x8e8b: 0x8996,\n          0x8e8c: 0x8a5e,\n          0x8e8d: 0x8a69,\n          0x8e8e: 0x8a66,\n          0x8e8f: 0x8a8c,\n          0x8e90: 0x8aee,\n          0x8e91: 0x8cc7,\n          0x8e92: 0x8cdc,\n          0x8e93: 0x96cc,\n          0x8e94: 0x98fc,\n          0x8e95: 0x6b6f,\n          0x8e96: 0x4e8b,\n          0x8e97: 0x4f3c,\n          0x8e98: 0x4f8d,\n          0x8e99: 0x5150,\n          0x8e9a: 0x5b57,\n          0x8e9b: 0x5bfa,\n          0x8e9c: 0x6148,\n          0x8e9d: 0x6301,\n          0x8e9e: 0x6642,\n          0x8e9f: 0x6b21,\n          0x8ea0: 0x6ecb,\n          0x8ea1: 0x6cbb,\n          0x8ea2: 0x723e,\n          0x8ea3: 0x74bd,\n          0x8ea4: 0x75d4,\n          0x8ea5: 0x78c1,\n          0x8ea6: 0x793a,\n          0x8ea7: 0x800c,\n          0x8ea8: 0x8033,\n          0x8ea9: 0x81ea,\n          0x8eaa: 0x8494,\n          0x8eab: 0x8f9e,\n          0x8eac: 0x6c50,\n          0x8ead: 0x9e7f,\n          0x8eae: 0x5f0f,\n          0x8eaf: 0x8b58,\n          0x8eb0: 0x9d2b,\n          0x8eb1: 0x7afa,\n          0x8eb2: 0x8ef8,\n          0x8eb3: 0x5b8d,\n          0x8eb4: 0x96eb,\n          0x8eb5: 0x4e03,\n          0x8eb6: 0x53f1,\n          0x8eb7: 0x57f7,\n          0x8eb8: 0x5931,\n          0x8eb9: 0x5ac9,\n          0x8eba: 0x5ba4,\n          0x8ebb: 0x6089,\n          0x8ebc: 0x6e7f,\n          0x8ebd: 0x6f06,\n          0x8ebe: 0x75be,\n          0x8ebf: 0x8cea,\n          0x8ec0: 0x5b9f,\n          0x8ec1: 0x8500,\n          0x8ec2: 0x7be0,\n          0x8ec3: 0x5072,\n          0x8ec4: 0x67f4,\n          0x8ec5: 0x829d,\n          0x8ec6: 0x5c61,\n          0x8ec7: 0x854a,\n          0x8ec8: 0x7e1e,\n          0x8ec9: 0x820e,\n          0x8eca: 0x5199,\n          0x8ecb: 0x5c04,\n          0x8ecc: 0x6368,\n          0x8ecd: 0x8d66,\n          0x8ece: 0x659c,\n          0x8ecf: 0x716e,\n          0x8ed0: 0x793e,\n          0x8ed1: 0x7d17,\n          0x8ed2: 0x8005,\n          0x8ed3: 0x8b1d,\n          0x8ed4: 0x8eca,\n          0x8ed5: 0x906e,\n          0x8ed6: 0x86c7,\n          0x8ed7: 0x90aa,\n          0x8ed8: 0x501f,\n          0x8ed9: 0x52fa,\n          0x8eda: 0x5c3a,\n          0x8edb: 0x6753,\n          0x8edc: 0x707c,\n          0x8edd: 0x7235,\n          0x8ede: 0x914c,\n          0x8edf: 0x91c8,\n          0x8ee0: 0x932b,\n          0x8ee1: 0x82e5,\n          0x8ee2: 0x5bc2,\n          0x8ee3: 0x5f31,\n          0x8ee4: 0x60f9,\n          0x8ee5: 0x4e3b,\n          0x8ee6: 0x53d6,\n          0x8ee7: 0x5b88,\n          0x8ee8: 0x624b,\n          0x8ee9: 0x6731,\n          0x8eea: 0x6b8a,\n          0x8eeb: 0x72e9,\n          0x8eec: 0x73e0,\n          0x8eed: 0x7a2e,\n          0x8eee: 0x816b,\n          0x8eef: 0x8da3,\n          0x8ef0: 0x9152,\n          0x8ef1: 0x9996,\n          0x8ef2: 0x5112,\n          0x8ef3: 0x53d7,\n          0x8ef4: 0x546a,\n          0x8ef5: 0x5bff,\n          0x8ef6: 0x6388,\n          0x8ef7: 0x6a39,\n          0x8ef8: 0x7dac,\n          0x8ef9: 0x9700,\n          0x8efa: 0x56da,\n          0x8efb: 0x53ce,\n          0x8efc: 0x5468,\n          0x8f40: 0x5b97,\n          0x8f41: 0x5c31,\n          0x8f42: 0x5dde,\n          0x8f43: 0x4fee,\n          0x8f44: 0x6101,\n          0x8f45: 0x62fe,\n          0x8f46: 0x6d32,\n          0x8f47: 0x79c0,\n          0x8f48: 0x79cb,\n          0x8f49: 0x7d42,\n          0x8f4a: 0x7e4d,\n          0x8f4b: 0x7fd2,\n          0x8f4c: 0x81ed,\n          0x8f4d: 0x821f,\n          0x8f4e: 0x8490,\n          0x8f4f: 0x8846,\n          0x8f50: 0x8972,\n          0x8f51: 0x8b90,\n          0x8f52: 0x8e74,\n          0x8f53: 0x8f2f,\n          0x8f54: 0x9031,\n          0x8f55: 0x914b,\n          0x8f56: 0x916c,\n          0x8f57: 0x96c6,\n          0x8f58: 0x919c,\n          0x8f59: 0x4ec0,\n          0x8f5a: 0x4f4f,\n          0x8f5b: 0x5145,\n          0x8f5c: 0x5341,\n          0x8f5d: 0x5f93,\n          0x8f5e: 0x620e,\n          0x8f5f: 0x67d4,\n          0x8f60: 0x6c41,\n          0x8f61: 0x6e0b,\n          0x8f62: 0x7363,\n          0x8f63: 0x7e26,\n          0x8f64: 0x91cd,\n          0x8f65: 0x9283,\n          0x8f66: 0x53d4,\n          0x8f67: 0x5919,\n          0x8f68: 0x5bbf,\n          0x8f69: 0x6dd1,\n          0x8f6a: 0x795d,\n          0x8f6b: 0x7e2e,\n          0x8f6c: 0x7c9b,\n          0x8f6d: 0x587e,\n          0x8f6e: 0x719f,\n          0x8f6f: 0x51fa,\n          0x8f70: 0x8853,\n          0x8f71: 0x8ff0,\n          0x8f72: 0x4fca,\n          0x8f73: 0x5cfb,\n          0x8f74: 0x6625,\n          0x8f75: 0x77ac,\n          0x8f76: 0x7ae3,\n          0x8f77: 0x821c,\n          0x8f78: 0x99ff,\n          0x8f79: 0x51c6,\n          0x8f7a: 0x5faa,\n          0x8f7b: 0x65ec,\n          0x8f7c: 0x696f,\n          0x8f7d: 0x6b89,\n          0x8f7e: 0x6df3,\n          0x8f80: 0x6e96,\n          0x8f81: 0x6f64,\n          0x8f82: 0x76fe,\n          0x8f83: 0x7d14,\n          0x8f84: 0x5de1,\n          0x8f85: 0x9075,\n          0x8f86: 0x9187,\n          0x8f87: 0x9806,\n          0x8f88: 0x51e6,\n          0x8f89: 0x521d,\n          0x8f8a: 0x6240,\n          0x8f8b: 0x6691,\n          0x8f8c: 0x66d9,\n          0x8f8d: 0x6e1a,\n          0x8f8e: 0x5eb6,\n          0x8f8f: 0x7dd2,\n          0x8f90: 0x7f72,\n          0x8f91: 0x66f8,\n          0x8f92: 0x85af,\n          0x8f93: 0x85f7,\n          0x8f94: 0x8af8,\n          0x8f95: 0x52a9,\n          0x8f96: 0x53d9,\n          0x8f97: 0x5973,\n          0x8f98: 0x5e8f,\n          0x8f99: 0x5f90,\n          0x8f9a: 0x6055,\n          0x8f9b: 0x92e4,\n          0x8f9c: 0x9664,\n          0x8f9d: 0x50b7,\n          0x8f9e: 0x511f,\n          0x8f9f: 0x52dd,\n          0x8fa0: 0x5320,\n          0x8fa1: 0x5347,\n          0x8fa2: 0x53ec,\n          0x8fa3: 0x54e8,\n          0x8fa4: 0x5546,\n          0x8fa5: 0x5531,\n          0x8fa6: 0x5617,\n          0x8fa7: 0x5968,\n          0x8fa8: 0x59be,\n          0x8fa9: 0x5a3c,\n          0x8faa: 0x5bb5,\n          0x8fab: 0x5c06,\n          0x8fac: 0x5c0f,\n          0x8fad: 0x5c11,\n          0x8fae: 0x5c1a,\n          0x8faf: 0x5e84,\n          0x8fb0: 0x5e8a,\n          0x8fb1: 0x5ee0,\n          0x8fb2: 0x5f70,\n          0x8fb3: 0x627f,\n          0x8fb4: 0x6284,\n          0x8fb5: 0x62db,\n          0x8fb6: 0x638c,\n          0x8fb7: 0x6377,\n          0x8fb8: 0x6607,\n          0x8fb9: 0x660c,\n          0x8fba: 0x662d,\n          0x8fbb: 0x6676,\n          0x8fbc: 0x677e,\n          0x8fbd: 0x68a2,\n          0x8fbe: 0x6a1f,\n          0x8fbf: 0x6a35,\n          0x8fc0: 0x6cbc,\n          0x8fc1: 0x6d88,\n          0x8fc2: 0x6e09,\n          0x8fc3: 0x6e58,\n          0x8fc4: 0x713c,\n          0x8fc5: 0x7126,\n          0x8fc6: 0x7167,\n          0x8fc7: 0x75c7,\n          0x8fc8: 0x7701,\n          0x8fc9: 0x785d,\n          0x8fca: 0x7901,\n          0x8fcb: 0x7965,\n          0x8fcc: 0x79f0,\n          0x8fcd: 0x7ae0,\n          0x8fce: 0x7b11,\n          0x8fcf: 0x7ca7,\n          0x8fd0: 0x7d39,\n          0x8fd1: 0x8096,\n          0x8fd2: 0x83d6,\n          0x8fd3: 0x848b,\n          0x8fd4: 0x8549,\n          0x8fd5: 0x885d,\n          0x8fd6: 0x88f3,\n          0x8fd7: 0x8a1f,\n          0x8fd8: 0x8a3c,\n          0x8fd9: 0x8a54,\n          0x8fda: 0x8a73,\n          0x8fdb: 0x8c61,\n          0x8fdc: 0x8cde,\n          0x8fdd: 0x91a4,\n          0x8fde: 0x9266,\n          0x8fdf: 0x937e,\n          0x8fe0: 0x9418,\n          0x8fe1: 0x969c,\n          0x8fe2: 0x9798,\n          0x8fe3: 0x4e0a,\n          0x8fe4: 0x4e08,\n          0x8fe5: 0x4e1e,\n          0x8fe6: 0x4e57,\n          0x8fe7: 0x5197,\n          0x8fe8: 0x5270,\n          0x8fe9: 0x57ce,\n          0x8fea: 0x5834,\n          0x8feb: 0x58cc,\n          0x8fec: 0x5b22,\n          0x8fed: 0x5e38,\n          0x8fee: 0x60c5,\n          0x8fef: 0x64fe,\n          0x8ff0: 0x6761,\n          0x8ff1: 0x6756,\n          0x8ff2: 0x6d44,\n          0x8ff3: 0x72b6,\n          0x8ff4: 0x7573,\n          0x8ff5: 0x7a63,\n          0x8ff6: 0x84b8,\n          0x8ff7: 0x8b72,\n          0x8ff8: 0x91b8,\n          0x8ff9: 0x9320,\n          0x8ffa: 0x5631,\n          0x8ffb: 0x57f4,\n          0x8ffc: 0x98fe,\n          0x9040: 0x62ed,\n          0x9041: 0x690d,\n          0x9042: 0x6b96,\n          0x9043: 0x71ed,\n          0x9044: 0x7e54,\n          0x9045: 0x8077,\n          0x9046: 0x8272,\n          0x9047: 0x89e6,\n          0x9048: 0x98df,\n          0x9049: 0x8755,\n          0x904a: 0x8fb1,\n          0x904b: 0x5c3b,\n          0x904c: 0x4f38,\n          0x904d: 0x4fe1,\n          0x904e: 0x4fb5,\n          0x904f: 0x5507,\n          0x9050: 0x5a20,\n          0x9051: 0x5bdd,\n          0x9052: 0x5be9,\n          0x9053: 0x5fc3,\n          0x9054: 0x614e,\n          0x9055: 0x632f,\n          0x9056: 0x65b0,\n          0x9057: 0x664b,\n          0x9058: 0x68ee,\n          0x9059: 0x699b,\n          0x905a: 0x6d78,\n          0x905b: 0x6df1,\n          0x905c: 0x7533,\n          0x905d: 0x75b9,\n          0x905e: 0x771f,\n          0x905f: 0x795e,\n          0x9060: 0x79e6,\n          0x9061: 0x7d33,\n          0x9062: 0x81e3,\n          0x9063: 0x82af,\n          0x9064: 0x85aa,\n          0x9065: 0x89aa,\n          0x9066: 0x8a3a,\n          0x9067: 0x8eab,\n          0x9068: 0x8f9b,\n          0x9069: 0x9032,\n          0x906a: 0x91dd,\n          0x906b: 0x9707,\n          0x906c: 0x4eba,\n          0x906d: 0x4ec1,\n          0x906e: 0x5203,\n          0x906f: 0x5875,\n          0x9070: 0x58ec,\n          0x9071: 0x5c0b,\n          0x9072: 0x751a,\n          0x9073: 0x5c3d,\n          0x9074: 0x814e,\n          0x9075: 0x8a0a,\n          0x9076: 0x8fc5,\n          0x9077: 0x9663,\n          0x9078: 0x976d,\n          0x9079: 0x7b25,\n          0x907a: 0x8acf,\n          0x907b: 0x9808,\n          0x907c: 0x9162,\n          0x907d: 0x56f3,\n          0x907e: 0x53a8,\n          0x9080: 0x9017,\n          0x9081: 0x5439,\n          0x9082: 0x5782,\n          0x9083: 0x5e25,\n          0x9084: 0x63a8,\n          0x9085: 0x6c34,\n          0x9086: 0x708a,\n          0x9087: 0x7761,\n          0x9088: 0x7c8b,\n          0x9089: 0x7fe0,\n          0x908a: 0x8870,\n          0x908b: 0x9042,\n          0x908c: 0x9154,\n          0x908d: 0x9310,\n          0x908e: 0x9318,\n          0x908f: 0x968f,\n          0x9090: 0x745e,\n          0x9091: 0x9ac4,\n          0x9092: 0x5d07,\n          0x9093: 0x5d69,\n          0x9094: 0x6570,\n          0x9095: 0x67a2,\n          0x9096: 0x8da8,\n          0x9097: 0x96db,\n          0x9098: 0x636e,\n          0x9099: 0x6749,\n          0x909a: 0x6919,\n          0x909b: 0x83c5,\n          0x909c: 0x9817,\n          0x909d: 0x96c0,\n          0x909e: 0x88fe,\n          0x909f: 0x6f84,\n          0x90a0: 0x647a,\n          0x90a1: 0x5bf8,\n          0x90a2: 0x4e16,\n          0x90a3: 0x702c,\n          0x90a4: 0x755d,\n          0x90a5: 0x662f,\n          0x90a6: 0x51c4,\n          0x90a7: 0x5236,\n          0x90a8: 0x52e2,\n          0x90a9: 0x59d3,\n          0x90aa: 0x5f81,\n          0x90ab: 0x6027,\n          0x90ac: 0x6210,\n          0x90ad: 0x653f,\n          0x90ae: 0x6574,\n          0x90af: 0x661f,\n          0x90b0: 0x6674,\n          0x90b1: 0x68f2,\n          0x90b2: 0x6816,\n          0x90b3: 0x6b63,\n          0x90b4: 0x6e05,\n          0x90b5: 0x7272,\n          0x90b6: 0x751f,\n          0x90b7: 0x76db,\n          0x90b8: 0x7cbe,\n          0x90b9: 0x8056,\n          0x90ba: 0x58f0,\n          0x90bb: 0x88fd,\n          0x90bc: 0x897f,\n          0x90bd: 0x8aa0,\n          0x90be: 0x8a93,\n          0x90bf: 0x8acb,\n          0x90c0: 0x901d,\n          0x90c1: 0x9192,\n          0x90c2: 0x9752,\n          0x90c3: 0x9759,\n          0x90c4: 0x6589,\n          0x90c5: 0x7a0e,\n          0x90c6: 0x8106,\n          0x90c7: 0x96bb,\n          0x90c8: 0x5e2d,\n          0x90c9: 0x60dc,\n          0x90ca: 0x621a,\n          0x90cb: 0x65a5,\n          0x90cc: 0x6614,\n          0x90cd: 0x6790,\n          0x90ce: 0x77f3,\n          0x90cf: 0x7a4d,\n          0x90d0: 0x7c4d,\n          0x90d1: 0x7e3e,\n          0x90d2: 0x810a,\n          0x90d3: 0x8cac,\n          0x90d4: 0x8d64,\n          0x90d5: 0x8de1,\n          0x90d6: 0x8e5f,\n          0x90d7: 0x78a9,\n          0x90d8: 0x5207,\n          0x90d9: 0x62d9,\n          0x90da: 0x63a5,\n          0x90db: 0x6442,\n          0x90dc: 0x6298,\n          0x90dd: 0x8a2d,\n          0x90de: 0x7a83,\n          0x90df: 0x7bc0,\n          0x90e0: 0x8aac,\n          0x90e1: 0x96ea,\n          0x90e2: 0x7d76,\n          0x90e3: 0x820c,\n          0x90e4: 0x8749,\n          0x90e5: 0x4ed9,\n          0x90e6: 0x5148,\n          0x90e7: 0x5343,\n          0x90e8: 0x5360,\n          0x90e9: 0x5ba3,\n          0x90ea: 0x5c02,\n          0x90eb: 0x5c16,\n          0x90ec: 0x5ddd,\n          0x90ed: 0x6226,\n          0x90ee: 0x6247,\n          0x90ef: 0x64b0,\n          0x90f0: 0x6813,\n          0x90f1: 0x6834,\n          0x90f2: 0x6cc9,\n          0x90f3: 0x6d45,\n          0x90f4: 0x6d17,\n          0x90f5: 0x67d3,\n          0x90f6: 0x6f5c,\n          0x90f7: 0x714e,\n          0x90f8: 0x717d,\n          0x90f9: 0x65cb,\n          0x90fa: 0x7a7f,\n          0x90fb: 0x7bad,\n          0x90fc: 0x7dda,\n          0x9140: 0x7e4a,\n          0x9141: 0x7fa8,\n          0x9142: 0x817a,\n          0x9143: 0x821b,\n          0x9144: 0x8239,\n          0x9145: 0x85a6,\n          0x9146: 0x8a6e,\n          0x9147: 0x8cce,\n          0x9148: 0x8df5,\n          0x9149: 0x9078,\n          0x914a: 0x9077,\n          0x914b: 0x92ad,\n          0x914c: 0x9291,\n          0x914d: 0x9583,\n          0x914e: 0x9bae,\n          0x914f: 0x524d,\n          0x9150: 0x5584,\n          0x9151: 0x6f38,\n          0x9152: 0x7136,\n          0x9153: 0x5168,\n          0x9154: 0x7985,\n          0x9155: 0x7e55,\n          0x9156: 0x81b3,\n          0x9157: 0x7cce,\n          0x9158: 0x564c,\n          0x9159: 0x5851,\n          0x915a: 0x5ca8,\n          0x915b: 0x63aa,\n          0x915c: 0x66fe,\n          0x915d: 0x66fd,\n          0x915e: 0x695a,\n          0x915f: 0x72d9,\n          0x9160: 0x758f,\n          0x9161: 0x758e,\n          0x9162: 0x790e,\n          0x9163: 0x7956,\n          0x9164: 0x79df,\n          0x9165: 0x7c97,\n          0x9166: 0x7d20,\n          0x9167: 0x7d44,\n          0x9168: 0x8607,\n          0x9169: 0x8a34,\n          0x916a: 0x963b,\n          0x916b: 0x9061,\n          0x916c: 0x9f20,\n          0x916d: 0x50e7,\n          0x916e: 0x5275,\n          0x916f: 0x53cc,\n          0x9170: 0x53e2,\n          0x9171: 0x5009,\n          0x9172: 0x55aa,\n          0x9173: 0x58ee,\n          0x9174: 0x594f,\n          0x9175: 0x723d,\n          0x9176: 0x5b8b,\n          0x9177: 0x5c64,\n          0x9178: 0x531d,\n          0x9179: 0x60e3,\n          0x917a: 0x60f3,\n          0x917b: 0x635c,\n          0x917c: 0x6383,\n          0x917d: 0x633f,\n          0x917e: 0x63bb,\n          0x9180: 0x64cd,\n          0x9181: 0x65e9,\n          0x9182: 0x66f9,\n          0x9183: 0x5de3,\n          0x9184: 0x69cd,\n          0x9185: 0x69fd,\n          0x9186: 0x6f15,\n          0x9187: 0x71e5,\n          0x9188: 0x4e89,\n          0x9189: 0x75e9,\n          0x918a: 0x76f8,\n          0x918b: 0x7a93,\n          0x918c: 0x7cdf,\n          0x918d: 0x7dcf,\n          0x918e: 0x7d9c,\n          0x918f: 0x8061,\n          0x9190: 0x8349,\n          0x9191: 0x8358,\n          0x9192: 0x846c,\n          0x9193: 0x84bc,\n          0x9194: 0x85fb,\n          0x9195: 0x88c5,\n          0x9196: 0x8d70,\n          0x9197: 0x9001,\n          0x9198: 0x906d,\n          0x9199: 0x9397,\n          0x919a: 0x971c,\n          0x919b: 0x9a12,\n          0x919c: 0x50cf,\n          0x919d: 0x5897,\n          0x919e: 0x618e,\n          0x919f: 0x81d3,\n          0x91a0: 0x8535,\n          0x91a1: 0x8d08,\n          0x91a2: 0x9020,\n          0x91a3: 0x4fc3,\n          0x91a4: 0x5074,\n          0x91a5: 0x5247,\n          0x91a6: 0x5373,\n          0x91a7: 0x606f,\n          0x91a8: 0x6349,\n          0x91a9: 0x675f,\n          0x91aa: 0x6e2c,\n          0x91ab: 0x8db3,\n          0x91ac: 0x901f,\n          0x91ad: 0x4fd7,\n          0x91ae: 0x5c5e,\n          0x91af: 0x8cca,\n          0x91b0: 0x65cf,\n          0x91b1: 0x7d9a,\n          0x91b2: 0x5352,\n          0x91b3: 0x8896,\n          0x91b4: 0x5176,\n          0x91b5: 0x63c3,\n          0x91b6: 0x5b58,\n          0x91b7: 0x5b6b,\n          0x91b8: 0x5c0a,\n          0x91b9: 0x640d,\n          0x91ba: 0x6751,\n          0x91bb: 0x905c,\n          0x91bc: 0x4ed6,\n          0x91bd: 0x591a,\n          0x91be: 0x592a,\n          0x91bf: 0x6c70,\n          0x91c0: 0x8a51,\n          0x91c1: 0x553e,\n          0x91c2: 0x5815,\n          0x91c3: 0x59a5,\n          0x91c4: 0x60f0,\n          0x91c5: 0x6253,\n          0x91c6: 0x67c1,\n          0x91c7: 0x8235,\n          0x91c8: 0x6955,\n          0x91c9: 0x9640,\n          0x91ca: 0x99c4,\n          0x91cb: 0x9a28,\n          0x91cc: 0x4f53,\n          0x91cd: 0x5806,\n          0x91ce: 0x5bfe,\n          0x91cf: 0x8010,\n          0x91d0: 0x5cb1,\n          0x91d1: 0x5e2f,\n          0x91d2: 0x5f85,\n          0x91d3: 0x6020,\n          0x91d4: 0x614b,\n          0x91d5: 0x6234,\n          0x91d6: 0x66ff,\n          0x91d7: 0x6cf0,\n          0x91d8: 0x6ede,\n          0x91d9: 0x80ce,\n          0x91da: 0x817f,\n          0x91db: 0x82d4,\n          0x91dc: 0x888b,\n          0x91dd: 0x8cb8,\n          0x91de: 0x9000,\n          0x91df: 0x902e,\n          0x91e0: 0x968a,\n          0x91e1: 0x9edb,\n          0x91e2: 0x9bdb,\n          0x91e3: 0x4ee3,\n          0x91e4: 0x53f0,\n          0x91e5: 0x5927,\n          0x91e6: 0x7b2c,\n          0x91e7: 0x918d,\n          0x91e8: 0x984c,\n          0x91e9: 0x9df9,\n          0x91ea: 0x6edd,\n          0x91eb: 0x7027,\n          0x91ec: 0x5353,\n          0x91ed: 0x5544,\n          0x91ee: 0x5b85,\n          0x91ef: 0x6258,\n          0x91f0: 0x629e,\n          0x91f1: 0x62d3,\n          0x91f2: 0x6ca2,\n          0x91f3: 0x6fef,\n          0x91f4: 0x7422,\n          0x91f5: 0x8a17,\n          0x91f6: 0x9438,\n          0x91f7: 0x6fc1,\n          0x91f8: 0x8afe,\n          0x91f9: 0x8338,\n          0x91fa: 0x51e7,\n          0x91fb: 0x86f8,\n          0x91fc: 0x53ea,\n          0x9240: 0x53e9,\n          0x9241: 0x4f46,\n          0x9242: 0x9054,\n          0x9243: 0x8fb0,\n          0x9244: 0x596a,\n          0x9245: 0x8131,\n          0x9246: 0x5dfd,\n          0x9247: 0x7aea,\n          0x9248: 0x8fbf,\n          0x9249: 0x68da,\n          0x924a: 0x8c37,\n          0x924b: 0x72f8,\n          0x924c: 0x9c48,\n          0x924d: 0x6a3d,\n          0x924e: 0x8ab0,\n          0x924f: 0x4e39,\n          0x9250: 0x5358,\n          0x9251: 0x5606,\n          0x9252: 0x5766,\n          0x9253: 0x62c5,\n          0x9254: 0x63a2,\n          0x9255: 0x65e6,\n          0x9256: 0x6b4e,\n          0x9257: 0x6de1,\n          0x9258: 0x6e5b,\n          0x9259: 0x70ad,\n          0x925a: 0x77ed,\n          0x925b: 0x7aef,\n          0x925c: 0x7baa,\n          0x925d: 0x7dbb,\n          0x925e: 0x803d,\n          0x925f: 0x80c6,\n          0x9260: 0x86cb,\n          0x9261: 0x8a95,\n          0x9262: 0x935b,\n          0x9263: 0x56e3,\n          0x9264: 0x58c7,\n          0x9265: 0x5f3e,\n          0x9266: 0x65ad,\n          0x9267: 0x6696,\n          0x9268: 0x6a80,\n          0x9269: 0x6bb5,\n          0x926a: 0x7537,\n          0x926b: 0x8ac7,\n          0x926c: 0x5024,\n          0x926d: 0x77e5,\n          0x926e: 0x5730,\n          0x926f: 0x5f1b,\n          0x9270: 0x6065,\n          0x9271: 0x667a,\n          0x9272: 0x6c60,\n          0x9273: 0x75f4,\n          0x9274: 0x7a1a,\n          0x9275: 0x7f6e,\n          0x9276: 0x81f4,\n          0x9277: 0x8718,\n          0x9278: 0x9045,\n          0x9279: 0x99b3,\n          0x927a: 0x7bc9,\n          0x927b: 0x755c,\n          0x927c: 0x7af9,\n          0x927d: 0x7b51,\n          0x927e: 0x84c4,\n          0x9280: 0x9010,\n          0x9281: 0x79e9,\n          0x9282: 0x7a92,\n          0x9283: 0x8336,\n          0x9284: 0x5ae1,\n          0x9285: 0x7740,\n          0x9286: 0x4e2d,\n          0x9287: 0x4ef2,\n          0x9288: 0x5b99,\n          0x9289: 0x5fe0,\n          0x928a: 0x62bd,\n          0x928b: 0x663c,\n          0x928c: 0x67f1,\n          0x928d: 0x6ce8,\n          0x928e: 0x866b,\n          0x928f: 0x8877,\n          0x9290: 0x8a3b,\n          0x9291: 0x914e,\n          0x9292: 0x92f3,\n          0x9293: 0x99d0,\n          0x9294: 0x6a17,\n          0x9295: 0x7026,\n          0x9296: 0x732a,\n          0x9297: 0x82e7,\n          0x9298: 0x8457,\n          0x9299: 0x8caf,\n          0x929a: 0x4e01,\n          0x929b: 0x5146,\n          0x929c: 0x51cb,\n          0x929d: 0x558b,\n          0x929e: 0x5bf5,\n          0x929f: 0x5e16,\n          0x92a0: 0x5e33,\n          0x92a1: 0x5e81,\n          0x92a2: 0x5f14,\n          0x92a3: 0x5f35,\n          0x92a4: 0x5f6b,\n          0x92a5: 0x5fb4,\n          0x92a6: 0x61f2,\n          0x92a7: 0x6311,\n          0x92a8: 0x66a2,\n          0x92a9: 0x671d,\n          0x92aa: 0x6f6e,\n          0x92ab: 0x7252,\n          0x92ac: 0x753a,\n          0x92ad: 0x773a,\n          0x92ae: 0x8074,\n          0x92af: 0x8139,\n          0x92b0: 0x8178,\n          0x92b1: 0x8776,\n          0x92b2: 0x8abf,\n          0x92b3: 0x8adc,\n          0x92b4: 0x8d85,\n          0x92b5: 0x8df3,\n          0x92b6: 0x929a,\n          0x92b7: 0x9577,\n          0x92b8: 0x9802,\n          0x92b9: 0x9ce5,\n          0x92ba: 0x52c5,\n          0x92bb: 0x6357,\n          0x92bc: 0x76f4,\n          0x92bd: 0x6715,\n          0x92be: 0x6c88,\n          0x92bf: 0x73cd,\n          0x92c0: 0x8cc3,\n          0x92c1: 0x93ae,\n          0x92c2: 0x9673,\n          0x92c3: 0x6d25,\n          0x92c4: 0x589c,\n          0x92c5: 0x690e,\n          0x92c6: 0x69cc,\n          0x92c7: 0x8ffd,\n          0x92c8: 0x939a,\n          0x92c9: 0x75db,\n          0x92ca: 0x901a,\n          0x92cb: 0x585a,\n          0x92cc: 0x6802,\n          0x92cd: 0x63b4,\n          0x92ce: 0x69fb,\n          0x92cf: 0x4f43,\n          0x92d0: 0x6f2c,\n          0x92d1: 0x67d8,\n          0x92d2: 0x8fbb,\n          0x92d3: 0x8526,\n          0x92d4: 0x7db4,\n          0x92d5: 0x9354,\n          0x92d6: 0x693f,\n          0x92d7: 0x6f70,\n          0x92d8: 0x576a,\n          0x92d9: 0x58f7,\n          0x92da: 0x5b2c,\n          0x92db: 0x7d2c,\n          0x92dc: 0x722a,\n          0x92dd: 0x540a,\n          0x92de: 0x91e3,\n          0x92df: 0x9db4,\n          0x92e0: 0x4ead,\n          0x92e1: 0x4f4e,\n          0x92e2: 0x505c,\n          0x92e3: 0x5075,\n          0x92e4: 0x5243,\n          0x92e5: 0x8c9e,\n          0x92e6: 0x5448,\n          0x92e7: 0x5824,\n          0x92e8: 0x5b9a,\n          0x92e9: 0x5e1d,\n          0x92ea: 0x5e95,\n          0x92eb: 0x5ead,\n          0x92ec: 0x5ef7,\n          0x92ed: 0x5f1f,\n          0x92ee: 0x608c,\n          0x92ef: 0x62b5,\n          0x92f0: 0x633a,\n          0x92f1: 0x63d0,\n          0x92f2: 0x68af,\n          0x92f3: 0x6c40,\n          0x92f4: 0x7887,\n          0x92f5: 0x798e,\n          0x92f6: 0x7a0b,\n          0x92f7: 0x7de0,\n          0x92f8: 0x8247,\n          0x92f9: 0x8a02,\n          0x92fa: 0x8ae6,\n          0x92fb: 0x8e44,\n          0x92fc: 0x9013,\n          0x9340: 0x90b8,\n          0x9341: 0x912d,\n          0x9342: 0x91d8,\n          0x9343: 0x9f0e,\n          0x9344: 0x6ce5,\n          0x9345: 0x6458,\n          0x9346: 0x64e2,\n          0x9347: 0x6575,\n          0x9348: 0x6ef4,\n          0x9349: 0x7684,\n          0x934a: 0x7b1b,\n          0x934b: 0x9069,\n          0x934c: 0x93d1,\n          0x934d: 0x6eba,\n          0x934e: 0x54f2,\n          0x934f: 0x5fb9,\n          0x9350: 0x64a4,\n          0x9351: 0x8f4d,\n          0x9352: 0x8fed,\n          0x9353: 0x9244,\n          0x9354: 0x5178,\n          0x9355: 0x586b,\n          0x9356: 0x5929,\n          0x9357: 0x5c55,\n          0x9358: 0x5e97,\n          0x9359: 0x6dfb,\n          0x935a: 0x7e8f,\n          0x935b: 0x751c,\n          0x935c: 0x8cbc,\n          0x935d: 0x8ee2,\n          0x935e: 0x985b,\n          0x935f: 0x70b9,\n          0x9360: 0x4f1d,\n          0x9361: 0x6bbf,\n          0x9362: 0x6fb1,\n          0x9363: 0x7530,\n          0x9364: 0x96fb,\n          0x9365: 0x514e,\n          0x9366: 0x5410,\n          0x9367: 0x5835,\n          0x9368: 0x5857,\n          0x9369: 0x59ac,\n          0x936a: 0x5c60,\n          0x936b: 0x5f92,\n          0x936c: 0x6597,\n          0x936d: 0x675c,\n          0x936e: 0x6e21,\n          0x936f: 0x767b,\n          0x9370: 0x83df,\n          0x9371: 0x8ced,\n          0x9372: 0x9014,\n          0x9373: 0x90fd,\n          0x9374: 0x934d,\n          0x9375: 0x7825,\n          0x9376: 0x783a,\n          0x9377: 0x52aa,\n          0x9378: 0x5ea6,\n          0x9379: 0x571f,\n          0x937a: 0x5974,\n          0x937b: 0x6012,\n          0x937c: 0x5012,\n          0x937d: 0x515a,\n          0x937e: 0x51ac,\n          0x9380: 0x51cd,\n          0x9381: 0x5200,\n          0x9382: 0x5510,\n          0x9383: 0x5854,\n          0x9384: 0x5858,\n          0x9385: 0x5957,\n          0x9386: 0x5b95,\n          0x9387: 0x5cf6,\n          0x9388: 0x5d8b,\n          0x9389: 0x60bc,\n          0x938a: 0x6295,\n          0x938b: 0x642d,\n          0x938c: 0x6771,\n          0x938d: 0x6843,\n          0x938e: 0x68bc,\n          0x938f: 0x68df,\n          0x9390: 0x76d7,\n          0x9391: 0x6dd8,\n          0x9392: 0x6e6f,\n          0x9393: 0x6d9b,\n          0x9394: 0x706f,\n          0x9395: 0x71c8,\n          0x9396: 0x5f53,\n          0x9397: 0x75d8,\n          0x9398: 0x7977,\n          0x9399: 0x7b49,\n          0x939a: 0x7b54,\n          0x939b: 0x7b52,\n          0x939c: 0x7cd6,\n          0x939d: 0x7d71,\n          0x939e: 0x5230,\n          0x939f: 0x8463,\n          0x93a0: 0x8569,\n          0x93a1: 0x85e4,\n          0x93a2: 0x8a0e,\n          0x93a3: 0x8b04,\n          0x93a4: 0x8c46,\n          0x93a5: 0x8e0f,\n          0x93a6: 0x9003,\n          0x93a7: 0x900f,\n          0x93a8: 0x9419,\n          0x93a9: 0x9676,\n          0x93aa: 0x982d,\n          0x93ab: 0x9a30,\n          0x93ac: 0x95d8,\n          0x93ad: 0x50cd,\n          0x93ae: 0x52d5,\n          0x93af: 0x540c,\n          0x93b0: 0x5802,\n          0x93b1: 0x5c0e,\n          0x93b2: 0x61a7,\n          0x93b3: 0x649e,\n          0x93b4: 0x6d1e,\n          0x93b5: 0x77b3,\n          0x93b6: 0x7ae5,\n          0x93b7: 0x80f4,\n          0x93b8: 0x8404,\n          0x93b9: 0x9053,\n          0x93ba: 0x9285,\n          0x93bb: 0x5ce0,\n          0x93bc: 0x9d07,\n          0x93bd: 0x533f,\n          0x93be: 0x5f97,\n          0x93bf: 0x5fb3,\n          0x93c0: 0x6d9c,\n          0x93c1: 0x7279,\n          0x93c2: 0x7763,\n          0x93c3: 0x79bf,\n          0x93c4: 0x7be4,\n          0x93c5: 0x6bd2,\n          0x93c6: 0x72ec,\n          0x93c7: 0x8aad,\n          0x93c8: 0x6803,\n          0x93c9: 0x6a61,\n          0x93ca: 0x51f8,\n          0x93cb: 0x7a81,\n          0x93cc: 0x6934,\n          0x93cd: 0x5c4a,\n          0x93ce: 0x9cf6,\n          0x93cf: 0x82eb,\n          0x93d0: 0x5bc5,\n          0x93d1: 0x9149,\n          0x93d2: 0x701e,\n          0x93d3: 0x5678,\n          0x93d4: 0x5c6f,\n          0x93d5: 0x60c7,\n          0x93d6: 0x6566,\n          0x93d7: 0x6c8c,\n          0x93d8: 0x8c5a,\n          0x93d9: 0x9041,\n          0x93da: 0x9813,\n          0x93db: 0x5451,\n          0x93dc: 0x66c7,\n          0x93dd: 0x920d,\n          0x93de: 0x5948,\n          0x93df: 0x90a3,\n          0x93e0: 0x5185,\n          0x93e1: 0x4e4d,\n          0x93e2: 0x51ea,\n          0x93e3: 0x8599,\n          0x93e4: 0x8b0e,\n          0x93e5: 0x7058,\n          0x93e6: 0x637a,\n          0x93e7: 0x934b,\n          0x93e8: 0x6962,\n          0x93e9: 0x99b4,\n          0x93ea: 0x7e04,\n          0x93eb: 0x7577,\n          0x93ec: 0x5357,\n          0x93ed: 0x6960,\n          0x93ee: 0x8edf,\n          0x93ef: 0x96e3,\n          0x93f0: 0x6c5d,\n          0x93f1: 0x4e8c,\n          0x93f2: 0x5c3c,\n          0x93f3: 0x5f10,\n          0x93f4: 0x8fe9,\n          0x93f5: 0x5302,\n          0x93f6: 0x8cd1,\n          0x93f7: 0x8089,\n          0x93f8: 0x8679,\n          0x93f9: 0x5eff,\n          0x93fa: 0x65e5,\n          0x93fb: 0x4e73,\n          0x93fc: 0x5165,\n          0x9440: 0x5982,\n          0x9441: 0x5c3f,\n          0x9442: 0x97ee,\n          0x9443: 0x4efb,\n          0x9444: 0x598a,\n          0x9445: 0x5fcd,\n          0x9446: 0x8a8d,\n          0x9447: 0x6fe1,\n          0x9448: 0x79b0,\n          0x9449: 0x7962,\n          0x944a: 0x5be7,\n          0x944b: 0x8471,\n          0x944c: 0x732b,\n          0x944d: 0x71b1,\n          0x944e: 0x5e74,\n          0x944f: 0x5ff5,\n          0x9450: 0x637b,\n          0x9451: 0x649a,\n          0x9452: 0x71c3,\n          0x9453: 0x7c98,\n          0x9454: 0x4e43,\n          0x9455: 0x5efc,\n          0x9456: 0x4e4b,\n          0x9457: 0x57dc,\n          0x9458: 0x56a2,\n          0x9459: 0x60a9,\n          0x945a: 0x6fc3,\n          0x945b: 0x7d0d,\n          0x945c: 0x80fd,\n          0x945d: 0x8133,\n          0x945e: 0x81bf,\n          0x945f: 0x8fb2,\n          0x9460: 0x8997,\n          0x9461: 0x86a4,\n          0x9462: 0x5df4,\n          0x9463: 0x628a,\n          0x9464: 0x64ad,\n          0x9465: 0x8987,\n          0x9466: 0x6777,\n          0x9467: 0x6ce2,\n          0x9468: 0x6d3e,\n          0x9469: 0x7436,\n          0x946a: 0x7834,\n          0x946b: 0x5a46,\n          0x946c: 0x7f75,\n          0x946d: 0x82ad,\n          0x946e: 0x99ac,\n          0x946f: 0x4ff3,\n          0x9470: 0x5ec3,\n          0x9471: 0x62dd,\n          0x9472: 0x6392,\n          0x9473: 0x6557,\n          0x9474: 0x676f,\n          0x9475: 0x76c3,\n          0x9476: 0x724c,\n          0x9477: 0x80cc,\n          0x9478: 0x80ba,\n          0x9479: 0x8f29,\n          0x947a: 0x914d,\n          0x947b: 0x500d,\n          0x947c: 0x57f9,\n          0x947d: 0x5a92,\n          0x947e: 0x6885,\n          0x9480: 0x6973,\n          0x9481: 0x7164,\n          0x9482: 0x72fd,\n          0x9483: 0x8cb7,\n          0x9484: 0x58f2,\n          0x9485: 0x8ce0,\n          0x9486: 0x966a,\n          0x9487: 0x9019,\n          0x9488: 0x877f,\n          0x9489: 0x79e4,\n          0x948a: 0x77e7,\n          0x948b: 0x8429,\n          0x948c: 0x4f2f,\n          0x948d: 0x5265,\n          0x948e: 0x535a,\n          0x948f: 0x62cd,\n          0x9490: 0x67cf,\n          0x9491: 0x6cca,\n          0x9492: 0x767d,\n          0x9493: 0x7b94,\n          0x9494: 0x7c95,\n          0x9495: 0x8236,\n          0x9496: 0x8584,\n          0x9497: 0x8feb,\n          0x9498: 0x66dd,\n          0x9499: 0x6f20,\n          0x949a: 0x7206,\n          0x949b: 0x7e1b,\n          0x949c: 0x83ab,\n          0x949d: 0x99c1,\n          0x949e: 0x9ea6,\n          0x949f: 0x51fd,\n          0x94a0: 0x7bb1,\n          0x94a1: 0x7872,\n          0x94a2: 0x7bb8,\n          0x94a3: 0x8087,\n          0x94a4: 0x7b48,\n          0x94a5: 0x6ae8,\n          0x94a6: 0x5e61,\n          0x94a7: 0x808c,\n          0x94a8: 0x7551,\n          0x94a9: 0x7560,\n          0x94aa: 0x516b,\n          0x94ab: 0x9262,\n          0x94ac: 0x6e8c,\n          0x94ad: 0x767a,\n          0x94ae: 0x9197,\n          0x94af: 0x9aea,\n          0x94b0: 0x4f10,\n          0x94b1: 0x7f70,\n          0x94b2: 0x629c,\n          0x94b3: 0x7b4f,\n          0x94b4: 0x95a5,\n          0x94b5: 0x9ce9,\n          0x94b6: 0x567a,\n          0x94b7: 0x5859,\n          0x94b8: 0x86e4,\n          0x94b9: 0x96bc,\n          0x94ba: 0x4f34,\n          0x94bb: 0x5224,\n          0x94bc: 0x534a,\n          0x94bd: 0x53cd,\n          0x94be: 0x53db,\n          0x94bf: 0x5e06,\n          0x94c0: 0x642c,\n          0x94c1: 0x6591,\n          0x94c2: 0x677f,\n          0x94c3: 0x6c3e,\n          0x94c4: 0x6c4e,\n          0x94c5: 0x7248,\n          0x94c6: 0x72af,\n          0x94c7: 0x73ed,\n          0x94c8: 0x7554,\n          0x94c9: 0x7e41,\n          0x94ca: 0x822c,\n          0x94cb: 0x85e9,\n          0x94cc: 0x8ca9,\n          0x94cd: 0x7bc4,\n          0x94ce: 0x91c6,\n          0x94cf: 0x7169,\n          0x94d0: 0x9812,\n          0x94d1: 0x98ef,\n          0x94d2: 0x633d,\n          0x94d3: 0x6669,\n          0x94d4: 0x756a,\n          0x94d5: 0x76e4,\n          0x94d6: 0x78d0,\n          0x94d7: 0x8543,\n          0x94d8: 0x86ee,\n          0x94d9: 0x532a,\n          0x94da: 0x5351,\n          0x94db: 0x5426,\n          0x94dc: 0x5983,\n          0x94dd: 0x5e87,\n          0x94de: 0x5f7c,\n          0x94df: 0x60b2,\n          0x94e0: 0x6249,\n          0x94e1: 0x6279,\n          0x94e2: 0x62ab,\n          0x94e3: 0x6590,\n          0x94e4: 0x6bd4,\n          0x94e5: 0x6ccc,\n          0x94e6: 0x75b2,\n          0x94e7: 0x76ae,\n          0x94e8: 0x7891,\n          0x94e9: 0x79d8,\n          0x94ea: 0x7dcb,\n          0x94eb: 0x7f77,\n          0x94ec: 0x80a5,\n          0x94ed: 0x88ab,\n          0x94ee: 0x8ab9,\n          0x94ef: 0x8cbb,\n          0x94f0: 0x907f,\n          0x94f1: 0x975e,\n          0x94f2: 0x98db,\n          0x94f3: 0x6a0b,\n          0x94f4: 0x7c38,\n          0x94f5: 0x5099,\n          0x94f6: 0x5c3e,\n          0x94f7: 0x5fae,\n          0x94f8: 0x6787,\n          0x94f9: 0x6bd8,\n          0x94fa: 0x7435,\n          0x94fb: 0x7709,\n          0x94fc: 0x7f8e,\n          0x9540: 0x9f3b,\n          0x9541: 0x67ca,\n          0x9542: 0x7a17,\n          0x9543: 0x5339,\n          0x9544: 0x758b,\n          0x9545: 0x9aed,\n          0x9546: 0x5f66,\n          0x9547: 0x819d,\n          0x9548: 0x83f1,\n          0x9549: 0x8098,\n          0x954a: 0x5f3c,\n          0x954b: 0x5fc5,\n          0x954c: 0x7562,\n          0x954d: 0x7b46,\n          0x954e: 0x903c,\n          0x954f: 0x6867,\n          0x9550: 0x59eb,\n          0x9551: 0x5a9b,\n          0x9552: 0x7d10,\n          0x9553: 0x767e,\n          0x9554: 0x8b2c,\n          0x9555: 0x4ff5,\n          0x9556: 0x5f6a,\n          0x9557: 0x6a19,\n          0x9558: 0x6c37,\n          0x9559: 0x6f02,\n          0x955a: 0x74e2,\n          0x955b: 0x7968,\n          0x955c: 0x8868,\n          0x955d: 0x8a55,\n          0x955e: 0x8c79,\n          0x955f: 0x5edf,\n          0x9560: 0x63cf,\n          0x9561: 0x75c5,\n          0x9562: 0x79d2,\n          0x9563: 0x82d7,\n          0x9564: 0x9328,\n          0x9565: 0x92f2,\n          0x9566: 0x849c,\n          0x9567: 0x86ed,\n          0x9568: 0x9c2d,\n          0x9569: 0x54c1,\n          0x956a: 0x5f6c,\n          0x956b: 0x658c,\n          0x956c: 0x6d5c,\n          0x956d: 0x7015,\n          0x956e: 0x8ca7,\n          0x956f: 0x8cd3,\n          0x9570: 0x983b,\n          0x9571: 0x654f,\n          0x9572: 0x74f6,\n          0x9573: 0x4e0d,\n          0x9574: 0x4ed8,\n          0x9575: 0x57e0,\n          0x9576: 0x592b,\n          0x9577: 0x5a66,\n          0x9578: 0x5bcc,\n          0x9579: 0x51a8,\n          0x957a: 0x5e03,\n          0x957b: 0x5e9c,\n          0x957c: 0x6016,\n          0x957d: 0x6276,\n          0x957e: 0x6577,\n          0x9580: 0x65a7,\n          0x9581: 0x666e,\n          0x9582: 0x6d6e,\n          0x9583: 0x7236,\n          0x9584: 0x7b26,\n          0x9585: 0x8150,\n          0x9586: 0x819a,\n          0x9587: 0x8299,\n          0x9588: 0x8b5c,\n          0x9589: 0x8ca0,\n          0x958a: 0x8ce6,\n          0x958b: 0x8d74,\n          0x958c: 0x961c,\n          0x958d: 0x9644,\n          0x958e: 0x4fae,\n          0x958f: 0x64ab,\n          0x9590: 0x6b66,\n          0x9591: 0x821e,\n          0x9592: 0x8461,\n          0x9593: 0x856a,\n          0x9594: 0x90e8,\n          0x9595: 0x5c01,\n          0x9596: 0x6953,\n          0x9597: 0x98a8,\n          0x9598: 0x847a,\n          0x9599: 0x8557,\n          0x959a: 0x4f0f,\n          0x959b: 0x526f,\n          0x959c: 0x5fa9,\n          0x959d: 0x5e45,\n          0x959e: 0x670d,\n          0x959f: 0x798f,\n          0x95a0: 0x8179,\n          0x95a1: 0x8907,\n          0x95a2: 0x8986,\n          0x95a3: 0x6df5,\n          0x95a4: 0x5f17,\n          0x95a5: 0x6255,\n          0x95a6: 0x6cb8,\n          0x95a7: 0x4ecf,\n          0x95a8: 0x7269,\n          0x95a9: 0x9b92,\n          0x95aa: 0x5206,\n          0x95ab: 0x543b,\n          0x95ac: 0x5674,\n          0x95ad: 0x58b3,\n          0x95ae: 0x61a4,\n          0x95af: 0x626e,\n          0x95b0: 0x711a,\n          0x95b1: 0x596e,\n          0x95b2: 0x7c89,\n          0x95b3: 0x7cde,\n          0x95b4: 0x7d1b,\n          0x95b5: 0x96f0,\n          0x95b6: 0x6587,\n          0x95b7: 0x805e,\n          0x95b8: 0x4e19,\n          0x95b9: 0x4f75,\n          0x95ba: 0x5175,\n          0x95bb: 0x5840,\n          0x95bc: 0x5e63,\n          0x95bd: 0x5e73,\n          0x95be: 0x5f0a,\n          0x95bf: 0x67c4,\n          0x95c0: 0x4e26,\n          0x95c1: 0x853d,\n          0x95c2: 0x9589,\n          0x95c3: 0x965b,\n          0x95c4: 0x7c73,\n          0x95c5: 0x9801,\n          0x95c6: 0x50fb,\n          0x95c7: 0x58c1,\n          0x95c8: 0x7656,\n          0x95c9: 0x78a7,\n          0x95ca: 0x5225,\n          0x95cb: 0x77a5,\n          0x95cc: 0x8511,\n          0x95cd: 0x7b86,\n          0x95ce: 0x504f,\n          0x95cf: 0x5909,\n          0x95d0: 0x7247,\n          0x95d1: 0x7bc7,\n          0x95d2: 0x7de8,\n          0x95d3: 0x8fba,\n          0x95d4: 0x8fd4,\n          0x95d5: 0x904d,\n          0x95d6: 0x4fbf,\n          0x95d7: 0x52c9,\n          0x95d8: 0x5a29,\n          0x95d9: 0x5f01,\n          0x95da: 0x97ad,\n          0x95db: 0x4fdd,\n          0x95dc: 0x8217,\n          0x95dd: 0x92ea,\n          0x95de: 0x5703,\n          0x95df: 0x6355,\n          0x95e0: 0x6b69,\n          0x95e1: 0x752b,\n          0x95e2: 0x88dc,\n          0x95e3: 0x8f14,\n          0x95e4: 0x7a42,\n          0x95e5: 0x52df,\n          0x95e6: 0x5893,\n          0x95e7: 0x6155,\n          0x95e8: 0x620a,\n          0x95e9: 0x66ae,\n          0x95ea: 0x6bcd,\n          0x95eb: 0x7c3f,\n          0x95ec: 0x83e9,\n          0x95ed: 0x5023,\n          0x95ee: 0x4ff8,\n          0x95ef: 0x5305,\n          0x95f0: 0x5446,\n          0x95f1: 0x5831,\n          0x95f2: 0x5949,\n          0x95f3: 0x5b9d,\n          0x95f4: 0x5cf0,\n          0x95f5: 0x5cef,\n          0x95f6: 0x5d29,\n          0x95f7: 0x5e96,\n          0x95f8: 0x62b1,\n          0x95f9: 0x6367,\n          0x95fa: 0x653e,\n          0x95fb: 0x65b9,\n          0x95fc: 0x670b,\n          0x9640: 0x6cd5,\n          0x9641: 0x6ce1,\n          0x9642: 0x70f9,\n          0x9643: 0x7832,\n          0x9644: 0x7e2b,\n          0x9645: 0x80de,\n          0x9646: 0x82b3,\n          0x9647: 0x840c,\n          0x9648: 0x84ec,\n          0x9649: 0x8702,\n          0x964a: 0x8912,\n          0x964b: 0x8a2a,\n          0x964c: 0x8c4a,\n          0x964d: 0x90a6,\n          0x964e: 0x92d2,\n          0x964f: 0x98fd,\n          0x9650: 0x9cf3,\n          0x9651: 0x9d6c,\n          0x9652: 0x4e4f,\n          0x9653: 0x4ea1,\n          0x9654: 0x508d,\n          0x9655: 0x5256,\n          0x9656: 0x574a,\n          0x9657: 0x59a8,\n          0x9658: 0x5e3d,\n          0x9659: 0x5fd8,\n          0x965a: 0x5fd9,\n          0x965b: 0x623f,\n          0x965c: 0x66b4,\n          0x965d: 0x671b,\n          0x965e: 0x67d0,\n          0x965f: 0x68d2,\n          0x9660: 0x5192,\n          0x9661: 0x7d21,\n          0x9662: 0x80aa,\n          0x9663: 0x81a8,\n          0x9664: 0x8b00,\n          0x9665: 0x8c8c,\n          0x9666: 0x8cbf,\n          0x9667: 0x927e,\n          0x9668: 0x9632,\n          0x9669: 0x5420,\n          0x966a: 0x982c,\n          0x966b: 0x5317,\n          0x966c: 0x50d5,\n          0x966d: 0x535c,\n          0x966e: 0x58a8,\n          0x966f: 0x64b2,\n          0x9670: 0x6734,\n          0x9671: 0x7267,\n          0x9672: 0x7766,\n          0x9673: 0x7a46,\n          0x9674: 0x91e6,\n          0x9675: 0x52c3,\n          0x9676: 0x6ca1,\n          0x9677: 0x6b86,\n          0x9678: 0x5800,\n          0x9679: 0x5e4c,\n          0x967a: 0x5954,\n          0x967b: 0x672c,\n          0x967c: 0x7ffb,\n          0x967d: 0x51e1,\n          0x967e: 0x76c6,\n          0x9680: 0x6469,\n          0x9681: 0x78e8,\n          0x9682: 0x9b54,\n          0x9683: 0x9ebb,\n          0x9684: 0x57cb,\n          0x9685: 0x59b9,\n          0x9686: 0x6627,\n          0x9687: 0x679a,\n          0x9688: 0x6bce,\n          0x9689: 0x54e9,\n          0x968a: 0x69d9,\n          0x968b: 0x5e55,\n          0x968c: 0x819c,\n          0x968d: 0x6795,\n          0x968e: 0x9baa,\n          0x968f: 0x67fe,\n          0x9690: 0x9c52,\n          0x9691: 0x685d,\n          0x9692: 0x4ea6,\n          0x9693: 0x4fe3,\n          0x9694: 0x53c8,\n          0x9695: 0x62b9,\n          0x9696: 0x672b,\n          0x9697: 0x6cab,\n          0x9698: 0x8fc4,\n          0x9699: 0x4fad,\n          0x969a: 0x7e6d,\n          0x969b: 0x9ebf,\n          0x969c: 0x4e07,\n          0x969d: 0x6162,\n          0x969e: 0x6e80,\n          0x969f: 0x6f2b,\n          0x96a0: 0x8513,\n          0x96a1: 0x5473,\n          0x96a2: 0x672a,\n          0x96a3: 0x9b45,\n          0x96a4: 0x5df3,\n          0x96a5: 0x7b95,\n          0x96a6: 0x5cac,\n          0x96a7: 0x5bc6,\n          0x96a8: 0x871c,\n          0x96a9: 0x6e4a,\n          0x96aa: 0x84d1,\n          0x96ab: 0x7a14,\n          0x96ac: 0x8108,\n          0x96ad: 0x5999,\n          0x96ae: 0x7c8d,\n          0x96af: 0x6c11,\n          0x96b0: 0x7720,\n          0x96b1: 0x52d9,\n          0x96b2: 0x5922,\n          0x96b3: 0x7121,\n          0x96b4: 0x725f,\n          0x96b5: 0x77db,\n          0x96b6: 0x9727,\n          0x96b7: 0x9d61,\n          0x96b8: 0x690b,\n          0x96b9: 0x5a7f,\n          0x96ba: 0x5a18,\n          0x96bb: 0x51a5,\n          0x96bc: 0x540d,\n          0x96bd: 0x547d,\n          0x96be: 0x660e,\n          0x96bf: 0x76df,\n          0x96c0: 0x8ff7,\n          0x96c1: 0x9298,\n          0x96c2: 0x9cf4,\n          0x96c3: 0x59ea,\n          0x96c4: 0x725d,\n          0x96c5: 0x6ec5,\n          0x96c6: 0x514d,\n          0x96c7: 0x68c9,\n          0x96c8: 0x7dbf,\n          0x96c9: 0x7dec,\n          0x96ca: 0x9762,\n          0x96cb: 0x9eba,\n          0x96cc: 0x6478,\n          0x96cd: 0x6a21,\n          0x96ce: 0x8302,\n          0x96cf: 0x5984,\n          0x96d0: 0x5b5f,\n          0x96d1: 0x6bdb,\n          0x96d2: 0x731b,\n          0x96d3: 0x76f2,\n          0x96d4: 0x7db2,\n          0x96d5: 0x8017,\n          0x96d6: 0x8499,\n          0x96d7: 0x5132,\n          0x96d8: 0x6728,\n          0x96d9: 0x9ed9,\n          0x96da: 0x76ee,\n          0x96db: 0x6762,\n          0x96dc: 0x52ff,\n          0x96dd: 0x9905,\n          0x96de: 0x5c24,\n          0x96df: 0x623b,\n          0x96e0: 0x7c7e,\n          0x96e1: 0x8cb0,\n          0x96e2: 0x554f,\n          0x96e3: 0x60b6,\n          0x96e4: 0x7d0b,\n          0x96e5: 0x9580,\n          0x96e6: 0x5301,\n          0x96e7: 0x4e5f,\n          0x96e8: 0x51b6,\n          0x96e9: 0x591c,\n          0x96ea: 0x723a,\n          0x96eb: 0x8036,\n          0x96ec: 0x91ce,\n          0x96ed: 0x5f25,\n          0x96ee: 0x77e2,\n          0x96ef: 0x5384,\n          0x96f0: 0x5f79,\n          0x96f1: 0x7d04,\n          0x96f2: 0x85ac,\n          0x96f3: 0x8a33,\n          0x96f4: 0x8e8d,\n          0x96f5: 0x9756,\n          0x96f6: 0x67f3,\n          0x96f7: 0x85ae,\n          0x96f8: 0x9453,\n          0x96f9: 0x6109,\n          0x96fa: 0x6108,\n          0x96fb: 0x6cb9,\n          0x96fc: 0x7652,\n          0x9740: 0x8aed,\n          0x9741: 0x8f38,\n          0x9742: 0x552f,\n          0x9743: 0x4f51,\n          0x9744: 0x512a,\n          0x9745: 0x52c7,\n          0x9746: 0x53cb,\n          0x9747: 0x5ba5,\n          0x9748: 0x5e7d,\n          0x9749: 0x60a0,\n          0x974a: 0x6182,\n          0x974b: 0x63d6,\n          0x974c: 0x6709,\n          0x974d: 0x67da,\n          0x974e: 0x6e67,\n          0x974f: 0x6d8c,\n          0x9750: 0x7336,\n          0x9751: 0x7337,\n          0x9752: 0x7531,\n          0x9753: 0x7950,\n          0x9754: 0x88d5,\n          0x9755: 0x8a98,\n          0x9756: 0x904a,\n          0x9757: 0x9091,\n          0x9758: 0x90f5,\n          0x9759: 0x96c4,\n          0x975a: 0x878d,\n          0x975b: 0x5915,\n          0x975c: 0x4e88,\n          0x975d: 0x4f59,\n          0x975e: 0x4e0e,\n          0x975f: 0x8a89,\n          0x9760: 0x8f3f,\n          0x9761: 0x9810,\n          0x9762: 0x50ad,\n          0x9763: 0x5e7c,\n          0x9764: 0x5996,\n          0x9765: 0x5bb9,\n          0x9766: 0x5eb8,\n          0x9767: 0x63da,\n          0x9768: 0x63fa,\n          0x9769: 0x64c1,\n          0x976a: 0x66dc,\n          0x976b: 0x694a,\n          0x976c: 0x69d8,\n          0x976d: 0x6d0b,\n          0x976e: 0x6eb6,\n          0x976f: 0x7194,\n          0x9770: 0x7528,\n          0x9771: 0x7aaf,\n          0x9772: 0x7f8a,\n          0x9773: 0x8000,\n          0x9774: 0x8449,\n          0x9775: 0x84c9,\n          0x9776: 0x8981,\n          0x9777: 0x8b21,\n          0x9778: 0x8e0a,\n          0x9779: 0x9065,\n          0x977a: 0x967d,\n          0x977b: 0x990a,\n          0x977c: 0x617e,\n          0x977d: 0x6291,\n          0x977e: 0x6b32,\n          0x9780: 0x6c83,\n          0x9781: 0x6d74,\n          0x9782: 0x7fcc,\n          0x9783: 0x7ffc,\n          0x9784: 0x6dc0,\n          0x9785: 0x7f85,\n          0x9786: 0x87ba,\n          0x9787: 0x88f8,\n          0x9788: 0x6765,\n          0x9789: 0x83b1,\n          0x978a: 0x983c,\n          0x978b: 0x96f7,\n          0x978c: 0x6d1b,\n          0x978d: 0x7d61,\n          0x978e: 0x843d,\n          0x978f: 0x916a,\n          0x9790: 0x4e71,\n          0x9791: 0x5375,\n          0x9792: 0x5d50,\n          0x9793: 0x6b04,\n          0x9794: 0x6feb,\n          0x9795: 0x85cd,\n          0x9796: 0x862d,\n          0x9797: 0x89a7,\n          0x9798: 0x5229,\n          0x9799: 0x540f,\n          0x979a: 0x5c65,\n          0x979b: 0x674e,\n          0x979c: 0x68a8,\n          0x979d: 0x7406,\n          0x979e: 0x7483,\n          0x979f: 0x75e2,\n          0x97a0: 0x88cf,\n          0x97a1: 0x88e1,\n          0x97a2: 0x91cc,\n          0x97a3: 0x96e2,\n          0x97a4: 0x9678,\n          0x97a5: 0x5f8b,\n          0x97a6: 0x7387,\n          0x97a7: 0x7acb,\n          0x97a8: 0x844e,\n          0x97a9: 0x63a0,\n          0x97aa: 0x7565,\n          0x97ab: 0x5289,\n          0x97ac: 0x6d41,\n          0x97ad: 0x6e9c,\n          0x97ae: 0x7409,\n          0x97af: 0x7559,\n          0x97b0: 0x786b,\n          0x97b1: 0x7c92,\n          0x97b2: 0x9686,\n          0x97b3: 0x7adc,\n          0x97b4: 0x9f8d,\n          0x97b5: 0x4fb6,\n          0x97b6: 0x616e,\n          0x97b7: 0x65c5,\n          0x97b8: 0x865c,\n          0x97b9: 0x4e86,\n          0x97ba: 0x4eae,\n          0x97bb: 0x50da,\n          0x97bc: 0x4e21,\n          0x97bd: 0x51cc,\n          0x97be: 0x5bee,\n          0x97bf: 0x6599,\n          0x97c0: 0x6881,\n          0x97c1: 0x6dbc,\n          0x97c2: 0x731f,\n          0x97c3: 0x7642,\n          0x97c4: 0x77ad,\n          0x97c5: 0x7a1c,\n          0x97c6: 0x7ce7,\n          0x97c7: 0x826f,\n          0x97c8: 0x8ad2,\n          0x97c9: 0x907c,\n          0x97ca: 0x91cf,\n          0x97cb: 0x9675,\n          0x97cc: 0x9818,\n          0x97cd: 0x529b,\n          0x97ce: 0x7dd1,\n          0x97cf: 0x502b,\n          0x97d0: 0x5398,\n          0x97d1: 0x6797,\n          0x97d2: 0x6dcb,\n          0x97d3: 0x71d0,\n          0x97d4: 0x7433,\n          0x97d5: 0x81e8,\n          0x97d6: 0x8f2a,\n          0x97d7: 0x96a3,\n          0x97d8: 0x9c57,\n          0x97d9: 0x9e9f,\n          0x97da: 0x7460,\n          0x97db: 0x5841,\n          0x97dc: 0x6d99,\n          0x97dd: 0x7d2f,\n          0x97de: 0x985e,\n          0x97df: 0x4ee4,\n          0x97e0: 0x4f36,\n          0x97e1: 0x4f8b,\n          0x97e2: 0x51b7,\n          0x97e3: 0x52b1,\n          0x97e4: 0x5dba,\n          0x97e5: 0x601c,\n          0x97e6: 0x73b2,\n          0x97e7: 0x793c,\n          0x97e8: 0x82d3,\n          0x97e9: 0x9234,\n          0x97ea: 0x96b7,\n          0x97eb: 0x96f6,\n          0x97ec: 0x970a,\n          0x97ed: 0x9e97,\n          0x97ee: 0x9f62,\n          0x97ef: 0x66a6,\n          0x97f0: 0x6b74,\n          0x97f1: 0x5217,\n          0x97f2: 0x52a3,\n          0x97f3: 0x70c8,\n          0x97f4: 0x88c2,\n          0x97f5: 0x5ec9,\n          0x97f6: 0x604b,\n          0x97f7: 0x6190,\n          0x97f8: 0x6f23,\n          0x97f9: 0x7149,\n          0x97fa: 0x7c3e,\n          0x97fb: 0x7df4,\n          0x97fc: 0x806f,\n          0x9840: 0x84ee,\n          0x9841: 0x9023,\n          0x9842: 0x932c,\n          0x9843: 0x5442,\n          0x9844: 0x9b6f,\n          0x9845: 0x6ad3,\n          0x9846: 0x7089,\n          0x9847: 0x8cc2,\n          0x9848: 0x8def,\n          0x9849: 0x9732,\n          0x984a: 0x52b4,\n          0x984b: 0x5a41,\n          0x984c: 0x5eca,\n          0x984d: 0x5f04,\n          0x984e: 0x6717,\n          0x984f: 0x697c,\n          0x9850: 0x6994,\n          0x9851: 0x6d6a,\n          0x9852: 0x6f0f,\n          0x9853: 0x7262,\n          0x9854: 0x72fc,\n          0x9855: 0x7bed,\n          0x9856: 0x8001,\n          0x9857: 0x807e,\n          0x9858: 0x874b,\n          0x9859: 0x90ce,\n          0x985a: 0x516d,\n          0x985b: 0x9e93,\n          0x985c: 0x7984,\n          0x985d: 0x808b,\n          0x985e: 0x9332,\n          0x985f: 0x8ad6,\n          0x9860: 0x502d,\n          0x9861: 0x548c,\n          0x9862: 0x8a71,\n          0x9863: 0x6b6a,\n          0x9864: 0x8cc4,\n          0x9865: 0x8107,\n          0x9866: 0x60d1,\n          0x9867: 0x67a0,\n          0x9868: 0x9df2,\n          0x9869: 0x4e99,\n          0x986a: 0x4e98,\n          0x986b: 0x9c10,\n          0x986c: 0x8a6b,\n          0x986d: 0x85c1,\n          0x986e: 0x8568,\n          0x986f: 0x6900,\n          0x9870: 0x6e7e,\n          0x9871: 0x7897,\n          0x9872: 0x8155,\n          0x989f: 0x5f0c,\n          0x98a0: 0x4e10,\n          0x98a1: 0x4e15,\n          0x98a2: 0x4e2a,\n          0x98a3: 0x4e31,\n          0x98a4: 0x4e36,\n          0x98a5: 0x4e3c,\n          0x98a6: 0x4e3f,\n          0x98a7: 0x4e42,\n          0x98a8: 0x4e56,\n          0x98a9: 0x4e58,\n          0x98aa: 0x4e82,\n          0x98ab: 0x4e85,\n          0x98ac: 0x8c6b,\n          0x98ad: 0x4e8a,\n          0x98ae: 0x8212,\n          0x98af: 0x5f0d,\n          0x98b0: 0x4e8e,\n          0x98b1: 0x4e9e,\n          0x98b2: 0x4e9f,\n          0x98b3: 0x4ea0,\n          0x98b4: 0x4ea2,\n          0x98b5: 0x4eb0,\n          0x98b6: 0x4eb3,\n          0x98b7: 0x4eb6,\n          0x98b8: 0x4ece,\n          0x98b9: 0x4ecd,\n          0x98ba: 0x4ec4,\n          0x98bb: 0x4ec6,\n          0x98bc: 0x4ec2,\n          0x98bd: 0x4ed7,\n          0x98be: 0x4ede,\n          0x98bf: 0x4eed,\n          0x98c0: 0x4edf,\n          0x98c1: 0x4ef7,\n          0x98c2: 0x4f09,\n          0x98c3: 0x4f5a,\n          0x98c4: 0x4f30,\n          0x98c5: 0x4f5b,\n          0x98c6: 0x4f5d,\n          0x98c7: 0x4f57,\n          0x98c8: 0x4f47,\n          0x98c9: 0x4f76,\n          0x98ca: 0x4f88,\n          0x98cb: 0x4f8f,\n          0x98cc: 0x4f98,\n          0x98cd: 0x4f7b,\n          0x98ce: 0x4f69,\n          0x98cf: 0x4f70,\n          0x98d0: 0x4f91,\n          0x98d1: 0x4f6f,\n          0x98d2: 0x4f86,\n          0x98d3: 0x4f96,\n          0x98d4: 0x5118,\n          0x98d5: 0x4fd4,\n          0x98d6: 0x4fdf,\n          0x98d7: 0x4fce,\n          0x98d8: 0x4fd8,\n          0x98d9: 0x4fdb,\n          0x98da: 0x4fd1,\n          0x98db: 0x4fda,\n          0x98dc: 0x4fd0,\n          0x98dd: 0x4fe4,\n          0x98de: 0x4fe5,\n          0x98df: 0x501a,\n          0x98e0: 0x5028,\n          0x98e1: 0x5014,\n          0x98e2: 0x502a,\n          0x98e3: 0x5025,\n          0x98e4: 0x5005,\n          0x98e5: 0x4f1c,\n          0x98e6: 0x4ff6,\n          0x98e7: 0x5021,\n          0x98e8: 0x5029,\n          0x98e9: 0x502c,\n          0x98ea: 0x4ffe,\n          0x98eb: 0x4fef,\n          0x98ec: 0x5011,\n          0x98ed: 0x5006,\n          0x98ee: 0x5043,\n          0x98ef: 0x5047,\n          0x98f0: 0x6703,\n          0x98f1: 0x5055,\n          0x98f2: 0x5050,\n          0x98f3: 0x5048,\n          0x98f4: 0x505a,\n          0x98f5: 0x5056,\n          0x98f6: 0x506c,\n          0x98f7: 0x5078,\n          0x98f8: 0x5080,\n          0x98f9: 0x509a,\n          0x98fa: 0x5085,\n          0x98fb: 0x50b4,\n          0x98fc: 0x50b2,\n          0x9940: 0x50c9,\n          0x9941: 0x50ca,\n          0x9942: 0x50b3,\n          0x9943: 0x50c2,\n          0x9944: 0x50d6,\n          0x9945: 0x50de,\n          0x9946: 0x50e5,\n          0x9947: 0x50ed,\n          0x9948: 0x50e3,\n          0x9949: 0x50ee,\n          0x994a: 0x50f9,\n          0x994b: 0x50f5,\n          0x994c: 0x5109,\n          0x994d: 0x5101,\n          0x994e: 0x5102,\n          0x994f: 0x5116,\n          0x9950: 0x5115,\n          0x9951: 0x5114,\n          0x9952: 0x511a,\n          0x9953: 0x5121,\n          0x9954: 0x513a,\n          0x9955: 0x5137,\n          0x9956: 0x513c,\n          0x9957: 0x513b,\n          0x9958: 0x513f,\n          0x9959: 0x5140,\n          0x995a: 0x5152,\n          0x995b: 0x514c,\n          0x995c: 0x5154,\n          0x995d: 0x5162,\n          0x995e: 0x7af8,\n          0x995f: 0x5169,\n          0x9960: 0x516a,\n          0x9961: 0x516e,\n          0x9962: 0x5180,\n          0x9963: 0x5182,\n          0x9964: 0x56d8,\n          0x9965: 0x518c,\n          0x9966: 0x5189,\n          0x9967: 0x518f,\n          0x9968: 0x5191,\n          0x9969: 0x5193,\n          0x996a: 0x5195,\n          0x996b: 0x5196,\n          0x996c: 0x51a4,\n          0x996d: 0x51a6,\n          0x996e: 0x51a2,\n          0x996f: 0x51a9,\n          0x9970: 0x51aa,\n          0x9971: 0x51ab,\n          0x9972: 0x51b3,\n          0x9973: 0x51b1,\n          0x9974: 0x51b2,\n          0x9975: 0x51b0,\n          0x9976: 0x51b5,\n          0x9977: 0x51bd,\n          0x9978: 0x51c5,\n          0x9979: 0x51c9,\n          0x997a: 0x51db,\n          0x997b: 0x51e0,\n          0x997c: 0x8655,\n          0x997d: 0x51e9,\n          0x997e: 0x51ed,\n          0x9980: 0x51f0,\n          0x9981: 0x51f5,\n          0x9982: 0x51fe,\n          0x9983: 0x5204,\n          0x9984: 0x520b,\n          0x9985: 0x5214,\n          0x9986: 0x520e,\n          0x9987: 0x5227,\n          0x9988: 0x522a,\n          0x9989: 0x522e,\n          0x998a: 0x5233,\n          0x998b: 0x5239,\n          0x998c: 0x524f,\n          0x998d: 0x5244,\n          0x998e: 0x524b,\n          0x998f: 0x524c,\n          0x9990: 0x525e,\n          0x9991: 0x5254,\n          0x9992: 0x526a,\n          0x9993: 0x5274,\n          0x9994: 0x5269,\n          0x9995: 0x5273,\n          0x9996: 0x527f,\n          0x9997: 0x527d,\n          0x9998: 0x528d,\n          0x9999: 0x5294,\n          0x999a: 0x5292,\n          0x999b: 0x5271,\n          0x999c: 0x5288,\n          0x999d: 0x5291,\n          0x999e: 0x8fa8,\n          0x999f: 0x8fa7,\n          0x99a0: 0x52ac,\n          0x99a1: 0x52ad,\n          0x99a2: 0x52bc,\n          0x99a3: 0x52b5,\n          0x99a4: 0x52c1,\n          0x99a5: 0x52cd,\n          0x99a6: 0x52d7,\n          0x99a7: 0x52de,\n          0x99a8: 0x52e3,\n          0x99a9: 0x52e6,\n          0x99aa: 0x98ed,\n          0x99ab: 0x52e0,\n          0x99ac: 0x52f3,\n          0x99ad: 0x52f5,\n          0x99ae: 0x52f8,\n          0x99af: 0x52f9,\n          0x99b0: 0x5306,\n          0x99b1: 0x5308,\n          0x99b2: 0x7538,\n          0x99b3: 0x530d,\n          0x99b4: 0x5310,\n          0x99b5: 0x530f,\n          0x99b6: 0x5315,\n          0x99b7: 0x531a,\n          0x99b8: 0x5323,\n          0x99b9: 0x532f,\n          0x99ba: 0x5331,\n          0x99bb: 0x5333,\n          0x99bc: 0x5338,\n          0x99bd: 0x5340,\n          0x99be: 0x5346,\n          0x99bf: 0x5345,\n          0x99c0: 0x4e17,\n          0x99c1: 0x5349,\n          0x99c2: 0x534d,\n          0x99c3: 0x51d6,\n          0x99c4: 0x535e,\n          0x99c5: 0x5369,\n          0x99c6: 0x536e,\n          0x99c7: 0x5918,\n          0x99c8: 0x537b,\n          0x99c9: 0x5377,\n          0x99ca: 0x5382,\n          0x99cb: 0x5396,\n          0x99cc: 0x53a0,\n          0x99cd: 0x53a6,\n          0x99ce: 0x53a5,\n          0x99cf: 0x53ae,\n          0x99d0: 0x53b0,\n          0x99d1: 0x53b6,\n          0x99d2: 0x53c3,\n          0x99d3: 0x7c12,\n          0x99d4: 0x96d9,\n          0x99d5: 0x53df,\n          0x99d6: 0x66fc,\n          0x99d7: 0x71ee,\n          0x99d8: 0x53ee,\n          0x99d9: 0x53e8,\n          0x99da: 0x53ed,\n          0x99db: 0x53fa,\n          0x99dc: 0x5401,\n          0x99dd: 0x543d,\n          0x99de: 0x5440,\n          0x99df: 0x542c,\n          0x99e0: 0x542d,\n          0x99e1: 0x543c,\n          0x99e2: 0x542e,\n          0x99e3: 0x5436,\n          0x99e4: 0x5429,\n          0x99e5: 0x541d,\n          0x99e6: 0x544e,\n          0x99e7: 0x548f,\n          0x99e8: 0x5475,\n          0x99e9: 0x548e,\n          0x99ea: 0x545f,\n          0x99eb: 0x5471,\n          0x99ec: 0x5477,\n          0x99ed: 0x5470,\n          0x99ee: 0x5492,\n          0x99ef: 0x547b,\n          0x99f0: 0x5480,\n          0x99f1: 0x5476,\n          0x99f2: 0x5484,\n          0x99f3: 0x5490,\n          0x99f4: 0x5486,\n          0x99f5: 0x54c7,\n          0x99f6: 0x54a2,\n          0x99f7: 0x54b8,\n          0x99f8: 0x54a5,\n          0x99f9: 0x54ac,\n          0x99fa: 0x54c4,\n          0x99fb: 0x54c8,\n          0x99fc: 0x54a8,\n          0x9a40: 0x54ab,\n          0x9a41: 0x54c2,\n          0x9a42: 0x54a4,\n          0x9a43: 0x54be,\n          0x9a44: 0x54bc,\n          0x9a45: 0x54d8,\n          0x9a46: 0x54e5,\n          0x9a47: 0x54e6,\n          0x9a48: 0x550f,\n          0x9a49: 0x5514,\n          0x9a4a: 0x54fd,\n          0x9a4b: 0x54ee,\n          0x9a4c: 0x54ed,\n          0x9a4d: 0x54fa,\n          0x9a4e: 0x54e2,\n          0x9a4f: 0x5539,\n          0x9a50: 0x5540,\n          0x9a51: 0x5563,\n          0x9a52: 0x554c,\n          0x9a53: 0x552e,\n          0x9a54: 0x555c,\n          0x9a55: 0x5545,\n          0x9a56: 0x5556,\n          0x9a57: 0x5557,\n          0x9a58: 0x5538,\n          0x9a59: 0x5533,\n          0x9a5a: 0x555d,\n          0x9a5b: 0x5599,\n          0x9a5c: 0x5580,\n          0x9a5d: 0x54af,\n          0x9a5e: 0x558a,\n          0x9a5f: 0x559f,\n          0x9a60: 0x557b,\n          0x9a61: 0x557e,\n          0x9a62: 0x5598,\n          0x9a63: 0x559e,\n          0x9a64: 0x55ae,\n          0x9a65: 0x557c,\n          0x9a66: 0x5583,\n          0x9a67: 0x55a9,\n          0x9a68: 0x5587,\n          0x9a69: 0x55a8,\n          0x9a6a: 0x55da,\n          0x9a6b: 0x55c5,\n          0x9a6c: 0x55df,\n          0x9a6d: 0x55c4,\n          0x9a6e: 0x55dc,\n          0x9a6f: 0x55e4,\n          0x9a70: 0x55d4,\n          0x9a71: 0x5614,\n          0x9a72: 0x55f7,\n          0x9a73: 0x5616,\n          0x9a74: 0x55fe,\n          0x9a75: 0x55fd,\n          0x9a76: 0x561b,\n          0x9a77: 0x55f9,\n          0x9a78: 0x564e,\n          0x9a79: 0x5650,\n          0x9a7a: 0x71df,\n          0x9a7b: 0x5634,\n          0x9a7c: 0x5636,\n          0x9a7d: 0x5632,\n          0x9a7e: 0x5638,\n          0x9a80: 0x566b,\n          0x9a81: 0x5664,\n          0x9a82: 0x562f,\n          0x9a83: 0x566c,\n          0x9a84: 0x566a,\n          0x9a85: 0x5686,\n          0x9a86: 0x5680,\n          0x9a87: 0x568a,\n          0x9a88: 0x56a0,\n          0x9a89: 0x5694,\n          0x9a8a: 0x568f,\n          0x9a8b: 0x56a5,\n          0x9a8c: 0x56ae,\n          0x9a8d: 0x56b6,\n          0x9a8e: 0x56b4,\n          0x9a8f: 0x56c2,\n          0x9a90: 0x56bc,\n          0x9a91: 0x56c1,\n          0x9a92: 0x56c3,\n          0x9a93: 0x56c0,\n          0x9a94: 0x56c8,\n          0x9a95: 0x56ce,\n          0x9a96: 0x56d1,\n          0x9a97: 0x56d3,\n          0x9a98: 0x56d7,\n          0x9a99: 0x56ee,\n          0x9a9a: 0x56f9,\n          0x9a9b: 0x5700,\n          0x9a9c: 0x56ff,\n          0x9a9d: 0x5704,\n          0x9a9e: 0x5709,\n          0x9a9f: 0x5708,\n          0x9aa0: 0x570b,\n          0x9aa1: 0x570d,\n          0x9aa2: 0x5713,\n          0x9aa3: 0x5718,\n          0x9aa4: 0x5716,\n          0x9aa5: 0x55c7,\n          0x9aa6: 0x571c,\n          0x9aa7: 0x5726,\n          0x9aa8: 0x5737,\n          0x9aa9: 0x5738,\n          0x9aaa: 0x574e,\n          0x9aab: 0x573b,\n          0x9aac: 0x5740,\n          0x9aad: 0x574f,\n          0x9aae: 0x5769,\n          0x9aaf: 0x57c0,\n          0x9ab0: 0x5788,\n          0x9ab1: 0x5761,\n          0x9ab2: 0x577f,\n          0x9ab3: 0x5789,\n          0x9ab4: 0x5793,\n          0x9ab5: 0x57a0,\n          0x9ab6: 0x57b3,\n          0x9ab7: 0x57a4,\n          0x9ab8: 0x57aa,\n          0x9ab9: 0x57b0,\n          0x9aba: 0x57c3,\n          0x9abb: 0x57c6,\n          0x9abc: 0x57d4,\n          0x9abd: 0x57d2,\n          0x9abe: 0x57d3,\n          0x9abf: 0x580a,\n          0x9ac0: 0x57d6,\n          0x9ac1: 0x57e3,\n          0x9ac2: 0x580b,\n          0x9ac3: 0x5819,\n          0x9ac4: 0x581d,\n          0x9ac5: 0x5872,\n          0x9ac6: 0x5821,\n          0x9ac7: 0x5862,\n          0x9ac8: 0x584b,\n          0x9ac9: 0x5870,\n          0x9aca: 0x6bc0,\n          0x9acb: 0x5852,\n          0x9acc: 0x583d,\n          0x9acd: 0x5879,\n          0x9ace: 0x5885,\n          0x9acf: 0x58b9,\n          0x9ad0: 0x589f,\n          0x9ad1: 0x58ab,\n          0x9ad2: 0x58ba,\n          0x9ad3: 0x58de,\n          0x9ad4: 0x58bb,\n          0x9ad5: 0x58b8,\n          0x9ad6: 0x58ae,\n          0x9ad7: 0x58c5,\n          0x9ad8: 0x58d3,\n          0x9ad9: 0x58d1,\n          0x9ada: 0x58d7,\n          0x9adb: 0x58d9,\n          0x9adc: 0x58d8,\n          0x9add: 0x58e5,\n          0x9ade: 0x58dc,\n          0x9adf: 0x58e4,\n          0x9ae0: 0x58df,\n          0x9ae1: 0x58ef,\n          0x9ae2: 0x58fa,\n          0x9ae3: 0x58f9,\n          0x9ae4: 0x58fb,\n          0x9ae5: 0x58fc,\n          0x9ae6: 0x58fd,\n          0x9ae7: 0x5902,\n          0x9ae8: 0x590a,\n          0x9ae9: 0x5910,\n          0x9aea: 0x591b,\n          0x9aeb: 0x68a6,\n          0x9aec: 0x5925,\n          0x9aed: 0x592c,\n          0x9aee: 0x592d,\n          0x9aef: 0x5932,\n          0x9af0: 0x5938,\n          0x9af1: 0x593e,\n          0x9af2: 0x7ad2,\n          0x9af3: 0x5955,\n          0x9af4: 0x5950,\n          0x9af5: 0x594e,\n          0x9af6: 0x595a,\n          0x9af7: 0x5958,\n          0x9af8: 0x5962,\n          0x9af9: 0x5960,\n          0x9afa: 0x5967,\n          0x9afb: 0x596c,\n          0x9afc: 0x5969,\n          0x9b40: 0x5978,\n          0x9b41: 0x5981,\n          0x9b42: 0x599d,\n          0x9b43: 0x4f5e,\n          0x9b44: 0x4fab,\n          0x9b45: 0x59a3,\n          0x9b46: 0x59b2,\n          0x9b47: 0x59c6,\n          0x9b48: 0x59e8,\n          0x9b49: 0x59dc,\n          0x9b4a: 0x598d,\n          0x9b4b: 0x59d9,\n          0x9b4c: 0x59da,\n          0x9b4d: 0x5a25,\n          0x9b4e: 0x5a1f,\n          0x9b4f: 0x5a11,\n          0x9b50: 0x5a1c,\n          0x9b51: 0x5a09,\n          0x9b52: 0x5a1a,\n          0x9b53: 0x5a40,\n          0x9b54: 0x5a6c,\n          0x9b55: 0x5a49,\n          0x9b56: 0x5a35,\n          0x9b57: 0x5a36,\n          0x9b58: 0x5a62,\n          0x9b59: 0x5a6a,\n          0x9b5a: 0x5a9a,\n          0x9b5b: 0x5abc,\n          0x9b5c: 0x5abe,\n          0x9b5d: 0x5acb,\n          0x9b5e: 0x5ac2,\n          0x9b5f: 0x5abd,\n          0x9b60: 0x5ae3,\n          0x9b61: 0x5ad7,\n          0x9b62: 0x5ae6,\n          0x9b63: 0x5ae9,\n          0x9b64: 0x5ad6,\n          0x9b65: 0x5afa,\n          0x9b66: 0x5afb,\n          0x9b67: 0x5b0c,\n          0x9b68: 0x5b0b,\n          0x9b69: 0x5b16,\n          0x9b6a: 0x5b32,\n          0x9b6b: 0x5ad0,\n          0x9b6c: 0x5b2a,\n          0x9b6d: 0x5b36,\n          0x9b6e: 0x5b3e,\n          0x9b6f: 0x5b43,\n          0x9b70: 0x5b45,\n          0x9b71: 0x5b40,\n          0x9b72: 0x5b51,\n          0x9b73: 0x5b55,\n          0x9b74: 0x5b5a,\n          0x9b75: 0x5b5b,\n          0x9b76: 0x5b65,\n          0x9b77: 0x5b69,\n          0x9b78: 0x5b70,\n          0x9b79: 0x5b73,\n          0x9b7a: 0x5b75,\n          0x9b7b: 0x5b78,\n          0x9b7c: 0x6588,\n          0x9b7d: 0x5b7a,\n          0x9b7e: 0x5b80,\n          0x9b80: 0x5b83,\n          0x9b81: 0x5ba6,\n          0x9b82: 0x5bb8,\n          0x9b83: 0x5bc3,\n          0x9b84: 0x5bc7,\n          0x9b85: 0x5bc9,\n          0x9b86: 0x5bd4,\n          0x9b87: 0x5bd0,\n          0x9b88: 0x5be4,\n          0x9b89: 0x5be6,\n          0x9b8a: 0x5be2,\n          0x9b8b: 0x5bde,\n          0x9b8c: 0x5be5,\n          0x9b8d: 0x5beb,\n          0x9b8e: 0x5bf0,\n          0x9b8f: 0x5bf6,\n          0x9b90: 0x5bf3,\n          0x9b91: 0x5c05,\n          0x9b92: 0x5c07,\n          0x9b93: 0x5c08,\n          0x9b94: 0x5c0d,\n          0x9b95: 0x5c13,\n          0x9b96: 0x5c20,\n          0x9b97: 0x5c22,\n          0x9b98: 0x5c28,\n          0x9b99: 0x5c38,\n          0x9b9a: 0x5c39,\n          0x9b9b: 0x5c41,\n          0x9b9c: 0x5c46,\n          0x9b9d: 0x5c4e,\n          0x9b9e: 0x5c53,\n          0x9b9f: 0x5c50,\n          0x9ba0: 0x5c4f,\n          0x9ba1: 0x5b71,\n          0x9ba2: 0x5c6c,\n          0x9ba3: 0x5c6e,\n          0x9ba4: 0x4e62,\n          0x9ba5: 0x5c76,\n          0x9ba6: 0x5c79,\n          0x9ba7: 0x5c8c,\n          0x9ba8: 0x5c91,\n          0x9ba9: 0x5c94,\n          0x9baa: 0x599b,\n          0x9bab: 0x5cab,\n          0x9bac: 0x5cbb,\n          0x9bad: 0x5cb6,\n          0x9bae: 0x5cbc,\n          0x9baf: 0x5cb7,\n          0x9bb0: 0x5cc5,\n          0x9bb1: 0x5cbe,\n          0x9bb2: 0x5cc7,\n          0x9bb3: 0x5cd9,\n          0x9bb4: 0x5ce9,\n          0x9bb5: 0x5cfd,\n          0x9bb6: 0x5cfa,\n          0x9bb7: 0x5ced,\n          0x9bb8: 0x5d8c,\n          0x9bb9: 0x5cea,\n          0x9bba: 0x5d0b,\n          0x9bbb: 0x5d15,\n          0x9bbc: 0x5d17,\n          0x9bbd: 0x5d5c,\n          0x9bbe: 0x5d1f,\n          0x9bbf: 0x5d1b,\n          0x9bc0: 0x5d11,\n          0x9bc1: 0x5d14,\n          0x9bc2: 0x5d22,\n          0x9bc3: 0x5d1a,\n          0x9bc4: 0x5d19,\n          0x9bc5: 0x5d18,\n          0x9bc6: 0x5d4c,\n          0x9bc7: 0x5d52,\n          0x9bc8: 0x5d4e,\n          0x9bc9: 0x5d4b,\n          0x9bca: 0x5d6c,\n          0x9bcb: 0x5d73,\n          0x9bcc: 0x5d76,\n          0x9bcd: 0x5d87,\n          0x9bce: 0x5d84,\n          0x9bcf: 0x5d82,\n          0x9bd0: 0x5da2,\n          0x9bd1: 0x5d9d,\n          0x9bd2: 0x5dac,\n          0x9bd3: 0x5dae,\n          0x9bd4: 0x5dbd,\n          0x9bd5: 0x5d90,\n          0x9bd6: 0x5db7,\n          0x9bd7: 0x5dbc,\n          0x9bd8: 0x5dc9,\n          0x9bd9: 0x5dcd,\n          0x9bda: 0x5dd3,\n          0x9bdb: 0x5dd2,\n          0x9bdc: 0x5dd6,\n          0x9bdd: 0x5ddb,\n          0x9bde: 0x5deb,\n          0x9bdf: 0x5df2,\n          0x9be0: 0x5df5,\n          0x9be1: 0x5e0b,\n          0x9be2: 0x5e1a,\n          0x9be3: 0x5e19,\n          0x9be4: 0x5e11,\n          0x9be5: 0x5e1b,\n          0x9be6: 0x5e36,\n          0x9be7: 0x5e37,\n          0x9be8: 0x5e44,\n          0x9be9: 0x5e43,\n          0x9bea: 0x5e40,\n          0x9beb: 0x5e4e,\n          0x9bec: 0x5e57,\n          0x9bed: 0x5e54,\n          0x9bee: 0x5e5f,\n          0x9bef: 0x5e62,\n          0x9bf0: 0x5e64,\n          0x9bf1: 0x5e47,\n          0x9bf2: 0x5e75,\n          0x9bf3: 0x5e76,\n          0x9bf4: 0x5e7a,\n          0x9bf5: 0x9ebc,\n          0x9bf6: 0x5e7f,\n          0x9bf7: 0x5ea0,\n          0x9bf8: 0x5ec1,\n          0x9bf9: 0x5ec2,\n          0x9bfa: 0x5ec8,\n          0x9bfb: 0x5ed0,\n          0x9bfc: 0x5ecf,\n          0x9c40: 0x5ed6,\n          0x9c41: 0x5ee3,\n          0x9c42: 0x5edd,\n          0x9c43: 0x5eda,\n          0x9c44: 0x5edb,\n          0x9c45: 0x5ee2,\n          0x9c46: 0x5ee1,\n          0x9c47: 0x5ee8,\n          0x9c48: 0x5ee9,\n          0x9c49: 0x5eec,\n          0x9c4a: 0x5ef1,\n          0x9c4b: 0x5ef3,\n          0x9c4c: 0x5ef0,\n          0x9c4d: 0x5ef4,\n          0x9c4e: 0x5ef8,\n          0x9c4f: 0x5efe,\n          0x9c50: 0x5f03,\n          0x9c51: 0x5f09,\n          0x9c52: 0x5f5d,\n          0x9c53: 0x5f5c,\n          0x9c54: 0x5f0b,\n          0x9c55: 0x5f11,\n          0x9c56: 0x5f16,\n          0x9c57: 0x5f29,\n          0x9c58: 0x5f2d,\n          0x9c59: 0x5f38,\n          0x9c5a: 0x5f41,\n          0x9c5b: 0x5f48,\n          0x9c5c: 0x5f4c,\n          0x9c5d: 0x5f4e,\n          0x9c5e: 0x5f2f,\n          0x9c5f: 0x5f51,\n          0x9c60: 0x5f56,\n          0x9c61: 0x5f57,\n          0x9c62: 0x5f59,\n          0x9c63: 0x5f61,\n          0x9c64: 0x5f6d,\n          0x9c65: 0x5f73,\n          0x9c66: 0x5f77,\n          0x9c67: 0x5f83,\n          0x9c68: 0x5f82,\n          0x9c69: 0x5f7f,\n          0x9c6a: 0x5f8a,\n          0x9c6b: 0x5f88,\n          0x9c6c: 0x5f91,\n          0x9c6d: 0x5f87,\n          0x9c6e: 0x5f9e,\n          0x9c6f: 0x5f99,\n          0x9c70: 0x5f98,\n          0x9c71: 0x5fa0,\n          0x9c72: 0x5fa8,\n          0x9c73: 0x5fad,\n          0x9c74: 0x5fbc,\n          0x9c75: 0x5fd6,\n          0x9c76: 0x5ffb,\n          0x9c77: 0x5fe4,\n          0x9c78: 0x5ff8,\n          0x9c79: 0x5ff1,\n          0x9c7a: 0x5fdd,\n          0x9c7b: 0x60b3,\n          0x9c7c: 0x5fff,\n          0x9c7d: 0x6021,\n          0x9c7e: 0x6060,\n          0x9c80: 0x6019,\n          0x9c81: 0x6010,\n          0x9c82: 0x6029,\n          0x9c83: 0x600e,\n          0x9c84: 0x6031,\n          0x9c85: 0x601b,\n          0x9c86: 0x6015,\n          0x9c87: 0x602b,\n          0x9c88: 0x6026,\n          0x9c89: 0x600f,\n          0x9c8a: 0x603a,\n          0x9c8b: 0x605a,\n          0x9c8c: 0x6041,\n          0x9c8d: 0x606a,\n          0x9c8e: 0x6077,\n          0x9c8f: 0x605f,\n          0x9c90: 0x604a,\n          0x9c91: 0x6046,\n          0x9c92: 0x604d,\n          0x9c93: 0x6063,\n          0x9c94: 0x6043,\n          0x9c95: 0x6064,\n          0x9c96: 0x6042,\n          0x9c97: 0x606c,\n          0x9c98: 0x606b,\n          0x9c99: 0x6059,\n          0x9c9a: 0x6081,\n          0x9c9b: 0x608d,\n          0x9c9c: 0x60e7,\n          0x9c9d: 0x6083,\n          0x9c9e: 0x609a,\n          0x9c9f: 0x6084,\n          0x9ca0: 0x609b,\n          0x9ca1: 0x6096,\n          0x9ca2: 0x6097,\n          0x9ca3: 0x6092,\n          0x9ca4: 0x60a7,\n          0x9ca5: 0x608b,\n          0x9ca6: 0x60e1,\n          0x9ca7: 0x60b8,\n          0x9ca8: 0x60e0,\n          0x9ca9: 0x60d3,\n          0x9caa: 0x60b4,\n          0x9cab: 0x5ff0,\n          0x9cac: 0x60bd,\n          0x9cad: 0x60c6,\n          0x9cae: 0x60b5,\n          0x9caf: 0x60d8,\n          0x9cb0: 0x614d,\n          0x9cb1: 0x6115,\n          0x9cb2: 0x6106,\n          0x9cb3: 0x60f6,\n          0x9cb4: 0x60f7,\n          0x9cb5: 0x6100,\n          0x9cb6: 0x60f4,\n          0x9cb7: 0x60fa,\n          0x9cb8: 0x6103,\n          0x9cb9: 0x6121,\n          0x9cba: 0x60fb,\n          0x9cbb: 0x60f1,\n          0x9cbc: 0x610d,\n          0x9cbd: 0x610e,\n          0x9cbe: 0x6147,\n          0x9cbf: 0x613e,\n          0x9cc0: 0x6128,\n          0x9cc1: 0x6127,\n          0x9cc2: 0x614a,\n          0x9cc3: 0x613f,\n          0x9cc4: 0x613c,\n          0x9cc5: 0x612c,\n          0x9cc6: 0x6134,\n          0x9cc7: 0x613d,\n          0x9cc8: 0x6142,\n          0x9cc9: 0x6144,\n          0x9cca: 0x6173,\n          0x9ccb: 0x6177,\n          0x9ccc: 0x6158,\n          0x9ccd: 0x6159,\n          0x9cce: 0x615a,\n          0x9ccf: 0x616b,\n          0x9cd0: 0x6174,\n          0x9cd1: 0x616f,\n          0x9cd2: 0x6165,\n          0x9cd3: 0x6171,\n          0x9cd4: 0x615f,\n          0x9cd5: 0x615d,\n          0x9cd6: 0x6153,\n          0x9cd7: 0x6175,\n          0x9cd8: 0x6199,\n          0x9cd9: 0x6196,\n          0x9cda: 0x6187,\n          0x9cdb: 0x61ac,\n          0x9cdc: 0x6194,\n          0x9cdd: 0x619a,\n          0x9cde: 0x618a,\n          0x9cdf: 0x6191,\n          0x9ce0: 0x61ab,\n          0x9ce1: 0x61ae,\n          0x9ce2: 0x61cc,\n          0x9ce3: 0x61ca,\n          0x9ce4: 0x61c9,\n          0x9ce5: 0x61f7,\n          0x9ce6: 0x61c8,\n          0x9ce7: 0x61c3,\n          0x9ce8: 0x61c6,\n          0x9ce9: 0x61ba,\n          0x9cea: 0x61cb,\n          0x9ceb: 0x7f79,\n          0x9cec: 0x61cd,\n          0x9ced: 0x61e6,\n          0x9cee: 0x61e3,\n          0x9cef: 0x61f6,\n          0x9cf0: 0x61fa,\n          0x9cf1: 0x61f4,\n          0x9cf2: 0x61ff,\n          0x9cf3: 0x61fd,\n          0x9cf4: 0x61fc,\n          0x9cf5: 0x61fe,\n          0x9cf6: 0x6200,\n          0x9cf7: 0x6208,\n          0x9cf8: 0x6209,\n          0x9cf9: 0x620d,\n          0x9cfa: 0x620c,\n          0x9cfb: 0x6214,\n          0x9cfc: 0x621b,\n          0x9d40: 0x621e,\n          0x9d41: 0x6221,\n          0x9d42: 0x622a,\n          0x9d43: 0x622e,\n          0x9d44: 0x6230,\n          0x9d45: 0x6232,\n          0x9d46: 0x6233,\n          0x9d47: 0x6241,\n          0x9d48: 0x624e,\n          0x9d49: 0x625e,\n          0x9d4a: 0x6263,\n          0x9d4b: 0x625b,\n          0x9d4c: 0x6260,\n          0x9d4d: 0x6268,\n          0x9d4e: 0x627c,\n          0x9d4f: 0x6282,\n          0x9d50: 0x6289,\n          0x9d51: 0x627e,\n          0x9d52: 0x6292,\n          0x9d53: 0x6293,\n          0x9d54: 0x6296,\n          0x9d55: 0x62d4,\n          0x9d56: 0x6283,\n          0x9d57: 0x6294,\n          0x9d58: 0x62d7,\n          0x9d59: 0x62d1,\n          0x9d5a: 0x62bb,\n          0x9d5b: 0x62cf,\n          0x9d5c: 0x62ff,\n          0x9d5d: 0x62c6,\n          0x9d5e: 0x64d4,\n          0x9d5f: 0x62c8,\n          0x9d60: 0x62dc,\n          0x9d61: 0x62cc,\n          0x9d62: 0x62ca,\n          0x9d63: 0x62c2,\n          0x9d64: 0x62c7,\n          0x9d65: 0x629b,\n          0x9d66: 0x62c9,\n          0x9d67: 0x630c,\n          0x9d68: 0x62ee,\n          0x9d69: 0x62f1,\n          0x9d6a: 0x6327,\n          0x9d6b: 0x6302,\n          0x9d6c: 0x6308,\n          0x9d6d: 0x62ef,\n          0x9d6e: 0x62f5,\n          0x9d6f: 0x6350,\n          0x9d70: 0x633e,\n          0x9d71: 0x634d,\n          0x9d72: 0x641c,\n          0x9d73: 0x634f,\n          0x9d74: 0x6396,\n          0x9d75: 0x638e,\n          0x9d76: 0x6380,\n          0x9d77: 0x63ab,\n          0x9d78: 0x6376,\n          0x9d79: 0x63a3,\n          0x9d7a: 0x638f,\n          0x9d7b: 0x6389,\n          0x9d7c: 0x639f,\n          0x9d7d: 0x63b5,\n          0x9d7e: 0x636b,\n          0x9d80: 0x6369,\n          0x9d81: 0x63be,\n          0x9d82: 0x63e9,\n          0x9d83: 0x63c0,\n          0x9d84: 0x63c6,\n          0x9d85: 0x63e3,\n          0x9d86: 0x63c9,\n          0x9d87: 0x63d2,\n          0x9d88: 0x63f6,\n          0x9d89: 0x63c4,\n          0x9d8a: 0x6416,\n          0x9d8b: 0x6434,\n          0x9d8c: 0x6406,\n          0x9d8d: 0x6413,\n          0x9d8e: 0x6426,\n          0x9d8f: 0x6436,\n          0x9d90: 0x651d,\n          0x9d91: 0x6417,\n          0x9d92: 0x6428,\n          0x9d93: 0x640f,\n          0x9d94: 0x6467,\n          0x9d95: 0x646f,\n          0x9d96: 0x6476,\n          0x9d97: 0x644e,\n          0x9d98: 0x652a,\n          0x9d99: 0x6495,\n          0x9d9a: 0x6493,\n          0x9d9b: 0x64a5,\n          0x9d9c: 0x64a9,\n          0x9d9d: 0x6488,\n          0x9d9e: 0x64bc,\n          0x9d9f: 0x64da,\n          0x9da0: 0x64d2,\n          0x9da1: 0x64c5,\n          0x9da2: 0x64c7,\n          0x9da3: 0x64bb,\n          0x9da4: 0x64d8,\n          0x9da5: 0x64c2,\n          0x9da6: 0x64f1,\n          0x9da7: 0x64e7,\n          0x9da8: 0x8209,\n          0x9da9: 0x64e0,\n          0x9daa: 0x64e1,\n          0x9dab: 0x62ac,\n          0x9dac: 0x64e3,\n          0x9dad: 0x64ef,\n          0x9dae: 0x652c,\n          0x9daf: 0x64f6,\n          0x9db0: 0x64f4,\n          0x9db1: 0x64f2,\n          0x9db2: 0x64fa,\n          0x9db3: 0x6500,\n          0x9db4: 0x64fd,\n          0x9db5: 0x6518,\n          0x9db6: 0x651c,\n          0x9db7: 0x6505,\n          0x9db8: 0x6524,\n          0x9db9: 0x6523,\n          0x9dba: 0x652b,\n          0x9dbb: 0x6534,\n          0x9dbc: 0x6535,\n          0x9dbd: 0x6537,\n          0x9dbe: 0x6536,\n          0x9dbf: 0x6538,\n          0x9dc0: 0x754b,\n          0x9dc1: 0x6548,\n          0x9dc2: 0x6556,\n          0x9dc3: 0x6555,\n          0x9dc4: 0x654d,\n          0x9dc5: 0x6558,\n          0x9dc6: 0x655e,\n          0x9dc7: 0x655d,\n          0x9dc8: 0x6572,\n          0x9dc9: 0x6578,\n          0x9dca: 0x6582,\n          0x9dcb: 0x6583,\n          0x9dcc: 0x8b8a,\n          0x9dcd: 0x659b,\n          0x9dce: 0x659f,\n          0x9dcf: 0x65ab,\n          0x9dd0: 0x65b7,\n          0x9dd1: 0x65c3,\n          0x9dd2: 0x65c6,\n          0x9dd3: 0x65c1,\n          0x9dd4: 0x65c4,\n          0x9dd5: 0x65cc,\n          0x9dd6: 0x65d2,\n          0x9dd7: 0x65db,\n          0x9dd8: 0x65d9,\n          0x9dd9: 0x65e0,\n          0x9dda: 0x65e1,\n          0x9ddb: 0x65f1,\n          0x9ddc: 0x6772,\n          0x9ddd: 0x660a,\n          0x9dde: 0x6603,\n          0x9ddf: 0x65fb,\n          0x9de0: 0x6773,\n          0x9de1: 0x6635,\n          0x9de2: 0x6636,\n          0x9de3: 0x6634,\n          0x9de4: 0x661c,\n          0x9de5: 0x664f,\n          0x9de6: 0x6644,\n          0x9de7: 0x6649,\n          0x9de8: 0x6641,\n          0x9de9: 0x665e,\n          0x9dea: 0x665d,\n          0x9deb: 0x6664,\n          0x9dec: 0x6667,\n          0x9ded: 0x6668,\n          0x9dee: 0x665f,\n          0x9def: 0x6662,\n          0x9df0: 0x6670,\n          0x9df1: 0x6683,\n          0x9df2: 0x6688,\n          0x9df3: 0x668e,\n          0x9df4: 0x6689,\n          0x9df5: 0x6684,\n          0x9df6: 0x6698,\n          0x9df7: 0x669d,\n          0x9df8: 0x66c1,\n          0x9df9: 0x66b9,\n          0x9dfa: 0x66c9,\n          0x9dfb: 0x66be,\n          0x9dfc: 0x66bc,\n          0x9e40: 0x66c4,\n          0x9e41: 0x66b8,\n          0x9e42: 0x66d6,\n          0x9e43: 0x66da,\n          0x9e44: 0x66e0,\n          0x9e45: 0x663f,\n          0x9e46: 0x66e6,\n          0x9e47: 0x66e9,\n          0x9e48: 0x66f0,\n          0x9e49: 0x66f5,\n          0x9e4a: 0x66f7,\n          0x9e4b: 0x670f,\n          0x9e4c: 0x6716,\n          0x9e4d: 0x671e,\n          0x9e4e: 0x6726,\n          0x9e4f: 0x6727,\n          0x9e50: 0x9738,\n          0x9e51: 0x672e,\n          0x9e52: 0x673f,\n          0x9e53: 0x6736,\n          0x9e54: 0x6741,\n          0x9e55: 0x6738,\n          0x9e56: 0x6737,\n          0x9e57: 0x6746,\n          0x9e58: 0x675e,\n          0x9e59: 0x6760,\n          0x9e5a: 0x6759,\n          0x9e5b: 0x6763,\n          0x9e5c: 0x6764,\n          0x9e5d: 0x6789,\n          0x9e5e: 0x6770,\n          0x9e5f: 0x67a9,\n          0x9e60: 0x677c,\n          0x9e61: 0x676a,\n          0x9e62: 0x678c,\n          0x9e63: 0x678b,\n          0x9e64: 0x67a6,\n          0x9e65: 0x67a1,\n          0x9e66: 0x6785,\n          0x9e67: 0x67b7,\n          0x9e68: 0x67ef,\n          0x9e69: 0x67b4,\n          0x9e6a: 0x67ec,\n          0x9e6b: 0x67b3,\n          0x9e6c: 0x67e9,\n          0x9e6d: 0x67b8,\n          0x9e6e: 0x67e4,\n          0x9e6f: 0x67de,\n          0x9e70: 0x67dd,\n          0x9e71: 0x67e2,\n          0x9e72: 0x67ee,\n          0x9e73: 0x67b9,\n          0x9e74: 0x67ce,\n          0x9e75: 0x67c6,\n          0x9e76: 0x67e7,\n          0x9e77: 0x6a9c,\n          0x9e78: 0x681e,\n          0x9e79: 0x6846,\n          0x9e7a: 0x6829,\n          0x9e7b: 0x6840,\n          0x9e7c: 0x684d,\n          0x9e7d: 0x6832,\n          0x9e7e: 0x684e,\n          0x9e80: 0x68b3,\n          0x9e81: 0x682b,\n          0x9e82: 0x6859,\n          0x9e83: 0x6863,\n          0x9e84: 0x6877,\n          0x9e85: 0x687f,\n          0x9e86: 0x689f,\n          0x9e87: 0x688f,\n          0x9e88: 0x68ad,\n          0x9e89: 0x6894,\n          0x9e8a: 0x689d,\n          0x9e8b: 0x689b,\n          0x9e8c: 0x6883,\n          0x9e8d: 0x6aae,\n          0x9e8e: 0x68b9,\n          0x9e8f: 0x6874,\n          0x9e90: 0x68b5,\n          0x9e91: 0x68a0,\n          0x9e92: 0x68ba,\n          0x9e93: 0x690f,\n          0x9e94: 0x688d,\n          0x9e95: 0x687e,\n          0x9e96: 0x6901,\n          0x9e97: 0x68ca,\n          0x9e98: 0x6908,\n          0x9e99: 0x68d8,\n          0x9e9a: 0x6922,\n          0x9e9b: 0x6926,\n          0x9e9c: 0x68e1,\n          0x9e9d: 0x690c,\n          0x9e9e: 0x68cd,\n          0x9e9f: 0x68d4,\n          0x9ea0: 0x68e7,\n          0x9ea1: 0x68d5,\n          0x9ea2: 0x6936,\n          0x9ea3: 0x6912,\n          0x9ea4: 0x6904,\n          0x9ea5: 0x68d7,\n          0x9ea6: 0x68e3,\n          0x9ea7: 0x6925,\n          0x9ea8: 0x68f9,\n          0x9ea9: 0x68e0,\n          0x9eaa: 0x68ef,\n          0x9eab: 0x6928,\n          0x9eac: 0x692a,\n          0x9ead: 0x691a,\n          0x9eae: 0x6923,\n          0x9eaf: 0x6921,\n          0x9eb0: 0x68c6,\n          0x9eb1: 0x6979,\n          0x9eb2: 0x6977,\n          0x9eb3: 0x695c,\n          0x9eb4: 0x6978,\n          0x9eb5: 0x696b,\n          0x9eb6: 0x6954,\n          0x9eb7: 0x697e,\n          0x9eb8: 0x696e,\n          0x9eb9: 0x6939,\n          0x9eba: 0x6974,\n          0x9ebb: 0x693d,\n          0x9ebc: 0x6959,\n          0x9ebd: 0x6930,\n          0x9ebe: 0x6961,\n          0x9ebf: 0x695e,\n          0x9ec0: 0x695d,\n          0x9ec1: 0x6981,\n          0x9ec2: 0x696a,\n          0x9ec3: 0x69b2,\n          0x9ec4: 0x69ae,\n          0x9ec5: 0x69d0,\n          0x9ec6: 0x69bf,\n          0x9ec7: 0x69c1,\n          0x9ec8: 0x69d3,\n          0x9ec9: 0x69be,\n          0x9eca: 0x69ce,\n          0x9ecb: 0x5be8,\n          0x9ecc: 0x69ca,\n          0x9ecd: 0x69dd,\n          0x9ece: 0x69bb,\n          0x9ecf: 0x69c3,\n          0x9ed0: 0x69a7,\n          0x9ed1: 0x6a2e,\n          0x9ed2: 0x6991,\n          0x9ed3: 0x69a0,\n          0x9ed4: 0x699c,\n          0x9ed5: 0x6995,\n          0x9ed6: 0x69b4,\n          0x9ed7: 0x69de,\n          0x9ed8: 0x69e8,\n          0x9ed9: 0x6a02,\n          0x9eda: 0x6a1b,\n          0x9edb: 0x69ff,\n          0x9edc: 0x6b0a,\n          0x9edd: 0x69f9,\n          0x9ede: 0x69f2,\n          0x9edf: 0x69e7,\n          0x9ee0: 0x6a05,\n          0x9ee1: 0x69b1,\n          0x9ee2: 0x6a1e,\n          0x9ee3: 0x69ed,\n          0x9ee4: 0x6a14,\n          0x9ee5: 0x69eb,\n          0x9ee6: 0x6a0a,\n          0x9ee7: 0x6a12,\n          0x9ee8: 0x6ac1,\n          0x9ee9: 0x6a23,\n          0x9eea: 0x6a13,\n          0x9eeb: 0x6a44,\n          0x9eec: 0x6a0c,\n          0x9eed: 0x6a72,\n          0x9eee: 0x6a36,\n          0x9eef: 0x6a78,\n          0x9ef0: 0x6a47,\n          0x9ef1: 0x6a62,\n          0x9ef2: 0x6a59,\n          0x9ef3: 0x6a66,\n          0x9ef4: 0x6a48,\n          0x9ef5: 0x6a38,\n          0x9ef6: 0x6a22,\n          0x9ef7: 0x6a90,\n          0x9ef8: 0x6a8d,\n          0x9ef9: 0x6aa0,\n          0x9efa: 0x6a84,\n          0x9efb: 0x6aa2,\n          0x9efc: 0x6aa3,\n          0x9f40: 0x6a97,\n          0x9f41: 0x8617,\n          0x9f42: 0x6abb,\n          0x9f43: 0x6ac3,\n          0x9f44: 0x6ac2,\n          0x9f45: 0x6ab8,\n          0x9f46: 0x6ab3,\n          0x9f47: 0x6aac,\n          0x9f48: 0x6ade,\n          0x9f49: 0x6ad1,\n          0x9f4a: 0x6adf,\n          0x9f4b: 0x6aaa,\n          0x9f4c: 0x6ada,\n          0x9f4d: 0x6aea,\n          0x9f4e: 0x6afb,\n          0x9f4f: 0x6b05,\n          0x9f50: 0x8616,\n          0x9f51: 0x6afa,\n          0x9f52: 0x6b12,\n          0x9f53: 0x6b16,\n          0x9f54: 0x9b31,\n          0x9f55: 0x6b1f,\n          0x9f56: 0x6b38,\n          0x9f57: 0x6b37,\n          0x9f58: 0x76dc,\n          0x9f59: 0x6b39,\n          0x9f5a: 0x98ee,\n          0x9f5b: 0x6b47,\n          0x9f5c: 0x6b43,\n          0x9f5d: 0x6b49,\n          0x9f5e: 0x6b50,\n          0x9f5f: 0x6b59,\n          0x9f60: 0x6b54,\n          0x9f61: 0x6b5b,\n          0x9f62: 0x6b5f,\n          0x9f63: 0x6b61,\n          0x9f64: 0x6b78,\n          0x9f65: 0x6b79,\n          0x9f66: 0x6b7f,\n          0x9f67: 0x6b80,\n          0x9f68: 0x6b84,\n          0x9f69: 0x6b83,\n          0x9f6a: 0x6b8d,\n          0x9f6b: 0x6b98,\n          0x9f6c: 0x6b95,\n          0x9f6d: 0x6b9e,\n          0x9f6e: 0x6ba4,\n          0x9f6f: 0x6baa,\n          0x9f70: 0x6bab,\n          0x9f71: 0x6baf,\n          0x9f72: 0x6bb2,\n          0x9f73: 0x6bb1,\n          0x9f74: 0x6bb3,\n          0x9f75: 0x6bb7,\n          0x9f76: 0x6bbc,\n          0x9f77: 0x6bc6,\n          0x9f78: 0x6bcb,\n          0x9f79: 0x6bd3,\n          0x9f7a: 0x6bdf,\n          0x9f7b: 0x6bec,\n          0x9f7c: 0x6beb,\n          0x9f7d: 0x6bf3,\n          0x9f7e: 0x6bef,\n          0x9f80: 0x9ebe,\n          0x9f81: 0x6c08,\n          0x9f82: 0x6c13,\n          0x9f83: 0x6c14,\n          0x9f84: 0x6c1b,\n          0x9f85: 0x6c24,\n          0x9f86: 0x6c23,\n          0x9f87: 0x6c5e,\n          0x9f88: 0x6c55,\n          0x9f89: 0x6c62,\n          0x9f8a: 0x6c6a,\n          0x9f8b: 0x6c82,\n          0x9f8c: 0x6c8d,\n          0x9f8d: 0x6c9a,\n          0x9f8e: 0x6c81,\n          0x9f8f: 0x6c9b,\n          0x9f90: 0x6c7e,\n          0x9f91: 0x6c68,\n          0x9f92: 0x6c73,\n          0x9f93: 0x6c92,\n          0x9f94: 0x6c90,\n          0x9f95: 0x6cc4,\n          0x9f96: 0x6cf1,\n          0x9f97: 0x6cd3,\n          0x9f98: 0x6cbd,\n          0x9f99: 0x6cd7,\n          0x9f9a: 0x6cc5,\n          0x9f9b: 0x6cdd,\n          0x9f9c: 0x6cae,\n          0x9f9d: 0x6cb1,\n          0x9f9e: 0x6cbe,\n          0x9f9f: 0x6cba,\n          0x9fa0: 0x6cdb,\n          0x9fa1: 0x6cef,\n          0x9fa2: 0x6cd9,\n          0x9fa3: 0x6cea,\n          0x9fa4: 0x6d1f,\n          0x9fa5: 0x884d,\n          0x9fa6: 0x6d36,\n          0x9fa7: 0x6d2b,\n          0x9fa8: 0x6d3d,\n          0x9fa9: 0x6d38,\n          0x9faa: 0x6d19,\n          0x9fab: 0x6d35,\n          0x9fac: 0x6d33,\n          0x9fad: 0x6d12,\n          0x9fae: 0x6d0c,\n          0x9faf: 0x6d63,\n          0x9fb0: 0x6d93,\n          0x9fb1: 0x6d64,\n          0x9fb2: 0x6d5a,\n          0x9fb3: 0x6d79,\n          0x9fb4: 0x6d59,\n          0x9fb5: 0x6d8e,\n          0x9fb6: 0x6d95,\n          0x9fb7: 0x6fe4,\n          0x9fb8: 0x6d85,\n          0x9fb9: 0x6df9,\n          0x9fba: 0x6e15,\n          0x9fbb: 0x6e0a,\n          0x9fbc: 0x6db5,\n          0x9fbd: 0x6dc7,\n          0x9fbe: 0x6de6,\n          0x9fbf: 0x6db8,\n          0x9fc0: 0x6dc6,\n          0x9fc1: 0x6dec,\n          0x9fc2: 0x6dde,\n          0x9fc3: 0x6dcc,\n          0x9fc4: 0x6de8,\n          0x9fc5: 0x6dd2,\n          0x9fc6: 0x6dc5,\n          0x9fc7: 0x6dfa,\n          0x9fc8: 0x6dd9,\n          0x9fc9: 0x6de4,\n          0x9fca: 0x6dd5,\n          0x9fcb: 0x6dea,\n          0x9fcc: 0x6dee,\n          0x9fcd: 0x6e2d,\n          0x9fce: 0x6e6e,\n          0x9fcf: 0x6e2e,\n          0x9fd0: 0x6e19,\n          0x9fd1: 0x6e72,\n          0x9fd2: 0x6e5f,\n          0x9fd3: 0x6e3e,\n          0x9fd4: 0x6e23,\n          0x9fd5: 0x6e6b,\n          0x9fd6: 0x6e2b,\n          0x9fd7: 0x6e76,\n          0x9fd8: 0x6e4d,\n          0x9fd9: 0x6e1f,\n          0x9fda: 0x6e43,\n          0x9fdb: 0x6e3a,\n          0x9fdc: 0x6e4e,\n          0x9fdd: 0x6e24,\n          0x9fde: 0x6eff,\n          0x9fdf: 0x6e1d,\n          0x9fe0: 0x6e38,\n          0x9fe1: 0x6e82,\n          0x9fe2: 0x6eaa,\n          0x9fe3: 0x6e98,\n          0x9fe4: 0x6ec9,\n          0x9fe5: 0x6eb7,\n          0x9fe6: 0x6ed3,\n          0x9fe7: 0x6ebd,\n          0x9fe8: 0x6eaf,\n          0x9fe9: 0x6ec4,\n          0x9fea: 0x6eb2,\n          0x9feb: 0x6ed4,\n          0x9fec: 0x6ed5,\n          0x9fed: 0x6e8f,\n          0x9fee: 0x6ea5,\n          0x9fef: 0x6ec2,\n          0x9ff0: 0x6e9f,\n          0x9ff1: 0x6f41,\n          0x9ff2: 0x6f11,\n          0x9ff3: 0x704c,\n          0x9ff4: 0x6eec,\n          0x9ff5: 0x6ef8,\n          0x9ff6: 0x6efe,\n          0x9ff7: 0x6f3f,\n          0x9ff8: 0x6ef2,\n          0x9ff9: 0x6f31,\n          0x9ffa: 0x6eef,\n          0x9ffb: 0x6f32,\n          0x9ffc: 0x6ecc,\n          0xa1: 0xff61,\n          0xa2: 0xff62,\n          0xa3: 0xff63,\n          0xa4: 0xff64,\n          0xa5: 0xff65,\n          0xa6: 0xff66,\n          0xa7: 0xff67,\n          0xa8: 0xff68,\n          0xa9: 0xff69,\n          0xaa: 0xff6a,\n          0xab: 0xff6b,\n          0xac: 0xff6c,\n          0xad: 0xff6d,\n          0xae: 0xff6e,\n          0xaf: 0xff6f,\n          0xb0: 0xff70,\n          0xb1: 0xff71,\n          0xb2: 0xff72,\n          0xb3: 0xff73,\n          0xb4: 0xff74,\n          0xb5: 0xff75,\n          0xb6: 0xff76,\n          0xb7: 0xff77,\n          0xb8: 0xff78,\n          0xb9: 0xff79,\n          0xba: 0xff7a,\n          0xbb: 0xff7b,\n          0xbc: 0xff7c,\n          0xbd: 0xff7d,\n          0xbe: 0xff7e,\n          0xbf: 0xff7f,\n          0xc0: 0xff80,\n          0xc1: 0xff81,\n          0xc2: 0xff82,\n          0xc3: 0xff83,\n          0xc4: 0xff84,\n          0xc5: 0xff85,\n          0xc6: 0xff86,\n          0xc7: 0xff87,\n          0xc8: 0xff88,\n          0xc9: 0xff89,\n          0xca: 0xff8a,\n          0xcb: 0xff8b,\n          0xcc: 0xff8c,\n          0xcd: 0xff8d,\n          0xce: 0xff8e,\n          0xcf: 0xff8f,\n          0xd0: 0xff90,\n          0xd1: 0xff91,\n          0xd2: 0xff92,\n          0xd3: 0xff93,\n          0xd4: 0xff94,\n          0xd5: 0xff95,\n          0xd6: 0xff96,\n          0xd7: 0xff97,\n          0xd8: 0xff98,\n          0xd9: 0xff99,\n          0xda: 0xff9a,\n          0xdb: 0xff9b,\n          0xdc: 0xff9c,\n          0xdd: 0xff9d,\n          0xde: 0xff9e,\n          0xdf: 0xff9f,\n          0xe040: 0x6f3e,\n          0xe041: 0x6f13,\n          0xe042: 0x6ef7,\n          0xe043: 0x6f86,\n          0xe044: 0x6f7a,\n          0xe045: 0x6f78,\n          0xe046: 0x6f81,\n          0xe047: 0x6f80,\n          0xe048: 0x6f6f,\n          0xe049: 0x6f5b,\n          0xe04a: 0x6ff3,\n          0xe04b: 0x6f6d,\n          0xe04c: 0x6f82,\n          0xe04d: 0x6f7c,\n          0xe04e: 0x6f58,\n          0xe04f: 0x6f8e,\n          0xe050: 0x6f91,\n          0xe051: 0x6fc2,\n          0xe052: 0x6f66,\n          0xe053: 0x6fb3,\n          0xe054: 0x6fa3,\n          0xe055: 0x6fa1,\n          0xe056: 0x6fa4,\n          0xe057: 0x6fb9,\n          0xe058: 0x6fc6,\n          0xe059: 0x6faa,\n          0xe05a: 0x6fdf,\n          0xe05b: 0x6fd5,\n          0xe05c: 0x6fec,\n          0xe05d: 0x6fd4,\n          0xe05e: 0x6fd8,\n          0xe05f: 0x6ff1,\n          0xe060: 0x6fee,\n          0xe061: 0x6fdb,\n          0xe062: 0x7009,\n          0xe063: 0x700b,\n          0xe064: 0x6ffa,\n          0xe065: 0x7011,\n          0xe066: 0x7001,\n          0xe067: 0x700f,\n          0xe068: 0x6ffe,\n          0xe069: 0x701b,\n          0xe06a: 0x701a,\n          0xe06b: 0x6f74,\n          0xe06c: 0x701d,\n          0xe06d: 0x7018,\n          0xe06e: 0x701f,\n          0xe06f: 0x7030,\n          0xe070: 0x703e,\n          0xe071: 0x7032,\n          0xe072: 0x7051,\n          0xe073: 0x7063,\n          0xe074: 0x7099,\n          0xe075: 0x7092,\n          0xe076: 0x70af,\n          0xe077: 0x70f1,\n          0xe078: 0x70ac,\n          0xe079: 0x70b8,\n          0xe07a: 0x70b3,\n          0xe07b: 0x70ae,\n          0xe07c: 0x70df,\n          0xe07d: 0x70cb,\n          0xe07e: 0x70dd,\n          0xe080: 0x70d9,\n          0xe081: 0x7109,\n          0xe082: 0x70fd,\n          0xe083: 0x711c,\n          0xe084: 0x7119,\n          0xe085: 0x7165,\n          0xe086: 0x7155,\n          0xe087: 0x7188,\n          0xe088: 0x7166,\n          0xe089: 0x7162,\n          0xe08a: 0x714c,\n          0xe08b: 0x7156,\n          0xe08c: 0x716c,\n          0xe08d: 0x718f,\n          0xe08e: 0x71fb,\n          0xe08f: 0x7184,\n          0xe090: 0x7195,\n          0xe091: 0x71a8,\n          0xe092: 0x71ac,\n          0xe093: 0x71d7,\n          0xe094: 0x71b9,\n          0xe095: 0x71be,\n          0xe096: 0x71d2,\n          0xe097: 0x71c9,\n          0xe098: 0x71d4,\n          0xe099: 0x71ce,\n          0xe09a: 0x71e0,\n          0xe09b: 0x71ec,\n          0xe09c: 0x71e7,\n          0xe09d: 0x71f5,\n          0xe09e: 0x71fc,\n          0xe09f: 0x71f9,\n          0xe0a0: 0x71ff,\n          0xe0a1: 0x720d,\n          0xe0a2: 0x7210,\n          0xe0a3: 0x721b,\n          0xe0a4: 0x7228,\n          0xe0a5: 0x722d,\n          0xe0a6: 0x722c,\n          0xe0a7: 0x7230,\n          0xe0a8: 0x7232,\n          0xe0a9: 0x723b,\n          0xe0aa: 0x723c,\n          0xe0ab: 0x723f,\n          0xe0ac: 0x7240,\n          0xe0ad: 0x7246,\n          0xe0ae: 0x724b,\n          0xe0af: 0x7258,\n          0xe0b0: 0x7274,\n          0xe0b1: 0x727e,\n          0xe0b2: 0x7282,\n          0xe0b3: 0x7281,\n          0xe0b4: 0x7287,\n          0xe0b5: 0x7292,\n          0xe0b6: 0x7296,\n          0xe0b7: 0x72a2,\n          0xe0b8: 0x72a7,\n          0xe0b9: 0x72b9,\n          0xe0ba: 0x72b2,\n          0xe0bb: 0x72c3,\n          0xe0bc: 0x72c6,\n          0xe0bd: 0x72c4,\n          0xe0be: 0x72ce,\n          0xe0bf: 0x72d2,\n          0xe0c0: 0x72e2,\n          0xe0c1: 0x72e0,\n          0xe0c2: 0x72e1,\n          0xe0c3: 0x72f9,\n          0xe0c4: 0x72f7,\n          0xe0c5: 0x500f,\n          0xe0c6: 0x7317,\n          0xe0c7: 0x730a,\n          0xe0c8: 0x731c,\n          0xe0c9: 0x7316,\n          0xe0ca: 0x731d,\n          0xe0cb: 0x7334,\n          0xe0cc: 0x732f,\n          0xe0cd: 0x7329,\n          0xe0ce: 0x7325,\n          0xe0cf: 0x733e,\n          0xe0d0: 0x734e,\n          0xe0d1: 0x734f,\n          0xe0d2: 0x9ed8,\n          0xe0d3: 0x7357,\n          0xe0d4: 0x736a,\n          0xe0d5: 0x7368,\n          0xe0d6: 0x7370,\n          0xe0d7: 0x7378,\n          0xe0d8: 0x7375,\n          0xe0d9: 0x737b,\n          0xe0da: 0x737a,\n          0xe0db: 0x73c8,\n          0xe0dc: 0x73b3,\n          0xe0dd: 0x73ce,\n          0xe0de: 0x73bb,\n          0xe0df: 0x73c0,\n          0xe0e0: 0x73e5,\n          0xe0e1: 0x73ee,\n          0xe0e2: 0x73de,\n          0xe0e3: 0x74a2,\n          0xe0e4: 0x7405,\n          0xe0e5: 0x746f,\n          0xe0e6: 0x7425,\n          0xe0e7: 0x73f8,\n          0xe0e8: 0x7432,\n          0xe0e9: 0x743a,\n          0xe0ea: 0x7455,\n          0xe0eb: 0x743f,\n          0xe0ec: 0x745f,\n          0xe0ed: 0x7459,\n          0xe0ee: 0x7441,\n          0xe0ef: 0x745c,\n          0xe0f0: 0x7469,\n          0xe0f1: 0x7470,\n          0xe0f2: 0x7463,\n          0xe0f3: 0x746a,\n          0xe0f4: 0x7476,\n          0xe0f5: 0x747e,\n          0xe0f6: 0x748b,\n          0xe0f7: 0x749e,\n          0xe0f8: 0x74a7,\n          0xe0f9: 0x74ca,\n          0xe0fa: 0x74cf,\n          0xe0fb: 0x74d4,\n          0xe0fc: 0x73f1,\n          0xe140: 0x74e0,\n          0xe141: 0x74e3,\n          0xe142: 0x74e7,\n          0xe143: 0x74e9,\n          0xe144: 0x74ee,\n          0xe145: 0x74f2,\n          0xe146: 0x74f0,\n          0xe147: 0x74f1,\n          0xe148: 0x74f8,\n          0xe149: 0x74f7,\n          0xe14a: 0x7504,\n          0xe14b: 0x7503,\n          0xe14c: 0x7505,\n          0xe14d: 0x750c,\n          0xe14e: 0x750e,\n          0xe14f: 0x750d,\n          0xe150: 0x7515,\n          0xe151: 0x7513,\n          0xe152: 0x751e,\n          0xe153: 0x7526,\n          0xe154: 0x752c,\n          0xe155: 0x753c,\n          0xe156: 0x7544,\n          0xe157: 0x754d,\n          0xe158: 0x754a,\n          0xe159: 0x7549,\n          0xe15a: 0x755b,\n          0xe15b: 0x7546,\n          0xe15c: 0x755a,\n          0xe15d: 0x7569,\n          0xe15e: 0x7564,\n          0xe15f: 0x7567,\n          0xe160: 0x756b,\n          0xe161: 0x756d,\n          0xe162: 0x7578,\n          0xe163: 0x7576,\n          0xe164: 0x7586,\n          0xe165: 0x7587,\n          0xe166: 0x7574,\n          0xe167: 0x758a,\n          0xe168: 0x7589,\n          0xe169: 0x7582,\n          0xe16a: 0x7594,\n          0xe16b: 0x759a,\n          0xe16c: 0x759d,\n          0xe16d: 0x75a5,\n          0xe16e: 0x75a3,\n          0xe16f: 0x75c2,\n          0xe170: 0x75b3,\n          0xe171: 0x75c3,\n          0xe172: 0x75b5,\n          0xe173: 0x75bd,\n          0xe174: 0x75b8,\n          0xe175: 0x75bc,\n          0xe176: 0x75b1,\n          0xe177: 0x75cd,\n          0xe178: 0x75ca,\n          0xe179: 0x75d2,\n          0xe17a: 0x75d9,\n          0xe17b: 0x75e3,\n          0xe17c: 0x75de,\n          0xe17d: 0x75fe,\n          0xe17e: 0x75ff,\n          0xe180: 0x75fc,\n          0xe181: 0x7601,\n          0xe182: 0x75f0,\n          0xe183: 0x75fa,\n          0xe184: 0x75f2,\n          0xe185: 0x75f3,\n          0xe186: 0x760b,\n          0xe187: 0x760d,\n          0xe188: 0x7609,\n          0xe189: 0x761f,\n          0xe18a: 0x7627,\n          0xe18b: 0x7620,\n          0xe18c: 0x7621,\n          0xe18d: 0x7622,\n          0xe18e: 0x7624,\n          0xe18f: 0x7634,\n          0xe190: 0x7630,\n          0xe191: 0x763b,\n          0xe192: 0x7647,\n          0xe193: 0x7648,\n          0xe194: 0x7646,\n          0xe195: 0x765c,\n          0xe196: 0x7658,\n          0xe197: 0x7661,\n          0xe198: 0x7662,\n          0xe199: 0x7668,\n          0xe19a: 0x7669,\n          0xe19b: 0x766a,\n          0xe19c: 0x7667,\n          0xe19d: 0x766c,\n          0xe19e: 0x7670,\n          0xe19f: 0x7672,\n          0xe1a0: 0x7676,\n          0xe1a1: 0x7678,\n          0xe1a2: 0x767c,\n          0xe1a3: 0x7680,\n          0xe1a4: 0x7683,\n          0xe1a5: 0x7688,\n          0xe1a6: 0x768b,\n          0xe1a7: 0x768e,\n          0xe1a8: 0x7696,\n          0xe1a9: 0x7693,\n          0xe1aa: 0x7699,\n          0xe1ab: 0x769a,\n          0xe1ac: 0x76b0,\n          0xe1ad: 0x76b4,\n          0xe1ae: 0x76b8,\n          0xe1af: 0x76b9,\n          0xe1b0: 0x76ba,\n          0xe1b1: 0x76c2,\n          0xe1b2: 0x76cd,\n          0xe1b3: 0x76d6,\n          0xe1b4: 0x76d2,\n          0xe1b5: 0x76de,\n          0xe1b6: 0x76e1,\n          0xe1b7: 0x76e5,\n          0xe1b8: 0x76e7,\n          0xe1b9: 0x76ea,\n          0xe1ba: 0x862f,\n          0xe1bb: 0x76fb,\n          0xe1bc: 0x7708,\n          0xe1bd: 0x7707,\n          0xe1be: 0x7704,\n          0xe1bf: 0x7729,\n          0xe1c0: 0x7724,\n          0xe1c1: 0x771e,\n          0xe1c2: 0x7725,\n          0xe1c3: 0x7726,\n          0xe1c4: 0x771b,\n          0xe1c5: 0x7737,\n          0xe1c6: 0x7738,\n          0xe1c7: 0x7747,\n          0xe1c8: 0x775a,\n          0xe1c9: 0x7768,\n          0xe1ca: 0x776b,\n          0xe1cb: 0x775b,\n          0xe1cc: 0x7765,\n          0xe1cd: 0x777f,\n          0xe1ce: 0x777e,\n          0xe1cf: 0x7779,\n          0xe1d0: 0x778e,\n          0xe1d1: 0x778b,\n          0xe1d2: 0x7791,\n          0xe1d3: 0x77a0,\n          0xe1d4: 0x779e,\n          0xe1d5: 0x77b0,\n          0xe1d6: 0x77b6,\n          0xe1d7: 0x77b9,\n          0xe1d8: 0x77bf,\n          0xe1d9: 0x77bc,\n          0xe1da: 0x77bd,\n          0xe1db: 0x77bb,\n          0xe1dc: 0x77c7,\n          0xe1dd: 0x77cd,\n          0xe1de: 0x77d7,\n          0xe1df: 0x77da,\n          0xe1e0: 0x77dc,\n          0xe1e1: 0x77e3,\n          0xe1e2: 0x77ee,\n          0xe1e3: 0x77fc,\n          0xe1e4: 0x780c,\n          0xe1e5: 0x7812,\n          0xe1e6: 0x7926,\n          0xe1e7: 0x7820,\n          0xe1e8: 0x792a,\n          0xe1e9: 0x7845,\n          0xe1ea: 0x788e,\n          0xe1eb: 0x7874,\n          0xe1ec: 0x7886,\n          0xe1ed: 0x787c,\n          0xe1ee: 0x789a,\n          0xe1ef: 0x788c,\n          0xe1f0: 0x78a3,\n          0xe1f1: 0x78b5,\n          0xe1f2: 0x78aa,\n          0xe1f3: 0x78af,\n          0xe1f4: 0x78d1,\n          0xe1f5: 0x78c6,\n          0xe1f6: 0x78cb,\n          0xe1f7: 0x78d4,\n          0xe1f8: 0x78be,\n          0xe1f9: 0x78bc,\n          0xe1fa: 0x78c5,\n          0xe1fb: 0x78ca,\n          0xe1fc: 0x78ec,\n          0xe240: 0x78e7,\n          0xe241: 0x78da,\n          0xe242: 0x78fd,\n          0xe243: 0x78f4,\n          0xe244: 0x7907,\n          0xe245: 0x7912,\n          0xe246: 0x7911,\n          0xe247: 0x7919,\n          0xe248: 0x792c,\n          0xe249: 0x792b,\n          0xe24a: 0x7940,\n          0xe24b: 0x7960,\n          0xe24c: 0x7957,\n          0xe24d: 0x795f,\n          0xe24e: 0x795a,\n          0xe24f: 0x7955,\n          0xe250: 0x7953,\n          0xe251: 0x797a,\n          0xe252: 0x797f,\n          0xe253: 0x798a,\n          0xe254: 0x799d,\n          0xe255: 0x79a7,\n          0xe256: 0x9f4b,\n          0xe257: 0x79aa,\n          0xe258: 0x79ae,\n          0xe259: 0x79b3,\n          0xe25a: 0x79b9,\n          0xe25b: 0x79ba,\n          0xe25c: 0x79c9,\n          0xe25d: 0x79d5,\n          0xe25e: 0x79e7,\n          0xe25f: 0x79ec,\n          0xe260: 0x79e1,\n          0xe261: 0x79e3,\n          0xe262: 0x7a08,\n          0xe263: 0x7a0d,\n          0xe264: 0x7a18,\n          0xe265: 0x7a19,\n          0xe266: 0x7a20,\n          0xe267: 0x7a1f,\n          0xe268: 0x7980,\n          0xe269: 0x7a31,\n          0xe26a: 0x7a3b,\n          0xe26b: 0x7a3e,\n          0xe26c: 0x7a37,\n          0xe26d: 0x7a43,\n          0xe26e: 0x7a57,\n          0xe26f: 0x7a49,\n          0xe270: 0x7a61,\n          0xe271: 0x7a62,\n          0xe272: 0x7a69,\n          0xe273: 0x9f9d,\n          0xe274: 0x7a70,\n          0xe275: 0x7a79,\n          0xe276: 0x7a7d,\n          0xe277: 0x7a88,\n          0xe278: 0x7a97,\n          0xe279: 0x7a95,\n          0xe27a: 0x7a98,\n          0xe27b: 0x7a96,\n          0xe27c: 0x7aa9,\n          0xe27d: 0x7ac8,\n          0xe27e: 0x7ab0,\n          0xe280: 0x7ab6,\n          0xe281: 0x7ac5,\n          0xe282: 0x7ac4,\n          0xe283: 0x7abf,\n          0xe284: 0x9083,\n          0xe285: 0x7ac7,\n          0xe286: 0x7aca,\n          0xe287: 0x7acd,\n          0xe288: 0x7acf,\n          0xe289: 0x7ad5,\n          0xe28a: 0x7ad3,\n          0xe28b: 0x7ad9,\n          0xe28c: 0x7ada,\n          0xe28d: 0x7add,\n          0xe28e: 0x7ae1,\n          0xe28f: 0x7ae2,\n          0xe290: 0x7ae6,\n          0xe291: 0x7aed,\n          0xe292: 0x7af0,\n          0xe293: 0x7b02,\n          0xe294: 0x7b0f,\n          0xe295: 0x7b0a,\n          0xe296: 0x7b06,\n          0xe297: 0x7b33,\n          0xe298: 0x7b18,\n          0xe299: 0x7b19,\n          0xe29a: 0x7b1e,\n          0xe29b: 0x7b35,\n          0xe29c: 0x7b28,\n          0xe29d: 0x7b36,\n          0xe29e: 0x7b50,\n          0xe29f: 0x7b7a,\n          0xe2a0: 0x7b04,\n          0xe2a1: 0x7b4d,\n          0xe2a2: 0x7b0b,\n          0xe2a3: 0x7b4c,\n          0xe2a4: 0x7b45,\n          0xe2a5: 0x7b75,\n          0xe2a6: 0x7b65,\n          0xe2a7: 0x7b74,\n          0xe2a8: 0x7b67,\n          0xe2a9: 0x7b70,\n          0xe2aa: 0x7b71,\n          0xe2ab: 0x7b6c,\n          0xe2ac: 0x7b6e,\n          0xe2ad: 0x7b9d,\n          0xe2ae: 0x7b98,\n          0xe2af: 0x7b9f,\n          0xe2b0: 0x7b8d,\n          0xe2b1: 0x7b9c,\n          0xe2b2: 0x7b9a,\n          0xe2b3: 0x7b8b,\n          0xe2b4: 0x7b92,\n          0xe2b5: 0x7b8f,\n          0xe2b6: 0x7b5d,\n          0xe2b7: 0x7b99,\n          0xe2b8: 0x7bcb,\n          0xe2b9: 0x7bc1,\n          0xe2ba: 0x7bcc,\n          0xe2bb: 0x7bcf,\n          0xe2bc: 0x7bb4,\n          0xe2bd: 0x7bc6,\n          0xe2be: 0x7bdd,\n          0xe2bf: 0x7be9,\n          0xe2c0: 0x7c11,\n          0xe2c1: 0x7c14,\n          0xe2c2: 0x7be6,\n          0xe2c3: 0x7be5,\n          0xe2c4: 0x7c60,\n          0xe2c5: 0x7c00,\n          0xe2c6: 0x7c07,\n          0xe2c7: 0x7c13,\n          0xe2c8: 0x7bf3,\n          0xe2c9: 0x7bf7,\n          0xe2ca: 0x7c17,\n          0xe2cb: 0x7c0d,\n          0xe2cc: 0x7bf6,\n          0xe2cd: 0x7c23,\n          0xe2ce: 0x7c27,\n          0xe2cf: 0x7c2a,\n          0xe2d0: 0x7c1f,\n          0xe2d1: 0x7c37,\n          0xe2d2: 0x7c2b,\n          0xe2d3: 0x7c3d,\n          0xe2d4: 0x7c4c,\n          0xe2d5: 0x7c43,\n          0xe2d6: 0x7c54,\n          0xe2d7: 0x7c4f,\n          0xe2d8: 0x7c40,\n          0xe2d9: 0x7c50,\n          0xe2da: 0x7c58,\n          0xe2db: 0x7c5f,\n          0xe2dc: 0x7c64,\n          0xe2dd: 0x7c56,\n          0xe2de: 0x7c65,\n          0xe2df: 0x7c6c,\n          0xe2e0: 0x7c75,\n          0xe2e1: 0x7c83,\n          0xe2e2: 0x7c90,\n          0xe2e3: 0x7ca4,\n          0xe2e4: 0x7cad,\n          0xe2e5: 0x7ca2,\n          0xe2e6: 0x7cab,\n          0xe2e7: 0x7ca1,\n          0xe2e8: 0x7ca8,\n          0xe2e9: 0x7cb3,\n          0xe2ea: 0x7cb2,\n          0xe2eb: 0x7cb1,\n          0xe2ec: 0x7cae,\n          0xe2ed: 0x7cb9,\n          0xe2ee: 0x7cbd,\n          0xe2ef: 0x7cc0,\n          0xe2f0: 0x7cc5,\n          0xe2f1: 0x7cc2,\n          0xe2f2: 0x7cd8,\n          0xe2f3: 0x7cd2,\n          0xe2f4: 0x7cdc,\n          0xe2f5: 0x7ce2,\n          0xe2f6: 0x9b3b,\n          0xe2f7: 0x7cef,\n          0xe2f8: 0x7cf2,\n          0xe2f9: 0x7cf4,\n          0xe2fa: 0x7cf6,\n          0xe2fb: 0x7cfa,\n          0xe2fc: 0x7d06,\n          0xe340: 0x7d02,\n          0xe341: 0x7d1c,\n          0xe342: 0x7d15,\n          0xe343: 0x7d0a,\n          0xe344: 0x7d45,\n          0xe345: 0x7d4b,\n          0xe346: 0x7d2e,\n          0xe347: 0x7d32,\n          0xe348: 0x7d3f,\n          0xe349: 0x7d35,\n          0xe34a: 0x7d46,\n          0xe34b: 0x7d73,\n          0xe34c: 0x7d56,\n          0xe34d: 0x7d4e,\n          0xe34e: 0x7d72,\n          0xe34f: 0x7d68,\n          0xe350: 0x7d6e,\n          0xe351: 0x7d4f,\n          0xe352: 0x7d63,\n          0xe353: 0x7d93,\n          0xe354: 0x7d89,\n          0xe355: 0x7d5b,\n          0xe356: 0x7d8f,\n          0xe357: 0x7d7d,\n          0xe358: 0x7d9b,\n          0xe359: 0x7dba,\n          0xe35a: 0x7dae,\n          0xe35b: 0x7da3,\n          0xe35c: 0x7db5,\n          0xe35d: 0x7dc7,\n          0xe35e: 0x7dbd,\n          0xe35f: 0x7dab,\n          0xe360: 0x7e3d,\n          0xe361: 0x7da2,\n          0xe362: 0x7daf,\n          0xe363: 0x7ddc,\n          0xe364: 0x7db8,\n          0xe365: 0x7d9f,\n          0xe366: 0x7db0,\n          0xe367: 0x7dd8,\n          0xe368: 0x7ddd,\n          0xe369: 0x7de4,\n          0xe36a: 0x7dde,\n          0xe36b: 0x7dfb,\n          0xe36c: 0x7df2,\n          0xe36d: 0x7de1,\n          0xe36e: 0x7e05,\n          0xe36f: 0x7e0a,\n          0xe370: 0x7e23,\n          0xe371: 0x7e21,\n          0xe372: 0x7e12,\n          0xe373: 0x7e31,\n          0xe374: 0x7e1f,\n          0xe375: 0x7e09,\n          0xe376: 0x7e0b,\n          0xe377: 0x7e22,\n          0xe378: 0x7e46,\n          0xe379: 0x7e66,\n          0xe37a: 0x7e3b,\n          0xe37b: 0x7e35,\n          0xe37c: 0x7e39,\n          0xe37d: 0x7e43,\n          0xe37e: 0x7e37,\n          0xe380: 0x7e32,\n          0xe381: 0x7e3a,\n          0xe382: 0x7e67,\n          0xe383: 0x7e5d,\n          0xe384: 0x7e56,\n          0xe385: 0x7e5e,\n          0xe386: 0x7e59,\n          0xe387: 0x7e5a,\n          0xe388: 0x7e79,\n          0xe389: 0x7e6a,\n          0xe38a: 0x7e69,\n          0xe38b: 0x7e7c,\n          0xe38c: 0x7e7b,\n          0xe38d: 0x7e83,\n          0xe38e: 0x7dd5,\n          0xe38f: 0x7e7d,\n          0xe390: 0x8fae,\n          0xe391: 0x7e7f,\n          0xe392: 0x7e88,\n          0xe393: 0x7e89,\n          0xe394: 0x7e8c,\n          0xe395: 0x7e92,\n          0xe396: 0x7e90,\n          0xe397: 0x7e93,\n          0xe398: 0x7e94,\n          0xe399: 0x7e96,\n          0xe39a: 0x7e8e,\n          0xe39b: 0x7e9b,\n          0xe39c: 0x7e9c,\n          0xe39d: 0x7f38,\n          0xe39e: 0x7f3a,\n          0xe39f: 0x7f45,\n          0xe3a0: 0x7f4c,\n          0xe3a1: 0x7f4d,\n          0xe3a2: 0x7f4e,\n          0xe3a3: 0x7f50,\n          0xe3a4: 0x7f51,\n          0xe3a5: 0x7f55,\n          0xe3a6: 0x7f54,\n          0xe3a7: 0x7f58,\n          0xe3a8: 0x7f5f,\n          0xe3a9: 0x7f60,\n          0xe3aa: 0x7f68,\n          0xe3ab: 0x7f69,\n          0xe3ac: 0x7f67,\n          0xe3ad: 0x7f78,\n          0xe3ae: 0x7f82,\n          0xe3af: 0x7f86,\n          0xe3b0: 0x7f83,\n          0xe3b1: 0x7f88,\n          0xe3b2: 0x7f87,\n          0xe3b3: 0x7f8c,\n          0xe3b4: 0x7f94,\n          0xe3b5: 0x7f9e,\n          0xe3b6: 0x7f9d,\n          0xe3b7: 0x7f9a,\n          0xe3b8: 0x7fa3,\n          0xe3b9: 0x7faf,\n          0xe3ba: 0x7fb2,\n          0xe3bb: 0x7fb9,\n          0xe3bc: 0x7fae,\n          0xe3bd: 0x7fb6,\n          0xe3be: 0x7fb8,\n          0xe3bf: 0x8b71,\n          0xe3c0: 0x7fc5,\n          0xe3c1: 0x7fc6,\n          0xe3c2: 0x7fca,\n          0xe3c3: 0x7fd5,\n          0xe3c4: 0x7fd4,\n          0xe3c5: 0x7fe1,\n          0xe3c6: 0x7fe6,\n          0xe3c7: 0x7fe9,\n          0xe3c8: 0x7ff3,\n          0xe3c9: 0x7ff9,\n          0xe3ca: 0x98dc,\n          0xe3cb: 0x8006,\n          0xe3cc: 0x8004,\n          0xe3cd: 0x800b,\n          0xe3ce: 0x8012,\n          0xe3cf: 0x8018,\n          0xe3d0: 0x8019,\n          0xe3d1: 0x801c,\n          0xe3d2: 0x8021,\n          0xe3d3: 0x8028,\n          0xe3d4: 0x803f,\n          0xe3d5: 0x803b,\n          0xe3d6: 0x804a,\n          0xe3d7: 0x8046,\n          0xe3d8: 0x8052,\n          0xe3d9: 0x8058,\n          0xe3da: 0x805a,\n          0xe3db: 0x805f,\n          0xe3dc: 0x8062,\n          0xe3dd: 0x8068,\n          0xe3de: 0x8073,\n          0xe3df: 0x8072,\n          0xe3e0: 0x8070,\n          0xe3e1: 0x8076,\n          0xe3e2: 0x8079,\n          0xe3e3: 0x807d,\n          0xe3e4: 0x807f,\n          0xe3e5: 0x8084,\n          0xe3e6: 0x8086,\n          0xe3e7: 0x8085,\n          0xe3e8: 0x809b,\n          0xe3e9: 0x8093,\n          0xe3ea: 0x809a,\n          0xe3eb: 0x80ad,\n          0xe3ec: 0x5190,\n          0xe3ed: 0x80ac,\n          0xe3ee: 0x80db,\n          0xe3ef: 0x80e5,\n          0xe3f0: 0x80d9,\n          0xe3f1: 0x80dd,\n          0xe3f2: 0x80c4,\n          0xe3f3: 0x80da,\n          0xe3f4: 0x80d6,\n          0xe3f5: 0x8109,\n          0xe3f6: 0x80ef,\n          0xe3f7: 0x80f1,\n          0xe3f8: 0x811b,\n          0xe3f9: 0x8129,\n          0xe3fa: 0x8123,\n          0xe3fb: 0x812f,\n          0xe3fc: 0x814b,\n          0xe440: 0x968b,\n          0xe441: 0x8146,\n          0xe442: 0x813e,\n          0xe443: 0x8153,\n          0xe444: 0x8151,\n          0xe445: 0x80fc,\n          0xe446: 0x8171,\n          0xe447: 0x816e,\n          0xe448: 0x8165,\n          0xe449: 0x8166,\n          0xe44a: 0x8174,\n          0xe44b: 0x8183,\n          0xe44c: 0x8188,\n          0xe44d: 0x818a,\n          0xe44e: 0x8180,\n          0xe44f: 0x8182,\n          0xe450: 0x81a0,\n          0xe451: 0x8195,\n          0xe452: 0x81a4,\n          0xe453: 0x81a3,\n          0xe454: 0x815f,\n          0xe455: 0x8193,\n          0xe456: 0x81a9,\n          0xe457: 0x81b0,\n          0xe458: 0x81b5,\n          0xe459: 0x81be,\n          0xe45a: 0x81b8,\n          0xe45b: 0x81bd,\n          0xe45c: 0x81c0,\n          0xe45d: 0x81c2,\n          0xe45e: 0x81ba,\n          0xe45f: 0x81c9,\n          0xe460: 0x81cd,\n          0xe461: 0x81d1,\n          0xe462: 0x81d9,\n          0xe463: 0x81d8,\n          0xe464: 0x81c8,\n          0xe465: 0x81da,\n          0xe466: 0x81df,\n          0xe467: 0x81e0,\n          0xe468: 0x81e7,\n          0xe469: 0x81fa,\n          0xe46a: 0x81fb,\n          0xe46b: 0x81fe,\n          0xe46c: 0x8201,\n          0xe46d: 0x8202,\n          0xe46e: 0x8205,\n          0xe46f: 0x8207,\n          0xe470: 0x820a,\n          0xe471: 0x820d,\n          0xe472: 0x8210,\n          0xe473: 0x8216,\n          0xe474: 0x8229,\n          0xe475: 0x822b,\n          0xe476: 0x8238,\n          0xe477: 0x8233,\n          0xe478: 0x8240,\n          0xe479: 0x8259,\n          0xe47a: 0x8258,\n          0xe47b: 0x825d,\n          0xe47c: 0x825a,\n          0xe47d: 0x825f,\n          0xe47e: 0x8264,\n          0xe480: 0x8262,\n          0xe481: 0x8268,\n          0xe482: 0x826a,\n          0xe483: 0x826b,\n          0xe484: 0x822e,\n          0xe485: 0x8271,\n          0xe486: 0x8277,\n          0xe487: 0x8278,\n          0xe488: 0x827e,\n          0xe489: 0x828d,\n          0xe48a: 0x8292,\n          0xe48b: 0x82ab,\n          0xe48c: 0x829f,\n          0xe48d: 0x82bb,\n          0xe48e: 0x82ac,\n          0xe48f: 0x82e1,\n          0xe490: 0x82e3,\n          0xe491: 0x82df,\n          0xe492: 0x82d2,\n          0xe493: 0x82f4,\n          0xe494: 0x82f3,\n          0xe495: 0x82fa,\n          0xe496: 0x8393,\n          0xe497: 0x8303,\n          0xe498: 0x82fb,\n          0xe499: 0x82f9,\n          0xe49a: 0x82de,\n          0xe49b: 0x8306,\n          0xe49c: 0x82dc,\n          0xe49d: 0x8309,\n          0xe49e: 0x82d9,\n          0xe49f: 0x8335,\n          0xe4a0: 0x8334,\n          0xe4a1: 0x8316,\n          0xe4a2: 0x8332,\n          0xe4a3: 0x8331,\n          0xe4a4: 0x8340,\n          0xe4a5: 0x8339,\n          0xe4a6: 0x8350,\n          0xe4a7: 0x8345,\n          0xe4a8: 0x832f,\n          0xe4a9: 0x832b,\n          0xe4aa: 0x8317,\n          0xe4ab: 0x8318,\n          0xe4ac: 0x8385,\n          0xe4ad: 0x839a,\n          0xe4ae: 0x83aa,\n          0xe4af: 0x839f,\n          0xe4b0: 0x83a2,\n          0xe4b1: 0x8396,\n          0xe4b2: 0x8323,\n          0xe4b3: 0x838e,\n          0xe4b4: 0x8387,\n          0xe4b5: 0x838a,\n          0xe4b6: 0x837c,\n          0xe4b7: 0x83b5,\n          0xe4b8: 0x8373,\n          0xe4b9: 0x8375,\n          0xe4ba: 0x83a0,\n          0xe4bb: 0x8389,\n          0xe4bc: 0x83a8,\n          0xe4bd: 0x83f4,\n          0xe4be: 0x8413,\n          0xe4bf: 0x83eb,\n          0xe4c0: 0x83ce,\n          0xe4c1: 0x83fd,\n          0xe4c2: 0x8403,\n          0xe4c3: 0x83d8,\n          0xe4c4: 0x840b,\n          0xe4c5: 0x83c1,\n          0xe4c6: 0x83f7,\n          0xe4c7: 0x8407,\n          0xe4c8: 0x83e0,\n          0xe4c9: 0x83f2,\n          0xe4ca: 0x840d,\n          0xe4cb: 0x8422,\n          0xe4cc: 0x8420,\n          0xe4cd: 0x83bd,\n          0xe4ce: 0x8438,\n          0xe4cf: 0x8506,\n          0xe4d0: 0x83fb,\n          0xe4d1: 0x846d,\n          0xe4d2: 0x842a,\n          0xe4d3: 0x843c,\n          0xe4d4: 0x855a,\n          0xe4d5: 0x8484,\n          0xe4d6: 0x8477,\n          0xe4d7: 0x846b,\n          0xe4d8: 0x84ad,\n          0xe4d9: 0x846e,\n          0xe4da: 0x8482,\n          0xe4db: 0x8469,\n          0xe4dc: 0x8446,\n          0xe4dd: 0x842c,\n          0xe4de: 0x846f,\n          0xe4df: 0x8479,\n          0xe4e0: 0x8435,\n          0xe4e1: 0x84ca,\n          0xe4e2: 0x8462,\n          0xe4e3: 0x84b9,\n          0xe4e4: 0x84bf,\n          0xe4e5: 0x849f,\n          0xe4e6: 0x84d9,\n          0xe4e7: 0x84cd,\n          0xe4e8: 0x84bb,\n          0xe4e9: 0x84da,\n          0xe4ea: 0x84d0,\n          0xe4eb: 0x84c1,\n          0xe4ec: 0x84c6,\n          0xe4ed: 0x84d6,\n          0xe4ee: 0x84a1,\n          0xe4ef: 0x8521,\n          0xe4f0: 0x84ff,\n          0xe4f1: 0x84f4,\n          0xe4f2: 0x8517,\n          0xe4f3: 0x8518,\n          0xe4f4: 0x852c,\n          0xe4f5: 0x851f,\n          0xe4f6: 0x8515,\n          0xe4f7: 0x8514,\n          0xe4f8: 0x84fc,\n          0xe4f9: 0x8540,\n          0xe4fa: 0x8563,\n          0xe4fb: 0x8558,\n          0xe4fc: 0x8548,\n          0xe540: 0x8541,\n          0xe541: 0x8602,\n          0xe542: 0x854b,\n          0xe543: 0x8555,\n          0xe544: 0x8580,\n          0xe545: 0x85a4,\n          0xe546: 0x8588,\n          0xe547: 0x8591,\n          0xe548: 0x858a,\n          0xe549: 0x85a8,\n          0xe54a: 0x856d,\n          0xe54b: 0x8594,\n          0xe54c: 0x859b,\n          0xe54d: 0x85ea,\n          0xe54e: 0x8587,\n          0xe54f: 0x859c,\n          0xe550: 0x8577,\n          0xe551: 0x857e,\n          0xe552: 0x8590,\n          0xe553: 0x85c9,\n          0xe554: 0x85ba,\n          0xe555: 0x85cf,\n          0xe556: 0x85b9,\n          0xe557: 0x85d0,\n          0xe558: 0x85d5,\n          0xe559: 0x85dd,\n          0xe55a: 0x85e5,\n          0xe55b: 0x85dc,\n          0xe55c: 0x85f9,\n          0xe55d: 0x860a,\n          0xe55e: 0x8613,\n          0xe55f: 0x860b,\n          0xe560: 0x85fe,\n          0xe561: 0x85fa,\n          0xe562: 0x8606,\n          0xe563: 0x8622,\n          0xe564: 0x861a,\n          0xe565: 0x8630,\n          0xe566: 0x863f,\n          0xe567: 0x864d,\n          0xe568: 0x4e55,\n          0xe569: 0x8654,\n          0xe56a: 0x865f,\n          0xe56b: 0x8667,\n          0xe56c: 0x8671,\n          0xe56d: 0x8693,\n          0xe56e: 0x86a3,\n          0xe56f: 0x86a9,\n          0xe570: 0x86aa,\n          0xe571: 0x868b,\n          0xe572: 0x868c,\n          0xe573: 0x86b6,\n          0xe574: 0x86af,\n          0xe575: 0x86c4,\n          0xe576: 0x86c6,\n          0xe577: 0x86b0,\n          0xe578: 0x86c9,\n          0xe579: 0x8823,\n          0xe57a: 0x86ab,\n          0xe57b: 0x86d4,\n          0xe57c: 0x86de,\n          0xe57d: 0x86e9,\n          0xe57e: 0x86ec,\n          0xe580: 0x86df,\n          0xe581: 0x86db,\n          0xe582: 0x86ef,\n          0xe583: 0x8712,\n          0xe584: 0x8706,\n          0xe585: 0x8708,\n          0xe586: 0x8700,\n          0xe587: 0x8703,\n          0xe588: 0x86fb,\n          0xe589: 0x8711,\n          0xe58a: 0x8709,\n          0xe58b: 0x870d,\n          0xe58c: 0x86f9,\n          0xe58d: 0x870a,\n          0xe58e: 0x8734,\n          0xe58f: 0x873f,\n          0xe590: 0x8737,\n          0xe591: 0x873b,\n          0xe592: 0x8725,\n          0xe593: 0x8729,\n          0xe594: 0x871a,\n          0xe595: 0x8760,\n          0xe596: 0x875f,\n          0xe597: 0x8778,\n          0xe598: 0x874c,\n          0xe599: 0x874e,\n          0xe59a: 0x8774,\n          0xe59b: 0x8757,\n          0xe59c: 0x8768,\n          0xe59d: 0x876e,\n          0xe59e: 0x8759,\n          0xe59f: 0x8753,\n          0xe5a0: 0x8763,\n          0xe5a1: 0x876a,\n          0xe5a2: 0x8805,\n          0xe5a3: 0x87a2,\n          0xe5a4: 0x879f,\n          0xe5a5: 0x8782,\n          0xe5a6: 0x87af,\n          0xe5a7: 0x87cb,\n          0xe5a8: 0x87bd,\n          0xe5a9: 0x87c0,\n          0xe5aa: 0x87d0,\n          0xe5ab: 0x96d6,\n          0xe5ac: 0x87ab,\n          0xe5ad: 0x87c4,\n          0xe5ae: 0x87b3,\n          0xe5af: 0x87c7,\n          0xe5b0: 0x87c6,\n          0xe5b1: 0x87bb,\n          0xe5b2: 0x87ef,\n          0xe5b3: 0x87f2,\n          0xe5b4: 0x87e0,\n          0xe5b5: 0x880f,\n          0xe5b6: 0x880d,\n          0xe5b7: 0x87fe,\n          0xe5b8: 0x87f6,\n          0xe5b9: 0x87f7,\n          0xe5ba: 0x880e,\n          0xe5bb: 0x87d2,\n          0xe5bc: 0x8811,\n          0xe5bd: 0x8816,\n          0xe5be: 0x8815,\n          0xe5bf: 0x8822,\n          0xe5c0: 0x8821,\n          0xe5c1: 0x8831,\n          0xe5c2: 0x8836,\n          0xe5c3: 0x8839,\n          0xe5c4: 0x8827,\n          0xe5c5: 0x883b,\n          0xe5c6: 0x8844,\n          0xe5c7: 0x8842,\n          0xe5c8: 0x8852,\n          0xe5c9: 0x8859,\n          0xe5ca: 0x885e,\n          0xe5cb: 0x8862,\n          0xe5cc: 0x886b,\n          0xe5cd: 0x8881,\n          0xe5ce: 0x887e,\n          0xe5cf: 0x889e,\n          0xe5d0: 0x8875,\n          0xe5d1: 0x887d,\n          0xe5d2: 0x88b5,\n          0xe5d3: 0x8872,\n          0xe5d4: 0x8882,\n          0xe5d5: 0x8897,\n          0xe5d6: 0x8892,\n          0xe5d7: 0x88ae,\n          0xe5d8: 0x8899,\n          0xe5d9: 0x88a2,\n          0xe5da: 0x888d,\n          0xe5db: 0x88a4,\n          0xe5dc: 0x88b0,\n          0xe5dd: 0x88bf,\n          0xe5de: 0x88b1,\n          0xe5df: 0x88c3,\n          0xe5e0: 0x88c4,\n          0xe5e1: 0x88d4,\n          0xe5e2: 0x88d8,\n          0xe5e3: 0x88d9,\n          0xe5e4: 0x88dd,\n          0xe5e5: 0x88f9,\n          0xe5e6: 0x8902,\n          0xe5e7: 0x88fc,\n          0xe5e8: 0x88f4,\n          0xe5e9: 0x88e8,\n          0xe5ea: 0x88f2,\n          0xe5eb: 0x8904,\n          0xe5ec: 0x890c,\n          0xe5ed: 0x890a,\n          0xe5ee: 0x8913,\n          0xe5ef: 0x8943,\n          0xe5f0: 0x891e,\n          0xe5f1: 0x8925,\n          0xe5f2: 0x892a,\n          0xe5f3: 0x892b,\n          0xe5f4: 0x8941,\n          0xe5f5: 0x8944,\n          0xe5f6: 0x893b,\n          0xe5f7: 0x8936,\n          0xe5f8: 0x8938,\n          0xe5f9: 0x894c,\n          0xe5fa: 0x891d,\n          0xe5fb: 0x8960,\n          0xe5fc: 0x895e,\n          0xe640: 0x8966,\n          0xe641: 0x8964,\n          0xe642: 0x896d,\n          0xe643: 0x896a,\n          0xe644: 0x896f,\n          0xe645: 0x8974,\n          0xe646: 0x8977,\n          0xe647: 0x897e,\n          0xe648: 0x8983,\n          0xe649: 0x8988,\n          0xe64a: 0x898a,\n          0xe64b: 0x8993,\n          0xe64c: 0x8998,\n          0xe64d: 0x89a1,\n          0xe64e: 0x89a9,\n          0xe64f: 0x89a6,\n          0xe650: 0x89ac,\n          0xe651: 0x89af,\n          0xe652: 0x89b2,\n          0xe653: 0x89ba,\n          0xe654: 0x89bd,\n          0xe655: 0x89bf,\n          0xe656: 0x89c0,\n          0xe657: 0x89da,\n          0xe658: 0x89dc,\n          0xe659: 0x89dd,\n          0xe65a: 0x89e7,\n          0xe65b: 0x89f4,\n          0xe65c: 0x89f8,\n          0xe65d: 0x8a03,\n          0xe65e: 0x8a16,\n          0xe65f: 0x8a10,\n          0xe660: 0x8a0c,\n          0xe661: 0x8a1b,\n          0xe662: 0x8a1d,\n          0xe663: 0x8a25,\n          0xe664: 0x8a36,\n          0xe665: 0x8a41,\n          0xe666: 0x8a5b,\n          0xe667: 0x8a52,\n          0xe668: 0x8a46,\n          0xe669: 0x8a48,\n          0xe66a: 0x8a7c,\n          0xe66b: 0x8a6d,\n          0xe66c: 0x8a6c,\n          0xe66d: 0x8a62,\n          0xe66e: 0x8a85,\n          0xe66f: 0x8a82,\n          0xe670: 0x8a84,\n          0xe671: 0x8aa8,\n          0xe672: 0x8aa1,\n          0xe673: 0x8a91,\n          0xe674: 0x8aa5,\n          0xe675: 0x8aa6,\n          0xe676: 0x8a9a,\n          0xe677: 0x8aa3,\n          0xe678: 0x8ac4,\n          0xe679: 0x8acd,\n          0xe67a: 0x8ac2,\n          0xe67b: 0x8ada,\n          0xe67c: 0x8aeb,\n          0xe67d: 0x8af3,\n          0xe67e: 0x8ae7,\n          0xe680: 0x8ae4,\n          0xe681: 0x8af1,\n          0xe682: 0x8b14,\n          0xe683: 0x8ae0,\n          0xe684: 0x8ae2,\n          0xe685: 0x8af7,\n          0xe686: 0x8ade,\n          0xe687: 0x8adb,\n          0xe688: 0x8b0c,\n          0xe689: 0x8b07,\n          0xe68a: 0x8b1a,\n          0xe68b: 0x8ae1,\n          0xe68c: 0x8b16,\n          0xe68d: 0x8b10,\n          0xe68e: 0x8b17,\n          0xe68f: 0x8b20,\n          0xe690: 0x8b33,\n          0xe691: 0x97ab,\n          0xe692: 0x8b26,\n          0xe693: 0x8b2b,\n          0xe694: 0x8b3e,\n          0xe695: 0x8b28,\n          0xe696: 0x8b41,\n          0xe697: 0x8b4c,\n          0xe698: 0x8b4f,\n          0xe699: 0x8b4e,\n          0xe69a: 0x8b49,\n          0xe69b: 0x8b56,\n          0xe69c: 0x8b5b,\n          0xe69d: 0x8b5a,\n          0xe69e: 0x8b6b,\n          0xe69f: 0x8b5f,\n          0xe6a0: 0x8b6c,\n          0xe6a1: 0x8b6f,\n          0xe6a2: 0x8b74,\n          0xe6a3: 0x8b7d,\n          0xe6a4: 0x8b80,\n          0xe6a5: 0x8b8c,\n          0xe6a6: 0x8b8e,\n          0xe6a7: 0x8b92,\n          0xe6a8: 0x8b93,\n          0xe6a9: 0x8b96,\n          0xe6aa: 0x8b99,\n          0xe6ab: 0x8b9a,\n          0xe6ac: 0x8c3a,\n          0xe6ad: 0x8c41,\n          0xe6ae: 0x8c3f,\n          0xe6af: 0x8c48,\n          0xe6b0: 0x8c4c,\n          0xe6b1: 0x8c4e,\n          0xe6b2: 0x8c50,\n          0xe6b3: 0x8c55,\n          0xe6b4: 0x8c62,\n          0xe6b5: 0x8c6c,\n          0xe6b6: 0x8c78,\n          0xe6b7: 0x8c7a,\n          0xe6b8: 0x8c82,\n          0xe6b9: 0x8c89,\n          0xe6ba: 0x8c85,\n          0xe6bb: 0x8c8a,\n          0xe6bc: 0x8c8d,\n          0xe6bd: 0x8c8e,\n          0xe6be: 0x8c94,\n          0xe6bf: 0x8c7c,\n          0xe6c0: 0x8c98,\n          0xe6c1: 0x621d,\n          0xe6c2: 0x8cad,\n          0xe6c3: 0x8caa,\n          0xe6c4: 0x8cbd,\n          0xe6c5: 0x8cb2,\n          0xe6c6: 0x8cb3,\n          0xe6c7: 0x8cae,\n          0xe6c8: 0x8cb6,\n          0xe6c9: 0x8cc8,\n          0xe6ca: 0x8cc1,\n          0xe6cb: 0x8ce4,\n          0xe6cc: 0x8ce3,\n          0xe6cd: 0x8cda,\n          0xe6ce: 0x8cfd,\n          0xe6cf: 0x8cfa,\n          0xe6d0: 0x8cfb,\n          0xe6d1: 0x8d04,\n          0xe6d2: 0x8d05,\n          0xe6d3: 0x8d0a,\n          0xe6d4: 0x8d07,\n          0xe6d5: 0x8d0f,\n          0xe6d6: 0x8d0d,\n          0xe6d7: 0x8d10,\n          0xe6d8: 0x9f4e,\n          0xe6d9: 0x8d13,\n          0xe6da: 0x8ccd,\n          0xe6db: 0x8d14,\n          0xe6dc: 0x8d16,\n          0xe6dd: 0x8d67,\n          0xe6de: 0x8d6d,\n          0xe6df: 0x8d71,\n          0xe6e0: 0x8d73,\n          0xe6e1: 0x8d81,\n          0xe6e2: 0x8d99,\n          0xe6e3: 0x8dc2,\n          0xe6e4: 0x8dbe,\n          0xe6e5: 0x8dba,\n          0xe6e6: 0x8dcf,\n          0xe6e7: 0x8dda,\n          0xe6e8: 0x8dd6,\n          0xe6e9: 0x8dcc,\n          0xe6ea: 0x8ddb,\n          0xe6eb: 0x8dcb,\n          0xe6ec: 0x8dea,\n          0xe6ed: 0x8deb,\n          0xe6ee: 0x8ddf,\n          0xe6ef: 0x8de3,\n          0xe6f0: 0x8dfc,\n          0xe6f1: 0x8e08,\n          0xe6f2: 0x8e09,\n          0xe6f3: 0x8dff,\n          0xe6f4: 0x8e1d,\n          0xe6f5: 0x8e1e,\n          0xe6f6: 0x8e10,\n          0xe6f7: 0x8e1f,\n          0xe6f8: 0x8e42,\n          0xe6f9: 0x8e35,\n          0xe6fa: 0x8e30,\n          0xe6fb: 0x8e34,\n          0xe6fc: 0x8e4a,\n          0xe740: 0x8e47,\n          0xe741: 0x8e49,\n          0xe742: 0x8e4c,\n          0xe743: 0x8e50,\n          0xe744: 0x8e48,\n          0xe745: 0x8e59,\n          0xe746: 0x8e64,\n          0xe747: 0x8e60,\n          0xe748: 0x8e2a,\n          0xe749: 0x8e63,\n          0xe74a: 0x8e55,\n          0xe74b: 0x8e76,\n          0xe74c: 0x8e72,\n          0xe74d: 0x8e7c,\n          0xe74e: 0x8e81,\n          0xe74f: 0x8e87,\n          0xe750: 0x8e85,\n          0xe751: 0x8e84,\n          0xe752: 0x8e8b,\n          0xe753: 0x8e8a,\n          0xe754: 0x8e93,\n          0xe755: 0x8e91,\n          0xe756: 0x8e94,\n          0xe757: 0x8e99,\n          0xe758: 0x8eaa,\n          0xe759: 0x8ea1,\n          0xe75a: 0x8eac,\n          0xe75b: 0x8eb0,\n          0xe75c: 0x8ec6,\n          0xe75d: 0x8eb1,\n          0xe75e: 0x8ebe,\n          0xe75f: 0x8ec5,\n          0xe760: 0x8ec8,\n          0xe761: 0x8ecb,\n          0xe762: 0x8edb,\n          0xe763: 0x8ee3,\n          0xe764: 0x8efc,\n          0xe765: 0x8efb,\n          0xe766: 0x8eeb,\n          0xe767: 0x8efe,\n          0xe768: 0x8f0a,\n          0xe769: 0x8f05,\n          0xe76a: 0x8f15,\n          0xe76b: 0x8f12,\n          0xe76c: 0x8f19,\n          0xe76d: 0x8f13,\n          0xe76e: 0x8f1c,\n          0xe76f: 0x8f1f,\n          0xe770: 0x8f1b,\n          0xe771: 0x8f0c,\n          0xe772: 0x8f26,\n          0xe773: 0x8f33,\n          0xe774: 0x8f3b,\n          0xe775: 0x8f39,\n          0xe776: 0x8f45,\n          0xe777: 0x8f42,\n          0xe778: 0x8f3e,\n          0xe779: 0x8f4c,\n          0xe77a: 0x8f49,\n          0xe77b: 0x8f46,\n          0xe77c: 0x8f4e,\n          0xe77d: 0x8f57,\n          0xe77e: 0x8f5c,\n          0xe780: 0x8f62,\n          0xe781: 0x8f63,\n          0xe782: 0x8f64,\n          0xe783: 0x8f9c,\n          0xe784: 0x8f9f,\n          0xe785: 0x8fa3,\n          0xe786: 0x8fad,\n          0xe787: 0x8faf,\n          0xe788: 0x8fb7,\n          0xe789: 0x8fda,\n          0xe78a: 0x8fe5,\n          0xe78b: 0x8fe2,\n          0xe78c: 0x8fea,\n          0xe78d: 0x8fef,\n          0xe78e: 0x9087,\n          0xe78f: 0x8ff4,\n          0xe790: 0x9005,\n          0xe791: 0x8ff9,\n          0xe792: 0x8ffa,\n          0xe793: 0x9011,\n          0xe794: 0x9015,\n          0xe795: 0x9021,\n          0xe796: 0x900d,\n          0xe797: 0x901e,\n          0xe798: 0x9016,\n          0xe799: 0x900b,\n          0xe79a: 0x9027,\n          0xe79b: 0x9036,\n          0xe79c: 0x9035,\n          0xe79d: 0x9039,\n          0xe79e: 0x8ff8,\n          0xe79f: 0x904f,\n          0xe7a0: 0x9050,\n          0xe7a1: 0x9051,\n          0xe7a2: 0x9052,\n          0xe7a3: 0x900e,\n          0xe7a4: 0x9049,\n          0xe7a5: 0x903e,\n          0xe7a6: 0x9056,\n          0xe7a7: 0x9058,\n          0xe7a8: 0x905e,\n          0xe7a9: 0x9068,\n          0xe7aa: 0x906f,\n          0xe7ab: 0x9076,\n          0xe7ac: 0x96a8,\n          0xe7ad: 0x9072,\n          0xe7ae: 0x9082,\n          0xe7af: 0x907d,\n          0xe7b0: 0x9081,\n          0xe7b1: 0x9080,\n          0xe7b2: 0x908a,\n          0xe7b3: 0x9089,\n          0xe7b4: 0x908f,\n          0xe7b5: 0x90a8,\n          0xe7b6: 0x90af,\n          0xe7b7: 0x90b1,\n          0xe7b8: 0x90b5,\n          0xe7b9: 0x90e2,\n          0xe7ba: 0x90e4,\n          0xe7bb: 0x6248,\n          0xe7bc: 0x90db,\n          0xe7bd: 0x9102,\n          0xe7be: 0x9112,\n          0xe7bf: 0x9119,\n          0xe7c0: 0x9132,\n          0xe7c1: 0x9130,\n          0xe7c2: 0x914a,\n          0xe7c3: 0x9156,\n          0xe7c4: 0x9158,\n          0xe7c5: 0x9163,\n          0xe7c6: 0x9165,\n          0xe7c7: 0x9169,\n          0xe7c8: 0x9173,\n          0xe7c9: 0x9172,\n          0xe7ca: 0x918b,\n          0xe7cb: 0x9189,\n          0xe7cc: 0x9182,\n          0xe7cd: 0x91a2,\n          0xe7ce: 0x91ab,\n          0xe7cf: 0x91af,\n          0xe7d0: 0x91aa,\n          0xe7d1: 0x91b5,\n          0xe7d2: 0x91b4,\n          0xe7d3: 0x91ba,\n          0xe7d4: 0x91c0,\n          0xe7d5: 0x91c1,\n          0xe7d6: 0x91c9,\n          0xe7d7: 0x91cb,\n          0xe7d8: 0x91d0,\n          0xe7d9: 0x91d6,\n          0xe7da: 0x91df,\n          0xe7db: 0x91e1,\n          0xe7dc: 0x91db,\n          0xe7dd: 0x91fc,\n          0xe7de: 0x91f5,\n          0xe7df: 0x91f6,\n          0xe7e0: 0x921e,\n          0xe7e1: 0x91ff,\n          0xe7e2: 0x9214,\n          0xe7e3: 0x922c,\n          0xe7e4: 0x9215,\n          0xe7e5: 0x9211,\n          0xe7e6: 0x925e,\n          0xe7e7: 0x9257,\n          0xe7e8: 0x9245,\n          0xe7e9: 0x9249,\n          0xe7ea: 0x9264,\n          0xe7eb: 0x9248,\n          0xe7ec: 0x9295,\n          0xe7ed: 0x923f,\n          0xe7ee: 0x924b,\n          0xe7ef: 0x9250,\n          0xe7f0: 0x929c,\n          0xe7f1: 0x9296,\n          0xe7f2: 0x9293,\n          0xe7f3: 0x929b,\n          0xe7f4: 0x925a,\n          0xe7f5: 0x92cf,\n          0xe7f6: 0x92b9,\n          0xe7f7: 0x92b7,\n          0xe7f8: 0x92e9,\n          0xe7f9: 0x930f,\n          0xe7fa: 0x92fa,\n          0xe7fb: 0x9344,\n          0xe7fc: 0x932e,\n          0xe840: 0x9319,\n          0xe841: 0x9322,\n          0xe842: 0x931a,\n          0xe843: 0x9323,\n          0xe844: 0x933a,\n          0xe845: 0x9335,\n          0xe846: 0x933b,\n          0xe847: 0x935c,\n          0xe848: 0x9360,\n          0xe849: 0x937c,\n          0xe84a: 0x936e,\n          0xe84b: 0x9356,\n          0xe84c: 0x93b0,\n          0xe84d: 0x93ac,\n          0xe84e: 0x93ad,\n          0xe84f: 0x9394,\n          0xe850: 0x93b9,\n          0xe851: 0x93d6,\n          0xe852: 0x93d7,\n          0xe853: 0x93e8,\n          0xe854: 0x93e5,\n          0xe855: 0x93d8,\n          0xe856: 0x93c3,\n          0xe857: 0x93dd,\n          0xe858: 0x93d0,\n          0xe859: 0x93c8,\n          0xe85a: 0x93e4,\n          0xe85b: 0x941a,\n          0xe85c: 0x9414,\n          0xe85d: 0x9413,\n          0xe85e: 0x9403,\n          0xe85f: 0x9407,\n          0xe860: 0x9410,\n          0xe861: 0x9436,\n          0xe862: 0x942b,\n          0xe863: 0x9435,\n          0xe864: 0x9421,\n          0xe865: 0x943a,\n          0xe866: 0x9441,\n          0xe867: 0x9452,\n          0xe868: 0x9444,\n          0xe869: 0x945b,\n          0xe86a: 0x9460,\n          0xe86b: 0x9462,\n          0xe86c: 0x945e,\n          0xe86d: 0x946a,\n          0xe86e: 0x9229,\n          0xe86f: 0x9470,\n          0xe870: 0x9475,\n          0xe871: 0x9477,\n          0xe872: 0x947d,\n          0xe873: 0x945a,\n          0xe874: 0x947c,\n          0xe875: 0x947e,\n          0xe876: 0x9481,\n          0xe877: 0x947f,\n          0xe878: 0x9582,\n          0xe879: 0x9587,\n          0xe87a: 0x958a,\n          0xe87b: 0x9594,\n          0xe87c: 0x9596,\n          0xe87d: 0x9598,\n          0xe87e: 0x9599,\n          0xe880: 0x95a0,\n          0xe881: 0x95a8,\n          0xe882: 0x95a7,\n          0xe883: 0x95ad,\n          0xe884: 0x95bc,\n          0xe885: 0x95bb,\n          0xe886: 0x95b9,\n          0xe887: 0x95be,\n          0xe888: 0x95ca,\n          0xe889: 0x6ff6,\n          0xe88a: 0x95c3,\n          0xe88b: 0x95cd,\n          0xe88c: 0x95cc,\n          0xe88d: 0x95d5,\n          0xe88e: 0x95d4,\n          0xe88f: 0x95d6,\n          0xe890: 0x95dc,\n          0xe891: 0x95e1,\n          0xe892: 0x95e5,\n          0xe893: 0x95e2,\n          0xe894: 0x9621,\n          0xe895: 0x9628,\n          0xe896: 0x962e,\n          0xe897: 0x962f,\n          0xe898: 0x9642,\n          0xe899: 0x964c,\n          0xe89a: 0x964f,\n          0xe89b: 0x964b,\n          0xe89c: 0x9677,\n          0xe89d: 0x965c,\n          0xe89e: 0x965e,\n          0xe89f: 0x965d,\n          0xe8a0: 0x965f,\n          0xe8a1: 0x9666,\n          0xe8a2: 0x9672,\n          0xe8a3: 0x966c,\n          0xe8a4: 0x968d,\n          0xe8a5: 0x9698,\n          0xe8a6: 0x9695,\n          0xe8a7: 0x9697,\n          0xe8a8: 0x96aa,\n          0xe8a9: 0x96a7,\n          0xe8aa: 0x96b1,\n          0xe8ab: 0x96b2,\n          0xe8ac: 0x96b0,\n          0xe8ad: 0x96b4,\n          0xe8ae: 0x96b6,\n          0xe8af: 0x96b8,\n          0xe8b0: 0x96b9,\n          0xe8b1: 0x96ce,\n          0xe8b2: 0x96cb,\n          0xe8b3: 0x96c9,\n          0xe8b4: 0x96cd,\n          0xe8b5: 0x894d,\n          0xe8b6: 0x96dc,\n          0xe8b7: 0x970d,\n          0xe8b8: 0x96d5,\n          0xe8b9: 0x96f9,\n          0xe8ba: 0x9704,\n          0xe8bb: 0x9706,\n          0xe8bc: 0x9708,\n          0xe8bd: 0x9713,\n          0xe8be: 0x970e,\n          0xe8bf: 0x9711,\n          0xe8c0: 0x970f,\n          0xe8c1: 0x9716,\n          0xe8c2: 0x9719,\n          0xe8c3: 0x9724,\n          0xe8c4: 0x972a,\n          0xe8c5: 0x9730,\n          0xe8c6: 0x9739,\n          0xe8c7: 0x973d,\n          0xe8c8: 0x973e,\n          0xe8c9: 0x9744,\n          0xe8ca: 0x9746,\n          0xe8cb: 0x9748,\n          0xe8cc: 0x9742,\n          0xe8cd: 0x9749,\n          0xe8ce: 0x975c,\n          0xe8cf: 0x9760,\n          0xe8d0: 0x9764,\n          0xe8d1: 0x9766,\n          0xe8d2: 0x9768,\n          0xe8d3: 0x52d2,\n          0xe8d4: 0x976b,\n          0xe8d5: 0x9771,\n          0xe8d6: 0x9779,\n          0xe8d7: 0x9785,\n          0xe8d8: 0x977c,\n          0xe8d9: 0x9781,\n          0xe8da: 0x977a,\n          0xe8db: 0x9786,\n          0xe8dc: 0x978b,\n          0xe8dd: 0x978f,\n          0xe8de: 0x9790,\n          0xe8df: 0x979c,\n          0xe8e0: 0x97a8,\n          0xe8e1: 0x97a6,\n          0xe8e2: 0x97a3,\n          0xe8e3: 0x97b3,\n          0xe8e4: 0x97b4,\n          0xe8e5: 0x97c3,\n          0xe8e6: 0x97c6,\n          0xe8e7: 0x97c8,\n          0xe8e8: 0x97cb,\n          0xe8e9: 0x97dc,\n          0xe8ea: 0x97ed,\n          0xe8eb: 0x9f4f,\n          0xe8ec: 0x97f2,\n          0xe8ed: 0x7adf,\n          0xe8ee: 0x97f6,\n          0xe8ef: 0x97f5,\n          0xe8f0: 0x980f,\n          0xe8f1: 0x980c,\n          0xe8f2: 0x9838,\n          0xe8f3: 0x9824,\n          0xe8f4: 0x9821,\n          0xe8f5: 0x9837,\n          0xe8f6: 0x983d,\n          0xe8f7: 0x9846,\n          0xe8f8: 0x984f,\n          0xe8f9: 0x984b,\n          0xe8fa: 0x986b,\n          0xe8fb: 0x986f,\n          0xe8fc: 0x9870,\n          0xe940: 0x9871,\n          0xe941: 0x9874,\n          0xe942: 0x9873,\n          0xe943: 0x98aa,\n          0xe944: 0x98af,\n          0xe945: 0x98b1,\n          0xe946: 0x98b6,\n          0xe947: 0x98c4,\n          0xe948: 0x98c3,\n          0xe949: 0x98c6,\n          0xe94a: 0x98e9,\n          0xe94b: 0x98eb,\n          0xe94c: 0x9903,\n          0xe94d: 0x9909,\n          0xe94e: 0x9912,\n          0xe94f: 0x9914,\n          0xe950: 0x9918,\n          0xe951: 0x9921,\n          0xe952: 0x991d,\n          0xe953: 0x991e,\n          0xe954: 0x9924,\n          0xe955: 0x9920,\n          0xe956: 0x992c,\n          0xe957: 0x992e,\n          0xe958: 0x993d,\n          0xe959: 0x993e,\n          0xe95a: 0x9942,\n          0xe95b: 0x9949,\n          0xe95c: 0x9945,\n          0xe95d: 0x9950,\n          0xe95e: 0x994b,\n          0xe95f: 0x9951,\n          0xe960: 0x9952,\n          0xe961: 0x994c,\n          0xe962: 0x9955,\n          0xe963: 0x9997,\n          0xe964: 0x9998,\n          0xe965: 0x99a5,\n          0xe966: 0x99ad,\n          0xe967: 0x99ae,\n          0xe968: 0x99bc,\n          0xe969: 0x99df,\n          0xe96a: 0x99db,\n          0xe96b: 0x99dd,\n          0xe96c: 0x99d8,\n          0xe96d: 0x99d1,\n          0xe96e: 0x99ed,\n          0xe96f: 0x99ee,\n          0xe970: 0x99f1,\n          0xe971: 0x99f2,\n          0xe972: 0x99fb,\n          0xe973: 0x99f8,\n          0xe974: 0x9a01,\n          0xe975: 0x9a0f,\n          0xe976: 0x9a05,\n          0xe977: 0x99e2,\n          0xe978: 0x9a19,\n          0xe979: 0x9a2b,\n          0xe97a: 0x9a37,\n          0xe97b: 0x9a45,\n          0xe97c: 0x9a42,\n          0xe97d: 0x9a40,\n          0xe97e: 0x9a43,\n          0xe980: 0x9a3e,\n          0xe981: 0x9a55,\n          0xe982: 0x9a4d,\n          0xe983: 0x9a5b,\n          0xe984: 0x9a57,\n          0xe985: 0x9a5f,\n          0xe986: 0x9a62,\n          0xe987: 0x9a65,\n          0xe988: 0x9a64,\n          0xe989: 0x9a69,\n          0xe98a: 0x9a6b,\n          0xe98b: 0x9a6a,\n          0xe98c: 0x9aad,\n          0xe98d: 0x9ab0,\n          0xe98e: 0x9abc,\n          0xe98f: 0x9ac0,\n          0xe990: 0x9acf,\n          0xe991: 0x9ad1,\n          0xe992: 0x9ad3,\n          0xe993: 0x9ad4,\n          0xe994: 0x9ade,\n          0xe995: 0x9adf,\n          0xe996: 0x9ae2,\n          0xe997: 0x9ae3,\n          0xe998: 0x9ae6,\n          0xe999: 0x9aef,\n          0xe99a: 0x9aeb,\n          0xe99b: 0x9aee,\n          0xe99c: 0x9af4,\n          0xe99d: 0x9af1,\n          0xe99e: 0x9af7,\n          0xe99f: 0x9afb,\n          0xe9a0: 0x9b06,\n          0xe9a1: 0x9b18,\n          0xe9a2: 0x9b1a,\n          0xe9a3: 0x9b1f,\n          0xe9a4: 0x9b22,\n          0xe9a5: 0x9b23,\n          0xe9a6: 0x9b25,\n          0xe9a7: 0x9b27,\n          0xe9a8: 0x9b28,\n          0xe9a9: 0x9b29,\n          0xe9aa: 0x9b2a,\n          0xe9ab: 0x9b2e,\n          0xe9ac: 0x9b2f,\n          0xe9ad: 0x9b32,\n          0xe9ae: 0x9b44,\n          0xe9af: 0x9b43,\n          0xe9b0: 0x9b4f,\n          0xe9b1: 0x9b4d,\n          0xe9b2: 0x9b4e,\n          0xe9b3: 0x9b51,\n          0xe9b4: 0x9b58,\n          0xe9b5: 0x9b74,\n          0xe9b6: 0x9b93,\n          0xe9b7: 0x9b83,\n          0xe9b8: 0x9b91,\n          0xe9b9: 0x9b96,\n          0xe9ba: 0x9b97,\n          0xe9bb: 0x9b9f,\n          0xe9bc: 0x9ba0,\n          0xe9bd: 0x9ba8,\n          0xe9be: 0x9bb4,\n          0xe9bf: 0x9bc0,\n          0xe9c0: 0x9bca,\n          0xe9c1: 0x9bb9,\n          0xe9c2: 0x9bc6,\n          0xe9c3: 0x9bcf,\n          0xe9c4: 0x9bd1,\n          0xe9c5: 0x9bd2,\n          0xe9c6: 0x9be3,\n          0xe9c7: 0x9be2,\n          0xe9c8: 0x9be4,\n          0xe9c9: 0x9bd4,\n          0xe9ca: 0x9be1,\n          0xe9cb: 0x9c3a,\n          0xe9cc: 0x9bf2,\n          0xe9cd: 0x9bf1,\n          0xe9ce: 0x9bf0,\n          0xe9cf: 0x9c15,\n          0xe9d0: 0x9c14,\n          0xe9d1: 0x9c09,\n          0xe9d2: 0x9c13,\n          0xe9d3: 0x9c0c,\n          0xe9d4: 0x9c06,\n          0xe9d5: 0x9c08,\n          0xe9d6: 0x9c12,\n          0xe9d7: 0x9c0a,\n          0xe9d8: 0x9c04,\n          0xe9d9: 0x9c2e,\n          0xe9da: 0x9c1b,\n          0xe9db: 0x9c25,\n          0xe9dc: 0x9c24,\n          0xe9dd: 0x9c21,\n          0xe9de: 0x9c30,\n          0xe9df: 0x9c47,\n          0xe9e0: 0x9c32,\n          0xe9e1: 0x9c46,\n          0xe9e2: 0x9c3e,\n          0xe9e3: 0x9c5a,\n          0xe9e4: 0x9c60,\n          0xe9e5: 0x9c67,\n          0xe9e6: 0x9c76,\n          0xe9e7: 0x9c78,\n          0xe9e8: 0x9ce7,\n          0xe9e9: 0x9cec,\n          0xe9ea: 0x9cf0,\n          0xe9eb: 0x9d09,\n          0xe9ec: 0x9d08,\n          0xe9ed: 0x9ceb,\n          0xe9ee: 0x9d03,\n          0xe9ef: 0x9d06,\n          0xe9f0: 0x9d2a,\n          0xe9f1: 0x9d26,\n          0xe9f2: 0x9daf,\n          0xe9f3: 0x9d23,\n          0xe9f4: 0x9d1f,\n          0xe9f5: 0x9d44,\n          0xe9f6: 0x9d15,\n          0xe9f7: 0x9d12,\n          0xe9f8: 0x9d41,\n          0xe9f9: 0x9d3f,\n          0xe9fa: 0x9d3e,\n          0xe9fb: 0x9d46,\n          0xe9fc: 0x9d48,\n          0xea40: 0x9d5d,\n          0xea41: 0x9d5e,\n          0xea42: 0x9d64,\n          0xea43: 0x9d51,\n          0xea44: 0x9d50,\n          0xea45: 0x9d59,\n          0xea46: 0x9d72,\n          0xea47: 0x9d89,\n          0xea48: 0x9d87,\n          0xea49: 0x9dab,\n          0xea4a: 0x9d6f,\n          0xea4b: 0x9d7a,\n          0xea4c: 0x9d9a,\n          0xea4d: 0x9da4,\n          0xea4e: 0x9da9,\n          0xea4f: 0x9db2,\n          0xea50: 0x9dc4,\n          0xea51: 0x9dc1,\n          0xea52: 0x9dbb,\n          0xea53: 0x9db8,\n          0xea54: 0x9dba,\n          0xea55: 0x9dc6,\n          0xea56: 0x9dcf,\n          0xea57: 0x9dc2,\n          0xea58: 0x9dd9,\n          0xea59: 0x9dd3,\n          0xea5a: 0x9df8,\n          0xea5b: 0x9de6,\n          0xea5c: 0x9ded,\n          0xea5d: 0x9def,\n          0xea5e: 0x9dfd,\n          0xea5f: 0x9e1a,\n          0xea60: 0x9e1b,\n          0xea61: 0x9e1e,\n          0xea62: 0x9e75,\n          0xea63: 0x9e79,\n          0xea64: 0x9e7d,\n          0xea65: 0x9e81,\n          0xea66: 0x9e88,\n          0xea67: 0x9e8b,\n          0xea68: 0x9e8c,\n          0xea69: 0x9e92,\n          0xea6a: 0x9e95,\n          0xea6b: 0x9e91,\n          0xea6c: 0x9e9d,\n          0xea6d: 0x9ea5,\n          0xea6e: 0x9ea9,\n          0xea6f: 0x9eb8,\n          0xea70: 0x9eaa,\n          0xea71: 0x9ead,\n          0xea72: 0x9761,\n          0xea73: 0x9ecc,\n          0xea74: 0x9ece,\n          0xea75: 0x9ecf,\n          0xea76: 0x9ed0,\n          0xea77: 0x9ed4,\n          0xea78: 0x9edc,\n          0xea79: 0x9ede,\n          0xea7a: 0x9edd,\n          0xea7b: 0x9ee0,\n          0xea7c: 0x9ee5,\n          0xea7d: 0x9ee8,\n          0xea7e: 0x9eef,\n          0xea80: 0x9ef4,\n          0xea81: 0x9ef6,\n          0xea82: 0x9ef7,\n          0xea83: 0x9ef9,\n          0xea84: 0x9efb,\n          0xea85: 0x9efc,\n          0xea86: 0x9efd,\n          0xea87: 0x9f07,\n          0xea88: 0x9f08,\n          0xea89: 0x76b7,\n          0xea8a: 0x9f15,\n          0xea8b: 0x9f21,\n          0xea8c: 0x9f2c,\n          0xea8d: 0x9f3e,\n          0xea8e: 0x9f4a,\n          0xea8f: 0x9f52,\n          0xea90: 0x9f54,\n          0xea91: 0x9f63,\n          0xea92: 0x9f5f,\n          0xea93: 0x9f60,\n          0xea94: 0x9f61,\n          0xea95: 0x9f66,\n          0xea96: 0x9f67,\n          0xea97: 0x9f6c,\n          0xea98: 0x9f6a,\n          0xea99: 0x9f77,\n          0xea9a: 0x9f72,\n          0xea9b: 0x9f76,\n          0xea9c: 0x9f95,\n          0xea9d: 0x9f9c,\n          0xea9e: 0x9fa0,\n          0xea9f: 0x582f,\n          0xeaa0: 0x69c7,\n          0xeaa1: 0x9059,\n          0xeaa2: 0x7464,\n          0xeaa3: 0x51dc,\n          0xeaa4: 0x7199,\n        };\n\n        /***/\n      },\n      /* 9 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        var GenericGF_1 = __webpack_require__(1);\n        var GenericGFPoly_1 = __webpack_require__(2);\n        function runEuclideanAlgorithm(field, a, b, R) {\n          var _a;\n          // Assume a's degree is >= b's\n          if (a.degree() < b.degree()) {\n            (_a = [b, a]), (a = _a[0]), (b = _a[1]);\n          }\n          var rLast = a;\n          var r = b;\n          var tLast = field.zero;\n          var t = field.one;\n          // Run Euclidean algorithm until r's degree is less than R/2\n          while (r.degree() >= R / 2) {\n            var rLastLast = rLast;\n            var tLastLast = tLast;\n            rLast = r;\n            tLast = t;\n            // Divide rLastLast by rLast, with quotient in q and remainder in r\n            if (rLast.isZero()) {\n              // Euclidean algorithm already terminated?\n              return null;\n            }\n            r = rLastLast;\n            var q = field.zero;\n            var denominatorLeadingTerm = rLast.getCoefficient(rLast.degree());\n            var dltInverse = field.inverse(denominatorLeadingTerm);\n            while (r.degree() >= rLast.degree() && !r.isZero()) {\n              var degreeDiff = r.degree() - rLast.degree();\n              var scale = field.multiply(\n                r.getCoefficient(r.degree()),\n                dltInverse\n              );\n              q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n              r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n            }\n            t = q.multiplyPoly(tLast).addOrSubtract(tLastLast);\n            if (r.degree() >= rLast.degree()) {\n              return null;\n            }\n          }\n          var sigmaTildeAtZero = t.getCoefficient(0);\n          if (sigmaTildeAtZero === 0) {\n            return null;\n          }\n          var inverse = field.inverse(sigmaTildeAtZero);\n          return [t.multiply(inverse), r.multiply(inverse)];\n        }\n        function findErrorLocations(field, errorLocator) {\n          // This is a direct application of Chien's search\n          var numErrors = errorLocator.degree();\n          if (numErrors === 1) {\n            return [errorLocator.getCoefficient(1)];\n          }\n          var result = new Array(numErrors);\n          var errorCount = 0;\n          for (var i = 1; i < field.size && errorCount < numErrors; i++) {\n            if (errorLocator.evaluateAt(i) === 0) {\n              result[errorCount] = field.inverse(i);\n              errorCount++;\n            }\n          }\n          if (errorCount !== numErrors) {\n            return null;\n          }\n          return result;\n        }\n        function findErrorMagnitudes(field, errorEvaluator, errorLocations) {\n          // This is directly applying Forney's Formula\n          var s = errorLocations.length;\n          var result = new Array(s);\n          for (var i = 0; i < s; i++) {\n            var xiInverse = field.inverse(errorLocations[i]);\n            var denominator = 1;\n            for (var j = 0; j < s; j++) {\n              if (i !== j) {\n                denominator = field.multiply(\n                  denominator,\n                  GenericGF_1.addOrSubtractGF(\n                    1,\n                    field.multiply(errorLocations[j], xiInverse)\n                  )\n                );\n              }\n            }\n            result[i] = field.multiply(\n              errorEvaluator.evaluateAt(xiInverse),\n              field.inverse(denominator)\n            );\n            if (field.generatorBase !== 0) {\n              result[i] = field.multiply(result[i], xiInverse);\n            }\n          }\n          return result;\n        }\n        function decode(bytes, twoS) {\n          var outputBytes = new Uint8ClampedArray(bytes.length);\n          outputBytes.set(bytes);\n          var field = new GenericGF_1.default(0x011d, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n          var poly = new GenericGFPoly_1.default(field, outputBytes);\n          var syndromeCoefficients = new Uint8ClampedArray(twoS);\n          var error = false;\n          for (var s = 0; s < twoS; s++) {\n            var evaluation = poly.evaluateAt(\n              field.exp(s + field.generatorBase)\n            );\n            syndromeCoefficients[\n              syndromeCoefficients.length - 1 - s\n            ] = evaluation;\n            if (evaluation !== 0) {\n              error = true;\n            }\n          }\n          if (!error) {\n            return outputBytes;\n          }\n          var syndrome = new GenericGFPoly_1.default(\n            field,\n            syndromeCoefficients\n          );\n          var sigmaOmega = runEuclideanAlgorithm(\n            field,\n            field.buildMonomial(twoS, 1),\n            syndrome,\n            twoS\n          );\n          if (sigmaOmega === null) {\n            return null;\n          }\n          var errorLocations = findErrorLocations(field, sigmaOmega[0]);\n          if (errorLocations == null) {\n            return null;\n          }\n          var errorMagnitudes = findErrorMagnitudes(\n            field,\n            sigmaOmega[1],\n            errorLocations\n          );\n          for (var i = 0; i < errorLocations.length; i++) {\n            var position =\n              outputBytes.length - 1 - field.log(errorLocations[i]);\n            if (position < 0) {\n              return null;\n            }\n            outputBytes[position] = GenericGF_1.addOrSubtractGF(\n              outputBytes[position],\n              errorMagnitudes[i]\n            );\n          }\n          return outputBytes;\n        }\n        exports.decode = decode;\n\n        /***/\n      },\n      /* 10 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        exports.VERSIONS = [\n          {\n            infoBits: null,\n            versionNumber: 1,\n            alignmentPatternCenters: [],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 7,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 19 }],\n              },\n              {\n                ecCodewordsPerBlock: 10,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n              },\n              {\n                ecCodewordsPerBlock: 13,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 13 }],\n              },\n              {\n                ecCodewordsPerBlock: 17,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 9 }],\n              },\n            ],\n          },\n          {\n            infoBits: null,\n            versionNumber: 2,\n            alignmentPatternCenters: [6, 18],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 10,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 34 }],\n              },\n              {\n                ecCodewordsPerBlock: 16,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 28 }],\n              },\n              {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 22 }],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n              },\n            ],\n          },\n          {\n            infoBits: null,\n            versionNumber: 3,\n            alignmentPatternCenters: [6, 22],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 15,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 55 }],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 44 }],\n              },\n              {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 17 }],\n              },\n              {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 13 }],\n              },\n            ],\n          },\n          {\n            infoBits: null,\n            versionNumber: 4,\n            alignmentPatternCenters: [6, 26],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 80 }],\n              },\n              {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 32 }],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 24 }],\n              },\n              {\n                ecCodewordsPerBlock: 16,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 9 }],\n              },\n            ],\n          },\n          {\n            infoBits: null,\n            versionNumber: 5,\n            alignmentPatternCenters: [6, 30],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 108 }],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 43 }],\n              },\n              {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 16 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 11 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 12 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: null,\n            versionNumber: 6,\n            alignmentPatternCenters: [6, 34],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 68 }],\n              },\n              {\n                ecCodewordsPerBlock: 16,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 27 }],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 19 }],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 15 }],\n              },\n            ],\n          },\n          {\n            infoBits: 0x07c94,\n            versionNumber: 7,\n            alignmentPatternCenters: [6, 22, 38],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 78 }],\n              },\n              {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 31 }],\n              },\n              {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 15 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 13 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 14 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x085bc,\n            versionNumber: 8,\n            alignmentPatternCenters: [6, 24, 42],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 97 }],\n              },\n              {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 38 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 39 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 18 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 19 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 14 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x09a99,\n            versionNumber: 9,\n            alignmentPatternCenters: [6, 26, 46],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 116 }],\n              },\n              {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                  { numBlocks: 3, dataCodewordsPerBlock: 36 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 37 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 16 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 17 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 12 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 13 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x0a4d3,\n            versionNumber: 10,\n            alignmentPatternCenters: [6, 28, 50],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 68 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 69 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 43 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 44 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 6, dataCodewordsPerBlock: 19 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 20 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 6, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x0bbf6,\n            versionNumber: 11,\n            alignmentPatternCenters: [6, 30, 54],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 81 }],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 1, dataCodewordsPerBlock: 50 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 51 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 22 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 23 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 3, dataCodewordsPerBlock: 12 },\n                  { numBlocks: 8, dataCodewordsPerBlock: 13 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x0c762,\n            versionNumber: 12,\n            alignmentPatternCenters: [6, 32, 58],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 92 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 93 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                  { numBlocks: 6, dataCodewordsPerBlock: 36 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 37 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 20 },\n                  { numBlocks: 6, dataCodewordsPerBlock: 21 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 7, dataCodewordsPerBlock: 14 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 15 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x0d847,\n            versionNumber: 13,\n            alignmentPatternCenters: [6, 34, 62],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 107 }],\n              },\n              {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                  { numBlocks: 8, dataCodewordsPerBlock: 37 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 38 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 8, dataCodewordsPerBlock: 20 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 21 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                  { numBlocks: 12, dataCodewordsPerBlock: 11 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 12 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x0e60d,\n            versionNumber: 14,\n            alignmentPatternCenters: [6, 26, 46, 66],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 3, dataCodewordsPerBlock: 115 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 116 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 40 },\n                  { numBlocks: 5, dataCodewordsPerBlock: 41 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [\n                  { numBlocks: 11, dataCodewordsPerBlock: 16 },\n                  { numBlocks: 5, dataCodewordsPerBlock: 17 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 11, dataCodewordsPerBlock: 12 },\n                  { numBlocks: 5, dataCodewordsPerBlock: 13 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x0f928,\n            versionNumber: 15,\n            alignmentPatternCenters: [6, 26, 48, 70],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                  { numBlocks: 5, dataCodewordsPerBlock: 87 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 88 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 5, dataCodewordsPerBlock: 41 },\n                  { numBlocks: 5, dataCodewordsPerBlock: 42 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 5, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 7, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 11, dataCodewordsPerBlock: 12 },\n                  { numBlocks: 7, dataCodewordsPerBlock: 13 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x10b78,\n            versionNumber: 16,\n            alignmentPatternCenters: [6, 26, 50, 74],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 5, dataCodewordsPerBlock: 98 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 99 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 7, dataCodewordsPerBlock: 45 },\n                  { numBlocks: 3, dataCodewordsPerBlock: 46 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                  { numBlocks: 15, dataCodewordsPerBlock: 19 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 20 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 3, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 13, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x1145d,\n            versionNumber: 17,\n            alignmentPatternCenters: [6, 30, 54, 78],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 1, dataCodewordsPerBlock: 107 },\n                  { numBlocks: 5, dataCodewordsPerBlock: 108 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 10, dataCodewordsPerBlock: 46 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 47 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 1, dataCodewordsPerBlock: 22 },\n                  { numBlocks: 15, dataCodewordsPerBlock: 23 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                  { numBlocks: 17, dataCodewordsPerBlock: 15 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x12a17,\n            versionNumber: 18,\n            alignmentPatternCenters: [6, 30, 56, 82],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 5, dataCodewordsPerBlock: 120 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 121 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                  { numBlocks: 9, dataCodewordsPerBlock: 43 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 44 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 17, dataCodewordsPerBlock: 22 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 23 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                  { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x13532,\n            versionNumber: 19,\n            alignmentPatternCenters: [6, 30, 58, 86],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 3, dataCodewordsPerBlock: 113 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 114 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                  { numBlocks: 3, dataCodewordsPerBlock: 44 },\n                  { numBlocks: 11, dataCodewordsPerBlock: 45 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                  { numBlocks: 17, dataCodewordsPerBlock: 21 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 22 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                  { numBlocks: 9, dataCodewordsPerBlock: 13 },\n                  { numBlocks: 16, dataCodewordsPerBlock: 14 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x149a6,\n            versionNumber: 20,\n            alignmentPatternCenters: [6, 34, 62, 90],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 3, dataCodewordsPerBlock: 107 },\n                  { numBlocks: 5, dataCodewordsPerBlock: 108 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                  { numBlocks: 3, dataCodewordsPerBlock: 41 },\n                  { numBlocks: 13, dataCodewordsPerBlock: 42 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 15, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 5, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 15, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 10, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x15683,\n            versionNumber: 21,\n            alignmentPatternCenters: [6, 28, 50, 72, 94],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 116 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 117 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 42 }],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 17, dataCodewordsPerBlock: 22 },\n                  { numBlocks: 6, dataCodewordsPerBlock: 23 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 19, dataCodewordsPerBlock: 16 },\n                  { numBlocks: 6, dataCodewordsPerBlock: 17 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x168c9,\n            versionNumber: 22,\n            alignmentPatternCenters: [6, 26, 50, 74, 98],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 111 },\n                  { numBlocks: 7, dataCodewordsPerBlock: 112 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 46 }],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 7, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 16, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 34, dataCodewordsPerBlock: 13 }],\n              },\n            ],\n          },\n          {\n            infoBits: 0x177ec,\n            versionNumber: 23,\n            alignmentPatternCenters: [6, 30, 54, 74, 102],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 121 },\n                  { numBlocks: 5, dataCodewordsPerBlock: 122 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 47 },\n                  { numBlocks: 14, dataCodewordsPerBlock: 48 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 11, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 16, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 14, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x18ec4,\n            versionNumber: 24,\n            alignmentPatternCenters: [6, 28, 54, 80, 106],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 6, dataCodewordsPerBlock: 117 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 118 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 6, dataCodewordsPerBlock: 45 },\n                  { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 11, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 16, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 30, dataCodewordsPerBlock: 16 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 17 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x191e1,\n            versionNumber: 25,\n            alignmentPatternCenters: [6, 32, 58, 84, 110],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                  { numBlocks: 8, dataCodewordsPerBlock: 106 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 107 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 8, dataCodewordsPerBlock: 47 },\n                  { numBlocks: 13, dataCodewordsPerBlock: 48 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 7, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 22, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 22, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 13, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x1afab,\n            versionNumber: 26,\n            alignmentPatternCenters: [6, 30, 58, 86, 114],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 10, dataCodewordsPerBlock: 114 },\n                  { numBlocks: 2, dataCodewordsPerBlock: 115 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 19, dataCodewordsPerBlock: 46 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 47 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 28, dataCodewordsPerBlock: 22 },\n                  { numBlocks: 6, dataCodewordsPerBlock: 23 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 33, dataCodewordsPerBlock: 16 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 17 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x1b08e,\n            versionNumber: 27,\n            alignmentPatternCenters: [6, 34, 62, 90, 118],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 8, dataCodewordsPerBlock: 122 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 123 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 22, dataCodewordsPerBlock: 45 },\n                  { numBlocks: 3, dataCodewordsPerBlock: 46 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 8, dataCodewordsPerBlock: 23 },\n                  { numBlocks: 26, dataCodewordsPerBlock: 24 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 12, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 28, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x1cc1a,\n            versionNumber: 28,\n            alignmentPatternCenters: [6, 26, 50, 74, 98, 122],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 3, dataCodewordsPerBlock: 117 },\n                  { numBlocks: 10, dataCodewordsPerBlock: 118 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 3, dataCodewordsPerBlock: 45 },\n                  { numBlocks: 23, dataCodewordsPerBlock: 46 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 31, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 11, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 31, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x1d33f,\n            versionNumber: 29,\n            alignmentPatternCenters: [6, 30, 54, 78, 102, 126],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 7, dataCodewordsPerBlock: 116 },\n                  { numBlocks: 7, dataCodewordsPerBlock: 117 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 21, dataCodewordsPerBlock: 45 },\n                  { numBlocks: 7, dataCodewordsPerBlock: 46 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 1, dataCodewordsPerBlock: 23 },\n                  { numBlocks: 37, dataCodewordsPerBlock: 24 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 26, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x1ed75,\n            versionNumber: 30,\n            alignmentPatternCenters: [6, 26, 52, 78, 104, 130],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 5, dataCodewordsPerBlock: 115 },\n                  { numBlocks: 10, dataCodewordsPerBlock: 116 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 19, dataCodewordsPerBlock: 47 },\n                  { numBlocks: 10, dataCodewordsPerBlock: 48 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 15, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 25, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 23, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 25, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x1f250,\n            versionNumber: 31,\n            alignmentPatternCenters: [6, 30, 56, 82, 108, 134],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 13, dataCodewordsPerBlock: 115 },\n                  { numBlocks: 3, dataCodewordsPerBlock: 116 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 46 },\n                  { numBlocks: 29, dataCodewordsPerBlock: 47 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 42, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 23, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 28, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x209d5,\n            versionNumber: 32,\n            alignmentPatternCenters: [6, 34, 60, 86, 112, 138],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 115 }],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 10, dataCodewordsPerBlock: 46 },\n                  { numBlocks: 23, dataCodewordsPerBlock: 47 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 10, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 35, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 35, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x216f0,\n            versionNumber: 33,\n            alignmentPatternCenters: [6, 30, 58, 86, 114, 142],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 17, dataCodewordsPerBlock: 115 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 116 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                  { numBlocks: 21, dataCodewordsPerBlock: 47 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 29, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 19, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 11, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 46, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x228ba,\n            versionNumber: 34,\n            alignmentPatternCenters: [6, 34, 62, 90, 118, 146],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 13, dataCodewordsPerBlock: 115 },\n                  { numBlocks: 6, dataCodewordsPerBlock: 116 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                  { numBlocks: 23, dataCodewordsPerBlock: 47 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 44, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 7, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 59, dataCodewordsPerBlock: 16 },\n                  { numBlocks: 1, dataCodewordsPerBlock: 17 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x2379f,\n            versionNumber: 35,\n            alignmentPatternCenters: [6, 30, 54, 78, 102, 126, 150],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 12, dataCodewordsPerBlock: 121 },\n                  { numBlocks: 7, dataCodewordsPerBlock: 122 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 12, dataCodewordsPerBlock: 47 },\n                  { numBlocks: 26, dataCodewordsPerBlock: 48 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 39, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 22, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 41, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x24b0b,\n            versionNumber: 36,\n            alignmentPatternCenters: [6, 24, 50, 76, 102, 128, 154],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 6, dataCodewordsPerBlock: 121 },\n                  { numBlocks: 14, dataCodewordsPerBlock: 122 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 6, dataCodewordsPerBlock: 47 },\n                  { numBlocks: 34, dataCodewordsPerBlock: 48 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 46, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 10, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 64, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x2542e,\n            versionNumber: 37,\n            alignmentPatternCenters: [6, 28, 54, 80, 106, 132, 158],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 17, dataCodewordsPerBlock: 122 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 123 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 29, dataCodewordsPerBlock: 46 },\n                  { numBlocks: 14, dataCodewordsPerBlock: 47 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 49, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 10, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 24, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 46, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x26a64,\n            versionNumber: 38,\n            alignmentPatternCenters: [6, 32, 58, 84, 110, 136, 162],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 4, dataCodewordsPerBlock: 122 },\n                  { numBlocks: 18, dataCodewordsPerBlock: 123 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 13, dataCodewordsPerBlock: 46 },\n                  { numBlocks: 32, dataCodewordsPerBlock: 47 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 48, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 42, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 32, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x27541,\n            versionNumber: 39,\n            alignmentPatternCenters: [6, 26, 54, 82, 110, 138, 166],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 20, dataCodewordsPerBlock: 117 },\n                  { numBlocks: 4, dataCodewordsPerBlock: 118 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 40, dataCodewordsPerBlock: 47 },\n                  { numBlocks: 7, dataCodewordsPerBlock: 48 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 43, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 22, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 10, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 67, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n          {\n            infoBits: 0x28c69,\n            versionNumber: 40,\n            alignmentPatternCenters: [6, 30, 58, 86, 114, 142, 170],\n            errorCorrectionLevels: [\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 19, dataCodewordsPerBlock: 118 },\n                  { numBlocks: 6, dataCodewordsPerBlock: 119 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                  { numBlocks: 18, dataCodewordsPerBlock: 47 },\n                  { numBlocks: 31, dataCodewordsPerBlock: 48 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 34, dataCodewordsPerBlock: 24 },\n                  { numBlocks: 34, dataCodewordsPerBlock: 25 },\n                ],\n              },\n              {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                  { numBlocks: 20, dataCodewordsPerBlock: 15 },\n                  { numBlocks: 61, dataCodewordsPerBlock: 16 },\n                ],\n              },\n            ],\n          },\n        ];\n\n        /***/\n      },\n      /* 11 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        var BitMatrix_1 = __webpack_require__(0);\n        function squareToQuadrilateral(p1, p2, p3, p4) {\n          var dx3 = p1.x - p2.x + p3.x - p4.x;\n          var dy3 = p1.y - p2.y + p3.y - p4.y;\n          if (dx3 === 0 && dy3 === 0) {\n            // Affine\n            return {\n              a11: p2.x - p1.x,\n              a12: p2.y - p1.y,\n              a13: 0,\n              a21: p3.x - p2.x,\n              a22: p3.y - p2.y,\n              a23: 0,\n              a31: p1.x,\n              a32: p1.y,\n              a33: 1,\n            };\n          } else {\n            var dx1 = p2.x - p3.x;\n            var dx2 = p4.x - p3.x;\n            var dy1 = p2.y - p3.y;\n            var dy2 = p4.y - p3.y;\n            var denominator = dx1 * dy2 - dx2 * dy1;\n            var a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n            var a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n            return {\n              a11: p2.x - p1.x + a13 * p2.x,\n              a12: p2.y - p1.y + a13 * p2.y,\n              a13: a13,\n              a21: p4.x - p1.x + a23 * p4.x,\n              a22: p4.y - p1.y + a23 * p4.y,\n              a23: a23,\n              a31: p1.x,\n              a32: p1.y,\n              a33: 1,\n            };\n          }\n        }\n        function quadrilateralToSquare(p1, p2, p3, p4) {\n          // Here, the adjoint serves as the inverse:\n          var sToQ = squareToQuadrilateral(p1, p2, p3, p4);\n          return {\n            a11: sToQ.a22 * sToQ.a33 - sToQ.a23 * sToQ.a32,\n            a12: sToQ.a13 * sToQ.a32 - sToQ.a12 * sToQ.a33,\n            a13: sToQ.a12 * sToQ.a23 - sToQ.a13 * sToQ.a22,\n            a21: sToQ.a23 * sToQ.a31 - sToQ.a21 * sToQ.a33,\n            a22: sToQ.a11 * sToQ.a33 - sToQ.a13 * sToQ.a31,\n            a23: sToQ.a13 * sToQ.a21 - sToQ.a11 * sToQ.a23,\n            a31: sToQ.a21 * sToQ.a32 - sToQ.a22 * sToQ.a31,\n            a32: sToQ.a12 * sToQ.a31 - sToQ.a11 * sToQ.a32,\n            a33: sToQ.a11 * sToQ.a22 - sToQ.a12 * sToQ.a21,\n          };\n        }\n        function times(a, b) {\n          return {\n            a11: a.a11 * b.a11 + a.a21 * b.a12 + a.a31 * b.a13,\n            a12: a.a12 * b.a11 + a.a22 * b.a12 + a.a32 * b.a13,\n            a13: a.a13 * b.a11 + a.a23 * b.a12 + a.a33 * b.a13,\n            a21: a.a11 * b.a21 + a.a21 * b.a22 + a.a31 * b.a23,\n            a22: a.a12 * b.a21 + a.a22 * b.a22 + a.a32 * b.a23,\n            a23: a.a13 * b.a21 + a.a23 * b.a22 + a.a33 * b.a23,\n            a31: a.a11 * b.a31 + a.a21 * b.a32 + a.a31 * b.a33,\n            a32: a.a12 * b.a31 + a.a22 * b.a32 + a.a32 * b.a33,\n            a33: a.a13 * b.a31 + a.a23 * b.a32 + a.a33 * b.a33,\n          };\n        }\n        function extract(image, location) {\n          var qToS = quadrilateralToSquare(\n            { x: 3.5, y: 3.5 },\n            { x: location.dimension - 3.5, y: 3.5 },\n            { x: location.dimension - 6.5, y: location.dimension - 6.5 },\n            { x: 3.5, y: location.dimension - 3.5 }\n          );\n          var sToQ = squareToQuadrilateral(\n            location.topLeft,\n            location.topRight,\n            location.alignmentPattern,\n            location.bottomLeft\n          );\n          var transform = times(sToQ, qToS);\n          var matrix = BitMatrix_1.BitMatrix.createEmpty(\n            location.dimension,\n            location.dimension\n          );\n          var mappingFunction = function (x, y) {\n            var denominator =\n              transform.a13 * x + transform.a23 * y + transform.a33;\n            return {\n              x:\n                (transform.a11 * x + transform.a21 * y + transform.a31) /\n                denominator,\n              y:\n                (transform.a12 * x + transform.a22 * y + transform.a32) /\n                denominator,\n            };\n          };\n          for (var y = 0; y < location.dimension; y++) {\n            for (var x = 0; x < location.dimension; x++) {\n              var xValue = x + 0.5;\n              var yValue = y + 0.5;\n              var sourcePixel = mappingFunction(xValue, yValue);\n              matrix.set(\n                x,\n                y,\n                image.get(Math.floor(sourcePixel.x), Math.floor(sourcePixel.y))\n              );\n            }\n          }\n          return {\n            matrix: matrix,\n            mappingFunction: mappingFunction,\n          };\n        }\n        exports.extract = extract;\n\n        /***/\n      },\n      /* 12 */\n      /***/ function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", { value: true });\n        var MAX_FINDERPATTERNS_TO_SEARCH = 4;\n        var MIN_QUAD_RATIO = 0.5;\n        var MAX_QUAD_RATIO = 1.5;\n        var distance = function (a, b) {\n          return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n        };\n        function sum(values) {\n          return values.reduce(function (a, b) {\n            return a + b;\n          });\n        }\n        // Takes three finder patterns and organizes them into topLeft, topRight, etc\n        function reorderFinderPatterns(pattern1, pattern2, pattern3) {\n          var _a, _b, _c, _d;\n          // Find distances between pattern centers\n          var oneTwoDistance = distance(pattern1, pattern2);\n          var twoThreeDistance = distance(pattern2, pattern3);\n          var oneThreeDistance = distance(pattern1, pattern3);\n          var bottomLeft;\n          var topLeft;\n          var topRight;\n          // Assume one closest to other two is B; A and C will just be guesses at first\n          if (\n            twoThreeDistance >= oneTwoDistance &&\n            twoThreeDistance >= oneThreeDistance\n          ) {\n            (_a = [pattern2, pattern1, pattern3]),\n              (bottomLeft = _a[0]),\n              (topLeft = _a[1]),\n              (topRight = _a[2]);\n          } else if (\n            oneThreeDistance >= twoThreeDistance &&\n            oneThreeDistance >= oneTwoDistance\n          ) {\n            (_b = [pattern1, pattern2, pattern3]),\n              (bottomLeft = _b[0]),\n              (topLeft = _b[1]),\n              (topRight = _b[2]);\n          } else {\n            (_c = [pattern1, pattern3, pattern2]),\n              (bottomLeft = _c[0]),\n              (topLeft = _c[1]),\n              (topRight = _c[2]);\n          }\n          // Use cross product to figure out whether bottomLeft (A) and topRight (C) are correct or flipped in relation to topLeft (B)\n          // This asks whether BC x BA has a positive z component, which is the arrangement we want. If it's negative, then\n          // we've got it flipped around and should swap topRight and bottomLeft.\n          if (\n            (topRight.x - topLeft.x) * (bottomLeft.y - topLeft.y) -\n              (topRight.y - topLeft.y) * (bottomLeft.x - topLeft.x) <\n            0\n          ) {\n            (_d = [topRight, bottomLeft]),\n              (bottomLeft = _d[0]),\n              (topRight = _d[1]);\n          }\n          return {\n            bottomLeft: bottomLeft,\n            topLeft: topLeft,\n            topRight: topRight,\n          };\n        }\n        // Computes the dimension (number of modules on a side) of the QR Code based on the position of the finder patterns\n        function computeDimension(topLeft, topRight, bottomLeft, matrix) {\n          var moduleSize =\n            (sum(countBlackWhiteRun(topLeft, bottomLeft, matrix, 5)) / 7 + // Divide by 7 since the ratio is 1:1:3:1:1\n              sum(countBlackWhiteRun(topLeft, topRight, matrix, 5)) / 7 +\n              sum(countBlackWhiteRun(bottomLeft, topLeft, matrix, 5)) / 7 +\n              sum(countBlackWhiteRun(topRight, topLeft, matrix, 5)) / 7) /\n            4;\n          if (moduleSize < 1) {\n            throw new Error(\"Invalid module size\");\n          }\n          var topDimension = Math.round(\n            distance(topLeft, topRight) / moduleSize\n          );\n          var sideDimension = Math.round(\n            distance(topLeft, bottomLeft) / moduleSize\n          );\n          var dimension = Math.floor((topDimension + sideDimension) / 2) + 7;\n          switch (dimension % 4) {\n            case 0:\n              dimension++;\n              break;\n            case 2:\n              dimension--;\n              break;\n          }\n          return { dimension: dimension, moduleSize: moduleSize };\n        }\n        // Takes an origin point and an end point and counts the sizes of the black white run from the origin towards the end point.\n        // Returns an array of elements, representing the pixel size of the black white run.\n        // Uses a variant of http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\n        function countBlackWhiteRunTowardsPoint(origin, end, matrix, length) {\n          var switchPoints = [\n            { x: Math.floor(origin.x), y: Math.floor(origin.y) },\n          ];\n          var steep = Math.abs(end.y - origin.y) > Math.abs(end.x - origin.x);\n          var fromX;\n          var fromY;\n          var toX;\n          var toY;\n          if (steep) {\n            fromX = Math.floor(origin.y);\n            fromY = Math.floor(origin.x);\n            toX = Math.floor(end.y);\n            toY = Math.floor(end.x);\n          } else {\n            fromX = Math.floor(origin.x);\n            fromY = Math.floor(origin.y);\n            toX = Math.floor(end.x);\n            toY = Math.floor(end.y);\n          }\n          var dx = Math.abs(toX - fromX);\n          var dy = Math.abs(toY - fromY);\n          var error = Math.floor(-dx / 2);\n          var xStep = fromX < toX ? 1 : -1;\n          var yStep = fromY < toY ? 1 : -1;\n          var currentPixel = true;\n          // Loop up until x == toX, but not beyond\n          for (var x = fromX, y = fromY; x !== toX + xStep; x += xStep) {\n            // Does current pixel mean we have moved white to black or vice versa?\n            // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n            // color, advance to next state or end if we are in state 2 already\n            var realX = steep ? y : x;\n            var realY = steep ? x : y;\n            if (matrix.get(realX, realY) !== currentPixel) {\n              currentPixel = !currentPixel;\n              switchPoints.push({ x: realX, y: realY });\n              if (switchPoints.length === length + 1) {\n                break;\n              }\n            }\n            error += dy;\n            if (error > 0) {\n              if (y === toY) {\n                break;\n              }\n              y += yStep;\n              error -= dx;\n            }\n          }\n          var distances = [];\n          for (var i = 0; i < length; i++) {\n            if (switchPoints[i] && switchPoints[i + 1]) {\n              distances.push(distance(switchPoints[i], switchPoints[i + 1]));\n            } else {\n              distances.push(0);\n            }\n          }\n          return distances;\n        }\n        // Takes an origin point and an end point and counts the sizes of the black white run in the origin point\n        // along the line that intersects with the end point. Returns an array of elements, representing the pixel sizes\n        // of the black white run. Takes a length which represents the number of switches from black to white to look for.\n        function countBlackWhiteRun(origin, end, matrix, length) {\n          var _a;\n          var rise = end.y - origin.y;\n          var run = end.x - origin.x;\n          var towardsEnd = countBlackWhiteRunTowardsPoint(\n            origin,\n            end,\n            matrix,\n            Math.ceil(length / 2)\n          );\n          var awayFromEnd = countBlackWhiteRunTowardsPoint(\n            origin,\n            { x: origin.x - run, y: origin.y - rise },\n            matrix,\n            Math.ceil(length / 2)\n          );\n          var middleValue = towardsEnd.shift() + awayFromEnd.shift() - 1; // Substract one so we don't double count a pixel\n          return (_a = awayFromEnd.concat(middleValue)).concat.apply(\n            _a,\n            towardsEnd\n          );\n        }\n        // Takes in a black white run and an array of expected ratios. Returns the average size of the run as well as the \"error\" -\n        // that is the amount the run diverges from the expected ratio\n        function scoreBlackWhiteRun(sequence, ratios) {\n          var averageSize = sum(sequence) / sum(ratios);\n          var error = 0;\n          ratios.forEach(function (ratio, i) {\n            error += Math.pow(sequence[i] - ratio * averageSize, 2);\n          });\n          return { averageSize: averageSize, error: error };\n        }\n        // Takes an X,Y point and an array of sizes and scores the point against those ratios.\n        // For example for a finder pattern takes the ratio list of 1:1:3:1:1 and checks horizontal, vertical and diagonal ratios\n        // against that.\n        function scorePattern(point, ratios, matrix) {\n          try {\n            var horizontalRun = countBlackWhiteRun(\n              point,\n              { x: -1, y: point.y },\n              matrix,\n              ratios.length\n            );\n            var verticalRun = countBlackWhiteRun(\n              point,\n              { x: point.x, y: -1 },\n              matrix,\n              ratios.length\n            );\n            var topLeftPoint = {\n              x: Math.max(0, point.x - point.y) - 1,\n              y: Math.max(0, point.y - point.x) - 1,\n            };\n            var topLeftBottomRightRun = countBlackWhiteRun(\n              point,\n              topLeftPoint,\n              matrix,\n              ratios.length\n            );\n            var bottomLeftPoint = {\n              x: Math.min(matrix.width, point.x + point.y) + 1,\n              y: Math.min(matrix.height, point.y + point.x) + 1,\n            };\n            var bottomLeftTopRightRun = countBlackWhiteRun(\n              point,\n              bottomLeftPoint,\n              matrix,\n              ratios.length\n            );\n            var horzError = scoreBlackWhiteRun(horizontalRun, ratios);\n            var vertError = scoreBlackWhiteRun(verticalRun, ratios);\n            var diagDownError = scoreBlackWhiteRun(\n              topLeftBottomRightRun,\n              ratios\n            );\n            var diagUpError = scoreBlackWhiteRun(bottomLeftTopRightRun, ratios);\n            var ratioError = Math.sqrt(\n              horzError.error * horzError.error +\n                vertError.error * vertError.error +\n                diagDownError.error * diagDownError.error +\n                diagUpError.error * diagUpError.error\n            );\n            var avgSize =\n              (horzError.averageSize +\n                vertError.averageSize +\n                diagDownError.averageSize +\n                diagUpError.averageSize) /\n              4;\n            var sizeError =\n              (Math.pow(horzError.averageSize - avgSize, 2) +\n                Math.pow(vertError.averageSize - avgSize, 2) +\n                Math.pow(diagDownError.averageSize - avgSize, 2) +\n                Math.pow(diagUpError.averageSize - avgSize, 2)) /\n              avgSize;\n            return ratioError + sizeError;\n          } catch (_a) {\n            return Infinity;\n          }\n        }\n        function recenterLocation(matrix, p) {\n          var leftX = Math.round(p.x);\n          while (matrix.get(leftX, Math.round(p.y))) {\n            leftX--;\n          }\n          var rightX = Math.round(p.x);\n          while (matrix.get(rightX, Math.round(p.y))) {\n            rightX++;\n          }\n          var x = (leftX + rightX) / 2;\n          var topY = Math.round(p.y);\n          while (matrix.get(Math.round(x), topY)) {\n            topY--;\n          }\n          var bottomY = Math.round(p.y);\n          while (matrix.get(Math.round(x), bottomY)) {\n            bottomY++;\n          }\n          var y = (topY + bottomY) / 2;\n          return { x: x, y: y };\n        }\n        function locate(matrix) {\n          var finderPatternQuads = [];\n          var activeFinderPatternQuads = [];\n          var alignmentPatternQuads = [];\n          var activeAlignmentPatternQuads = [];\n          var _loop_1 = function (y) {\n            var length_1 = 0;\n            var lastBit = false;\n            var scans = [0, 0, 0, 0, 0];\n            var _loop_2 = function (x) {\n              var v = matrix.get(x, y);\n              if (v === lastBit) {\n                length_1++;\n              } else {\n                scans = [scans[1], scans[2], scans[3], scans[4], length_1];\n                length_1 = 1;\n                lastBit = v;\n                // Do the last 5 color changes ~ match the expected ratio for a finder pattern? 1:1:3:1:1 of b:w:b:w:b\n                var averageFinderPatternBlocksize = sum(scans) / 7;\n                var validFinderPattern =\n                  Math.abs(scans[0] - averageFinderPatternBlocksize) <\n                    averageFinderPatternBlocksize &&\n                  Math.abs(scans[1] - averageFinderPatternBlocksize) <\n                    averageFinderPatternBlocksize &&\n                  Math.abs(scans[2] - 3 * averageFinderPatternBlocksize) <\n                    3 * averageFinderPatternBlocksize &&\n                  Math.abs(scans[3] - averageFinderPatternBlocksize) <\n                    averageFinderPatternBlocksize &&\n                  Math.abs(scans[4] - averageFinderPatternBlocksize) <\n                    averageFinderPatternBlocksize &&\n                  !v; // And make sure the current pixel is white since finder patterns are bordered in white\n                // Do the last 3 color changes ~ match the expected ratio for an alignment pattern? 1:1:1 of w:b:w\n                var averageAlignmentPatternBlocksize = sum(scans.slice(-3)) / 3;\n                var validAlignmentPattern =\n                  Math.abs(scans[2] - averageAlignmentPatternBlocksize) <\n                    averageAlignmentPatternBlocksize &&\n                  Math.abs(scans[3] - averageAlignmentPatternBlocksize) <\n                    averageAlignmentPatternBlocksize &&\n                  Math.abs(scans[4] - averageAlignmentPatternBlocksize) <\n                    averageAlignmentPatternBlocksize &&\n                  v; // Is the current pixel black since alignment patterns are bordered in black\n                if (validFinderPattern) {\n                  // Compute the start and end x values of the large center black square\n                  var endX_1 = x - scans[3] - scans[4];\n                  var startX_1 = endX_1 - scans[2];\n                  var line = { startX: startX_1, endX: endX_1, y: y };\n                  // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n                  // that line as the starting point.\n                  var matchingQuads = activeFinderPatternQuads.filter(function (\n                    q\n                  ) {\n                    return (\n                      (startX_1 >= q.bottom.startX &&\n                        startX_1 <= q.bottom.endX) ||\n                      (endX_1 >= q.bottom.startX &&\n                        startX_1 <= q.bottom.endX) ||\n                      (startX_1 <= q.bottom.startX &&\n                        endX_1 >= q.bottom.endX &&\n                        scans[2] / (q.bottom.endX - q.bottom.startX) <\n                          MAX_QUAD_RATIO &&\n                        scans[2] / (q.bottom.endX - q.bottom.startX) >\n                          MIN_QUAD_RATIO)\n                    );\n                  });\n                  if (matchingQuads.length > 0) {\n                    matchingQuads[0].bottom = line;\n                  } else {\n                    activeFinderPatternQuads.push({ top: line, bottom: line });\n                  }\n                }\n                if (validAlignmentPattern) {\n                  // Compute the start and end x values of the center black square\n                  var endX_2 = x - scans[4];\n                  var startX_2 = endX_2 - scans[3];\n                  var line = { startX: startX_2, y: y, endX: endX_2 };\n                  // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n                  // that line as the starting point.\n                  var matchingQuads = activeAlignmentPatternQuads.filter(\n                    function (q) {\n                      return (\n                        (startX_2 >= q.bottom.startX &&\n                          startX_2 <= q.bottom.endX) ||\n                        (endX_2 >= q.bottom.startX &&\n                          startX_2 <= q.bottom.endX) ||\n                        (startX_2 <= q.bottom.startX &&\n                          endX_2 >= q.bottom.endX &&\n                          scans[2] / (q.bottom.endX - q.bottom.startX) <\n                            MAX_QUAD_RATIO &&\n                          scans[2] / (q.bottom.endX - q.bottom.startX) >\n                            MIN_QUAD_RATIO)\n                      );\n                    }\n                  );\n                  if (matchingQuads.length > 0) {\n                    matchingQuads[0].bottom = line;\n                  } else {\n                    activeAlignmentPatternQuads.push({\n                      top: line,\n                      bottom: line,\n                    });\n                  }\n                }\n              }\n            };\n            for (var x = -1; x <= matrix.width; x++) {\n              _loop_2(x);\n            }\n            finderPatternQuads.push.apply(\n              finderPatternQuads,\n              activeFinderPatternQuads.filter(function (q) {\n                return q.bottom.y !== y && q.bottom.y - q.top.y >= 2;\n              })\n            );\n            activeFinderPatternQuads = activeFinderPatternQuads.filter(\n              function (q) {\n                return q.bottom.y === y;\n              }\n            );\n            alignmentPatternQuads.push.apply(\n              alignmentPatternQuads,\n              activeAlignmentPatternQuads.filter(function (q) {\n                return q.bottom.y !== y;\n              })\n            );\n            activeAlignmentPatternQuads = activeAlignmentPatternQuads.filter(\n              function (q) {\n                return q.bottom.y === y;\n              }\n            );\n          };\n          for (var y = 0; y <= matrix.height; y++) {\n            _loop_1(y);\n          }\n          finderPatternQuads.push.apply(\n            finderPatternQuads,\n            activeFinderPatternQuads.filter(function (q) {\n              return q.bottom.y - q.top.y >= 2;\n            })\n          );\n          alignmentPatternQuads.push.apply(\n            alignmentPatternQuads,\n            activeAlignmentPatternQuads\n          );\n          var finderPatternGroups = finderPatternQuads\n            .filter(function (q) {\n              return q.bottom.y - q.top.y >= 2;\n            }) // All quads must be at least 2px tall since the center square is larger than a block\n            .map(function (q) {\n              var x =\n                (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) /\n                4;\n              var y = (q.top.y + q.bottom.y + 1) / 2;\n              if (!matrix.get(Math.round(x), Math.round(y))) {\n                return;\n              }\n              var lengths = [\n                q.top.endX - q.top.startX,\n                q.bottom.endX - q.bottom.startX,\n                q.bottom.y - q.top.y + 1,\n              ];\n              var size = sum(lengths) / lengths.length;\n              var score = scorePattern(\n                { x: Math.round(x), y: Math.round(y) },\n                [1, 1, 3, 1, 1],\n                matrix\n              );\n              return { score: score, x: x, y: y, size: size };\n            })\n            .filter(function (q) {\n              return !!q;\n            }) // Filter out any rejected quads from above\n            .sort(function (a, b) {\n              return a.score - b.score;\n            })\n            // Now take the top finder pattern options and try to find 2 other options with a similar size.\n            .map(function (point, i, finderPatterns) {\n              if (i > MAX_FINDERPATTERNS_TO_SEARCH) {\n                return null;\n              }\n              var otherPoints = finderPatterns\n                .filter(function (p, ii) {\n                  return i !== ii;\n                })\n                .map(function (p) {\n                  return {\n                    x: p.x,\n                    y: p.y,\n                    score:\n                      p.score + Math.pow(p.size - point.size, 2) / point.size,\n                    size: p.size,\n                  };\n                })\n                .sort(function (a, b) {\n                  return a.score - b.score;\n                });\n              if (otherPoints.length < 2) {\n                return null;\n              }\n              var score =\n                point.score + otherPoints[0].score + otherPoints[1].score;\n              return {\n                points: [point].concat(otherPoints.slice(0, 2)),\n                score: score,\n              };\n            })\n            .filter(function (q) {\n              return !!q;\n            }) // Filter out any rejected finder patterns from above\n            .sort(function (a, b) {\n              return a.score - b.score;\n            });\n          if (finderPatternGroups.length === 0) {\n            return null;\n          }\n          var _a = reorderFinderPatterns(\n              finderPatternGroups[0].points[0],\n              finderPatternGroups[0].points[1],\n              finderPatternGroups[0].points[2]\n            ),\n            topRight = _a.topRight,\n            topLeft = _a.topLeft,\n            bottomLeft = _a.bottomLeft;\n          var alignment = findAlignmentPattern(\n            matrix,\n            alignmentPatternQuads,\n            topRight,\n            topLeft,\n            bottomLeft\n          );\n          var result = [];\n          if (alignment) {\n            result.push({\n              alignmentPattern: {\n                x: alignment.alignmentPattern.x,\n                y: alignment.alignmentPattern.y,\n              },\n              bottomLeft: { x: bottomLeft.x, y: bottomLeft.y },\n              dimension: alignment.dimension,\n              topLeft: { x: topLeft.x, y: topLeft.y },\n              topRight: { x: topRight.x, y: topRight.y },\n            });\n          }\n          // We normally use the center of the quads as the location of the tracking points, which is optimal for most cases and will account\n          // for a skew in the image. However, In some cases, a slight skew might not be real and instead be caused by image compression\n          // errors and/or low resolution. For those cases, we'd be better off centering the point exactly in the middle of the black area. We\n          // compute and return the location data for the naively centered points as it is little additional work and allows for multiple\n          // attempts at decoding harder images.\n          var midTopRight = recenterLocation(matrix, topRight);\n          var midTopLeft = recenterLocation(matrix, topLeft);\n          var midBottomLeft = recenterLocation(matrix, bottomLeft);\n          var centeredAlignment = findAlignmentPattern(\n            matrix,\n            alignmentPatternQuads,\n            midTopRight,\n            midTopLeft,\n            midBottomLeft\n          );\n          if (centeredAlignment) {\n            result.push({\n              alignmentPattern: {\n                x: centeredAlignment.alignmentPattern.x,\n                y: centeredAlignment.alignmentPattern.y,\n              },\n              bottomLeft: { x: midBottomLeft.x, y: midBottomLeft.y },\n              topLeft: { x: midTopLeft.x, y: midTopLeft.y },\n              topRight: { x: midTopRight.x, y: midTopRight.y },\n              dimension: centeredAlignment.dimension,\n            });\n          }\n          if (result.length === 0) {\n            return null;\n          }\n          return result;\n        }\n        exports.locate = locate;\n        function findAlignmentPattern(\n          matrix,\n          alignmentPatternQuads,\n          topRight,\n          topLeft,\n          bottomLeft\n        ) {\n          var _a;\n          // Now that we've found the three finder patterns we can determine the blockSize and the size of the QR code.\n          // We'll use these to help find the alignment pattern but also later when we do the extraction.\n          var dimension;\n          var moduleSize;\n          try {\n            (_a = computeDimension(topLeft, topRight, bottomLeft, matrix)),\n              (dimension = _a.dimension),\n              (moduleSize = _a.moduleSize);\n          } catch (e) {\n            return null;\n          }\n          // Now find the alignment pattern\n          var bottomRightFinderPattern = {\n            x: topRight.x - topLeft.x + bottomLeft.x,\n            y: topRight.y - topLeft.y + bottomLeft.y,\n          };\n          var modulesBetweenFinderPatterns =\n            (distance(topLeft, bottomLeft) + distance(topLeft, topRight)) /\n            2 /\n            moduleSize;\n          var correctionToTopLeft = 1 - 3 / modulesBetweenFinderPatterns;\n          var expectedAlignmentPattern = {\n            x:\n              topLeft.x +\n              correctionToTopLeft * (bottomRightFinderPattern.x - topLeft.x),\n            y:\n              topLeft.y +\n              correctionToTopLeft * (bottomRightFinderPattern.y - topLeft.y),\n          };\n          var alignmentPatterns = alignmentPatternQuads\n            .map(function (q) {\n              var x =\n                (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) /\n                4;\n              var y = (q.top.y + q.bottom.y + 1) / 2;\n              if (!matrix.get(Math.floor(x), Math.floor(y))) {\n                return;\n              }\n              var lengths = [\n                q.top.endX - q.top.startX,\n                q.bottom.endX - q.bottom.startX,\n                q.bottom.y - q.top.y + 1,\n              ];\n              var size = sum(lengths) / lengths.length;\n              var sizeScore = scorePattern(\n                { x: Math.floor(x), y: Math.floor(y) },\n                [1, 1, 1],\n                matrix\n              );\n              var score =\n                sizeScore + distance({ x: x, y: y }, expectedAlignmentPattern);\n              return { x: x, y: y, score: score };\n            })\n            .filter(function (v) {\n              return !!v;\n            })\n            .sort(function (a, b) {\n              return a.score - b.score;\n            });\n          // If there are less than 15 modules between finder patterns it's a version 1 QR code and as such has no alignmemnt pattern\n          // so we can only use our best guess.\n          var alignmentPattern =\n            modulesBetweenFinderPatterns >= 15 && alignmentPatterns.length\n              ? alignmentPatterns[0]\n              : expectedAlignmentPattern;\n          return { alignmentPattern: alignmentPattern, dimension: dimension };\n        }\n\n        /***/\n      },\n      /******/\n    ]\n  )[\"default\"];\n});\n"]}